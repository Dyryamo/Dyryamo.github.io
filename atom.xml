<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>学海无涯</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-25T08:06:32.264Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mr zhong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>mybatis</title>
    <link href="http://yoursite.com/2018/11/12/mybatis/"/>
    <id>http://yoursite.com/2018/11/12/mybatis/</id>
    <published>2018-11-12T11:51:09.000Z</published>
    <updated>2018-11-25T08:06:32.264Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mybatis-半自动框架，轻量级框架。-hibernate-时全自动。"><a href="#mybatis-半自动框架，轻量级框架。-hibernate-时全自动。" class="headerlink" title="mybatis 半自动框架，轻量级框架。 hibernate 时全自动。"></a>mybatis 半自动框架，轻量级框架。 hibernate 时全自动。</h1><p>对比</p><ol><li>JDBC sql 嵌入在java 代码中，耦合度高，不易维护</li><li>hibernate JPA 全自动，内部生产sql 不易优化，基于全映射全制动框架 大量字段的pojo进行部分映射比较困难</li></ol><h1 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h1><ol><li>根据xml 配置文件 （ 全局配置文件创建一个SQLSessionFactory 对象，有 数据源和一些运行的环境信息、</li><li>sql 映射信息，配置了每一个sql 以及sql 中的封装规则</li><li>讲sql 映射文件注册在全局配置文件中</li><li>写代码<ol><li>根据全局配置文件得到一个SqlSessionFactory 对象来进行增删该查</li><li>一个sqlsession就是代表一次会话，用完关闭</li><li>使用sql的唯一标志高数mybatis 执行那一个sql</li></ol></li></ol><h1 id="mybatis-开发dao-两种方法"><a href="#mybatis-开发dao-两种方法" class="headerlink" title="mybatis 开发dao 两种方法"></a>mybatis 开发dao 两种方法</h1><pre><code>原始原始dao的 开发方发（程序员编写dao 接口和dao 实现类）(掌握)mybatis 的 mapper 接口 （相当于dao 接口 ) 代理开发方法(掌握)</code></pre><h1 id="mybatis-的配置文件sqlMapConifg"><a href="#mybatis-的配置文件sqlMapConifg" class="headerlink" title="mybatis 的配置文件sqlMapConifg"></a>mybatis 的配置文件sqlMapConifg</h1><h1 id="mabatis-核心"><a href="#mabatis-核心" class="headerlink" title="mabatis 核心"></a>mabatis 核心</h1><pre><code>mybatis 输入映射mybatis 输出映射</code></pre><h1 id="mybatis-的动态sql"><a href="#mybatis-的动态sql" class="headerlink" title="mybatis 的动态sql"></a>mybatis 的动态sql</h1><p># </p><h1 id="SqlMapconfig-xml-时mybatis-的全局配置文件"><a href="#SqlMapconfig-xml-时mybatis-的全局配置文件" class="headerlink" title="SqlMapconfig.xml 时mybatis 的全局配置文件"></a>SqlMapconfig.xml 时mybatis 的全局配置文件</h1><pre><code>配置了数据源,事务等mybatis 运行文件呢mapper.xml 配置映射关系</code></pre><h1 id="SqlSessionFactory-回话工厂"><a href="#SqlSessionFactory-回话工厂" class="headerlink" title="SqlSessionFactory  回话工厂"></a>SqlSessionFactory  回话工厂</h1><pre><code>创建回话 SqlSession</code></pre><h1 id="SqlSession-面向用户的接口"><a href="#SqlSession-面向用户的接口" class="headerlink" title="SqlSession 面向用户的接口"></a>SqlSession 面向用户的接口</h1><pre><code>作用 操作数据库    发出增删改查</code></pre><h2 id="Excuete执行器-是一个接口-有两个实现-基本执行器-缓存执行器"><a href="#Excuete执行器-是一个接口-有两个实现-基本执行器-缓存执行器" class="headerlink" title="Excuete执行器 是一个接口,有两个实现,(基本执行器,缓存执行器)"></a>Excuete执行器 是一个接口,有两个实现,(基本执行器,缓存执行器)</h2><h2 id="mapped-Statement-底层封装对象"><a href="#mapped-Statement-底层封装对象" class="headerlink" title="mapped Statement (底层封装对象)"></a>mapped Statement (底层封装对象)</h2><pre><code>作用 对操作数据库进行封装 包括sql 语句,输入参数,输出结果类型        </code></pre><h1 id="typeAliases-别名-重点"><a href="#typeAliases-别名-重点" class="headerlink" title="typeAliases (别名) 重点"></a>typeAliases (别名) 重点</h1><h2 id="需求"><a href="#需求" class="headerlink" title="需求,"></a>需求,</h2><pre><code>在mapper.xml 中定义了很多的statement ,statement 需要parameterType 制定输入参数的类型,需要resultType 制定输出结果的映射类型如果在制定类时输入类型的全路径,不方便进行开发, 可以针对paramterType 或者resultType 制定的类型定义了一些比别名, 在mapper.xml 中沟通过</code></pre><h2 id="mybatis-默认支持一些系统的别名"><a href="#mybatis-默认支持一些系统的别名" class="headerlink" title="mybatis 默认支持一些系统的别名"></a>mybatis 默认支持一些系统的别名</h2><h2 id="自己定义的"><a href="#自己定义的" class="headerlink" title="自己定义的"></a>自己定义的</h2><pre><code>单个定义&lt;typeAliases&gt;    &lt;typeAlias type=&quot;com.mybatis.pojo.Employee&quot; alias=&quot;Employee&quot;/&gt;&lt;/typeAliases&gt;批量定义&lt;typeAliases&gt;    &lt;package 包名/&gt;&lt;/typeAliases&gt;</code></pre><h1 id="typeHandler-类型处理器"><a href="#typeHandler-类型处理器" class="headerlink" title="typeHandler (类型处理器)"></a>typeHandler (类型处理器)</h1><p>mybatis 中通过typehandler 完成jdbc 和java 类型的转换<br>日常,已经满足,不用转换</p><h1 id="映射器"><a href="#映射器" class="headerlink" title="映射器"></a>映射器</h1><pre><code>(mapper 配置)单个映射文件的加载&lt;mappers&gt;    &lt;mapper resource=&quot;sqlmap/User.xml&quot;/&gt;&lt;/mappers&gt;&lt;mappers&gt;    &lt;mapper url=&quot;file://&quot;/&gt;&lt;/mappers&gt;&lt;!-- 通过mapper 接口加载映射文件    通过一些规范,需要讲mapper 接口类名和mapper.xml 映射文件保持一致,且在同一个目录中    上面规范的前提时使用mapper 代理方法--&gt;&lt;mappers&gt;    &lt;mapper class=&quot;com.mybatis.pojo.Employee&quot;/&gt;&lt;/mappers&gt;批量加载mapper 制定mapper接口的报名,mybatis 自动加载包名下所有的mapper&lt;mappers&gt;    &lt;mapper class=&quot;包名&quot;/&gt;&lt;/mappers&gt;</code></pre><h1 id="传入映射"><a href="#传入映射" class="headerlink" title="传入映射"></a>传入映射</h1><pre><code>通过parameterType 制定输入参数的类型, 类型可以时简单类型,hashmap pojo 的包装类型</code></pre><h2 id="6-1-传递pojo的包装对象"><a href="#6-1-传递pojo的包装对象" class="headerlink" title="6.1 传递pojo的包装对象"></a>6.1 传递pojo的包装对象</h2><h3 id="需求-1"><a href="#需求-1" class="headerlink" title="需求"></a>需求</h3><pre><code>完成用户信息的综合查询,需要传入查询条件(可能包括用户信息,商品,订单)针对上面的需求,建议使用自定义包装类型的pojo在包装类型中,</code></pre><h1 id="补充-po-pojo-vo-bo"><a href="#补充-po-pojo-vo-bo" class="headerlink" title="补充 po ,pojo , vo , bo"></a>补充 po ,pojo , vo , bo</h1><p><a href="https://blog.csdn.net/u011870547/article/details/81077153" target="_blank" rel="noopener">原博客出处</a></p><h1 id="resultType"><a href="#resultType" class="headerlink" title="resultType"></a>resultType</h1><p>使用resultType 进行输入映射, 只有查询出来的列明和pojo 中的属性名一致时,该列才能映射成功<br>    如果查询出来的列名和pojo 中的属性名去全部不一致时,没有创建pojo 对象<br>    只要查询出来的列名和pojo 中的一个属性一致,就会创建pojo 对象</p><h2 id="resultMap"><a href="#resultMap" class="headerlink" title="resultMap"></a>resultMap</h2><pre><code>如果查询出来的列名和pojo 的属性名不一致,通过定义一个resultMap和列名pojo 属性名之间的一个映射关系    &lt;resultMap type=&quot;返回类型&quot; id=&quot;userResultMap&quot;&gt;         &lt;id column=&quot;列&quot; property=&quot;pojo&quot; /&gt;&lt;!-- 唯一表示符 --&gt;          ...     &lt;/resultMap&gt;</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;mybatis-半自动框架，轻量级框架。-hibernate-时全自动。&quot;&gt;&lt;a href=&quot;#mybatis-半自动框架，轻量级框架。-hibernate-时全自动。&quot; class=&quot;headerlink&quot; title=&quot;mybatis 半自动框架，轻量级框架。
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>spring_MVC</title>
    <link href="http://yoursite.com/2018/11/07/spring-MVC/"/>
    <id>http://yoursite.com/2018/11/07/spring-MVC/</id>
    <published>2018-11-08T07:48:26.000Z</published>
    <updated>2018-11-20T10:51:17.520Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是springmvc"><a href="#什么是springmvc" class="headerlink" title="什么是springmvc"></a>什么是springmvc</h1><pre><code>前端控制器，处理控制器，处理器适配器，试图解析器spring mvc 是spring 框架的一个模块，springmvc 和spring 无需通过中间层整合层整合spring mvc 是 mvc 的一个框架</code></pre><h1 id="mvc"><a href="#mvc" class="headerlink" title="mvc"></a>mvc</h1><p><img src="/2018/11/07/spring-MVC/mvc设计模式.png" alt="mvc">   </p><h1 id="springmvc-入门程序"><a href="#springmvc-入门程序" class="headerlink" title="springmvc 入门程序"></a>springmvc 入门程序</h1><pre><code>目的： 对前端控制器， 处理器映射器，处理器适配器，试图解析器学习非注解的处理器映射器，处理器控制器注解的处理器的映射器，处理器适配器</code></pre><h1 id="springmvc-和mybatis-整合"><a href="#springmvc-和mybatis-整合" class="headerlink" title="springmvc 和mybatis 整合"></a>springmvc 和mybatis 整合</h1><h1 id="springmvc-注解开发"><a href="#springmvc-注解开发" class="headerlink" title="springmvc 注解开发"></a>springmvc 注解开发</h1><pre><code>常用注解学习参数绑定自定义参数绑定</code></pre><h1 id="浏览器访问，后台过程"><a href="#浏览器访问，后台过程" class="headerlink" title="浏览器访问，后台过程"></a>浏览器访问，后台过程</h1><h2 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h2><pre><code>发起请求到前段控制器    DispatchServlet</code></pre><h2 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h2><pre><code>前段控制器请求handlerMapping 查找handler(可以根据xml 配置，注解进行查找)</code></pre><h2 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h2><pre><code>处理器映射handlerMapping 想前段返回handler</code></pre><h2 id="第四步"><a href="#第四步" class="headerlink" title="第四步"></a>第四步</h2><pre><code>前段控制器调用处理器适配器去执行handler</code></pre><h2 id="第五步"><a href="#第五步" class="headerlink" title="第五步"></a>第五步</h2><pre><code>处理器适配器执行handler</code></pre><h2 id="第六步"><a href="#第六步" class="headerlink" title="第六步"></a>第六步</h2><pre><code>handler返回ModelandView 给适配器ModelAndView 是pringmvc 框架的一个底层对象， 包括model and view</code></pre><h2 id="第七步"><a href="#第七步" class="headerlink" title="第七步"></a>第七步</h2><pre><code>处理器适配器给前段控制器返回一个model and view</code></pre><h2 id="第八步"><a href="#第八步" class="headerlink" title="第八步"></a>第八步</h2><pre><code>前段控制器请求视图解析器去进行视图解析根据逻辑视图解析成真正的视图 （jsp</code></pre><h2 id="第九步"><a href="#第九步" class="headerlink" title="第九步"></a>第九步</h2><pre><code>视图解析器向前段控制器返回view</code></pre><h2 id="第十步"><a href="#第十步" class="headerlink" title="第十步"></a>第十步</h2><pre><code>前段控制器进行视图渲染视图渲染将模型数据在（ModelAndView 中）填充到request域</code></pre><h2 id="第十一步"><a href="#第十一步" class="headerlink" title="第十一步"></a>第十一步</h2><pre><code>前段控制器向用户响应response</code></pre><p>组件 :</p><table><thead><tr><th>名</th><th>作用</th><th>补充</th></tr></thead><tbody><tr><td>前段控制器 DispatcherServlet</td><td>接受请求，响应结果</td><td>相当于转发器</td></tr><tr><td>处理器 HandlerMapping</td><td>根据请求url 查找handler</td><td></td></tr><tr><td>处理器适配器 HandlerAdpter</td><td>按照特定规则执行handler</td><td>编写handler时要按照HandlerAdpter要求做，才能正确执行handler</td></tr><tr><td>view resovler</td><td>进行视图解析，根据逻辑视图名解析成真正的视图 (view)</td><td></td></tr><tr><td>视图view</td><td>view 是一个接口，实现类支持不同view类型</td></tr></tbody></table><h1 id="开发handler"><a href="#开发handler" class="headerlink" title="开发handler"></a>开发handler</h1><p>需要实现controler 接口才能由org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter 执行</p><h1 id="非注解的处理器映射器和适配器"><a href="#非注解的处理器映射器和适配器" class="headerlink" title="非注解的处理器映射器和适配器"></a>非注解的处理器映射器和适配器</h1><h2 id="非注解的处理器映射器"><a href="#非注解的处理器映射器" class="headerlink" title="非注解的处理器映射器"></a>非注解的处理器映射器</h2><pre><code>org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping   </code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 2 --&gt;</span> </span><br><span class="line">      <span class="tag">&lt;<span class="name">bean</span> <span class="attr">class</span>=<span class="string">"org.springframework.web.servlet.handler.SimpleUrlHandlerMapping"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"mappings"</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">props</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"/queryItems1.action"</span>&gt;</span>ItemController<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">prop</span> <span class="attr">key</span>=<span class="string">"/queryItems2.action"</span>&gt;</span>ItemController<span class="tag">&lt;/<span class="name">prop</span>&gt;</span></span><br><span class="line">      </span><br><span class="line">      <span class="tag">&lt;/<span class="name">props</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br></pre></td></tr></table></figure><pre><code>多个映射器可以并存，前段控制器判断url能让谁处理就让谁处理</code></pre><h2 id="非注解的适配器"><a href="#非注解的适配器" class="headerlink" title="非注解的适配器"></a>非注解的适配器</h2><ol><li> org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter<br> 要求编写handler要实现Controller 接口</li><li>org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter<br> 要求编写的handler实现HttpRequestHandler</li></ol><h1 id="DispacherServlet-properties"><a href="#DispacherServlet-properties" class="headerlink" title="DispacherServlet.properties"></a>DispacherServlet.properties</h1><pre><code>前段控制器从上面文件中加载的处理器映射器，适配器，视图解析器等组件，如果不在springmvc.xml 中配置，使用默认加载的    </code></pre><h1 id="注解的处理器映射器和适配器"><a href="#注解的处理器映射器和适配器" class="headerlink" title="注解的处理器映射器和适配器"></a>注解的处理器映射器和适配器</h1><pre><code>  &lt;bean class=&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter&quot;&gt;&lt;/bean&gt;  &lt;bean class=&quot;org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping&quot;&gt;&lt;/bean&gt;&lt;!-- 使用 annotation-driven 可以代替上面两行配置 --&gt;&lt;mvc:annotation-driven&gt;&lt;/mvc:annotation-driven&gt;</code></pre><h1 id="开发注解handler"><a href="#开发注解handler" class="headerlink" title="开发注解handler"></a>开发注解handler</h1><pre><code>使用注解的映射器和注解的适配器</code></pre><h1 id="写完handler之后，需要在-spring-容器中-配置"><a href="#写完handler之后，需要在-spring-容器中-配置" class="headerlink" title="写完handler之后，需要在 spring 容器中 配置      "></a>写完handler之后，需要在 spring 容器中 配置      <bean class="com.ssm.controller.ItemsController3"></bean></h1><p>当多个注解时，可以通过 </p><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>表现层</td><td>springmvc</td></tr><tr><td>业务层</td><td>service 接口</td></tr><tr><td>持久层</td><td>mybatis</td></tr><tr><td>底层数据库mysql</td></tr></tbody></table><p>spring 将各层进行整合，通过spring 管理持久层的mapper 相当于dao接口<br>通过spring 管理业务层 service ，service 中可以调用Mapper 接口<br>spring 进行事务控制<br>通过spring 管理表现层 hannder handler 中可以调用service 接口<br>mapper service handder 都是javabean</p><h1 id="log4j"><a href="#log4j" class="headerlink" title="log4j"></a>log4j</h1><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[<span class="string">点击查看log4j讲解</span>](<span class="link">http://www.cnblogs.com/godtrue/p/6442273.html</span>)</span><br><span class="line">log4j.rootCategory=INFO, stdout</span><br><span class="line">log4j.rootLogger=info, stdout</span><br><span class="line"></span><br><span class="line"><span class="section">### stdout ###</span></span><br><span class="line"></span><br><span class="line">log4j.appender.stdout=org.apache.log4j.ConsoleAppender</span><br><span class="line">log4j.appender.stdout.Target=System.out</span><br><span class="line">log4j.appender.stdout.layout=org.apache.log4j.PatternLayout</span><br><span class="line">log4j.appender.stdout.layout.ConversionPattern=%d&#123;ABSOLUTE&#125; %5p - %m%n</span><br></pre></td></tr></table></figure><h1 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h1><figure class="highlight dust"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE mapper</span></span></span><br><span class="line"><span class="xml">    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"</span></span><br><span class="line"><span class="xml">    "http://mybatis.org/dtd/mybatis-3-mapper.dtd"&gt;</span></span><br><span class="line"><span class="xml"> </span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">mapper</span> <span class="attr">namespace</span>=<span class="string">"com.mybatis.pojo"</span>&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="comment">&lt;!-- 在映射文件中可以设置很多sql 语句</span></span></span><br><span class="line"><span class="xml">    id 表示映射文件中的sql 被称作 statement 的id</span></span><br><span class="line"><span class="xml">    讲sql 语句封装到statement 对象中,所以id 称作statement 的id</span></span><br><span class="line"><span class="xml">    paramenterType 指定输入参数类型</span></span><br><span class="line"><span class="xml">    #</span><span class="template-variable">&#123;&#125;</span><span class="xml"> 表示一个占位符</span></span><br><span class="line"><span class="xml">    #</span><span class="template-variable">&#123;id&#125;</span><span class="xml"> 其中id 表示输入参数,参数名称就是id 如果输入参数是简单值,#</span><span class="template-variable">&#123;&#125;</span><span class="xml"> 参数名称可以任意,可以时value 或者其他类型</span></span><br><span class="line"><span class="xml">    resultType 制定sql 输入对象所映射的java 对象类型,select 制定resultType 表示讲单条记录映射成java 对象</span></span><br><span class="line"><span class="xml">    </span></span><br><span class="line"><span class="xml">     --&gt;</span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">select</span> <span class="attr">id</span>=<span class="string">"listemployee"</span> <span class="attr">parameterType</span>=<span class="string">"int"</span> <span class="attr">resultType</span>=<span class="string">"com.mybatis.pojo.Employee"</span>&gt;</span></span></span><br><span class="line"><span class="xml">            select * from tbl_employee where id=#</span><span class="template-variable">&#123;id&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;/<span class="name">select</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">mapper</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p># </p><pre><code>#{} 表示一个占位符${} 表示一个拼接符,会导致sql注入 . 不安全</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;什么是springmvc&quot;&gt;&lt;a href=&quot;#什么是springmvc&quot; class=&quot;headerlink&quot; title=&quot;什么是springmvc&quot;&gt;&lt;/a&gt;什么是springmvc&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;前端控制器，处理控制器，处理器适配器，试图解
      
    
    </summary>
    
      <category term="spring-MVC" scheme="http://yoursite.com/categories/spring-MVC/"/>
    
    
      <category term="spring-MVC" scheme="http://yoursite.com/tags/spring-MVC/"/>
    
  </entry>
  
  <entry>
    <title>ssm</title>
    <link href="http://yoursite.com/2018/11/07/ssm/"/>
    <id>http://yoursite.com/2018/11/07/ssm/</id>
    <published>2018-11-07T08:15:22.000Z</published>
    <updated>2018-11-18T08:11:35.522Z</updated>
    
    <content type="html"><![CDATA[<h1 id="error"><a href="#error" class="headerlink" title="error"></a>error</h1><ol><li>Maven中出现Resource Path Location Type Dynamic Web Module 3.1 requires Java 1.7 or newer<br>在前面的操作：<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">1.右键-maven-update project，等待下载完成。</span><br><span class="line"></span><br><span class="line">2.右键-properties-java build path-双击JRE System Library-选择Workspace</span><br><span class="line"></span><br><span class="line">3.java compiler选择1.8</span><br><span class="line"></span><br><span class="line">4.project Facts-java版本改为1.8</span><br><span class="line"></span><br><span class="line">5.pom.xml中在project中插入以下代码</span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">build</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">groupId</span>&gt;</span>org.apache.maven.plugins<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>maven-compiler-plugin<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">version</span>&gt;</span>3.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">source</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">source</span>&gt;</span>    <span class="comment">&lt;!-- Java版本号 --&gt;</span> </span><br><span class="line">                <span class="tag">&lt;<span class="name">target</span>&gt;</span>1.8<span class="tag">&lt;/<span class="name">target</span>&gt;</span>    </span><br><span class="line">            <span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugin</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">plugins</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">build</span>&gt;</span></span><br><span class="line">--------------------- </span><br><span class="line">作者：Dulian_花 </span><br><span class="line">来源：CSDN </span><br><span class="line">原文：https://blog.csdn.net/weixin_41660210/article/details/79412713</span><br></pre></td></tr></table></figure></li></ol><h1 id="DispatcherServlet-ClassNotFound"><a href="#DispatcherServlet-ClassNotFound" class="headerlink" title="DispatcherServlet ClassNotFound"></a>DispatcherServlet ClassNotFound</h1><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">https:<span class="comment">//www.cnblogs.com/lyy-2016/p/5898537.html</span></span><br><span class="line">都已经导入，没有问题。但是实际上还要把依赖都加进classpath下。步骤：</span><br><span class="line"></span><br><span class="line">项目右击--&gt;<span class="function"><span class="title">properties</span>--&gt;</span>D<span class="function"><span class="title">eployment</span> Assembly--&gt;</span><span class="function"><span class="title">add</span>--&gt;</span>J<span class="function"><span class="title">ava</span> Build Path Entries--&gt;</span>导入所有依赖的Jar包，重新start tomcat即可</span><br></pre></td></tr></table></figure><ol start="2"><li>创建一个mawen 工程</li><li><p>引入项目依赖的jar包</p><ol><li>spring</li><li>springmvc</li><li>mybastis</li><li>数据库连接池， 驱动包</li><li>其他 jstl， servlet-api junit</li></ol></li><li><p>引入bootstrap 前段框架</p></li><li><p>编写ssm整合 的关键配置文件</p></li><li></li></ol>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;error&quot;&gt;&lt;a href=&quot;#error&quot; class=&quot;headerlink&quot; title=&quot;error&quot;&gt;&lt;/a&gt;error&lt;/h1&gt;&lt;ol&gt;
&lt;li&gt;Maven中出现Resource Path Location Type Dynamic Web Modu
      
    
    </summary>
    
      <category term="ssm" scheme="http://yoursite.com/categories/ssm/"/>
    
    
      <category term="ssm" scheme="http://yoursite.com/tags/ssm/"/>
    
  </entry>
  
  <entry>
    <title>softInstall</title>
    <link href="http://yoursite.com/2018/10/25/softInstall/"/>
    <id>http://yoursite.com/2018/10/25/softInstall/</id>
    <published>2018-10-25T12:19:10.000Z</published>
    <updated>2018-11-11T12:41:51.603Z</updated>
    
    <content type="html"><![CDATA[<h1 id="安装eclipse-报未配置java虚拟机"><a href="#安装eclipse-报未配置java虚拟机" class="headerlink" title="安装eclipse 报未配置java虚拟机"></a>安装eclipse 报未配置java虚拟机</h1><pre><code>在这种情况下，如果确定java配置正确。则需要在eclipse安装目录下添加一个软链接，指向jre ln -sf jdk安装目录/jre jre</code></pre><h1 id="eclipse-配置-spring-xml-提示"><a href="#eclipse-配置-spring-xml-提示" class="headerlink" title="eclipse 配置 spring xml 提示"></a>eclipse 配置 spring xml 提示</h1><p>1.安装spring ide插件。</p><h1 id="Mysql-Error-The-user-specified-as-a-definer-‘mysql-infoschema’-’localhost’-does-not-exist’-when-trying-to-dump-tablespaces"><a href="#Mysql-Error-The-user-specified-as-a-definer-‘mysql-infoschema’-’localhost’-does-not-exist’-when-trying-to-dump-tablespaces" class="headerlink" title="Mysql Error:The user specified as a definer (‘mysql.infoschema’@’localhost’) does not exist’ when trying to dump tablespaces"></a>Mysql Error:The user specified as a definer (‘mysql.infoschema’@’localhost’) does not exist’ when trying to dump tablespaces</h1><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">解决办法：</span><br><span class="line">（来源https://dev.mysql.com/doc/refman/<span class="number">8</span>.<span class="number">0</span>/en/upgrading-<span class="keyword">strategies.html）</span></span><br><span class="line"><span class="keyword"></span></span><br><span class="line"><span class="keyword">docker </span>exec -<span class="keyword">it </span>mysql <span class="keyword">bash</span></span><br><span class="line"><span class="keyword">mysql </span>-u root -p</span><br><span class="line"><span class="symbol">mysql</span>&gt; SET <span class="meta">GLOBAL</span> innodb_fast_shutdown = <span class="number">1</span><span class="comment">;</span></span><br><span class="line"><span class="symbol">mysql_upgrade</span> -u root -p</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;安装eclipse-报未配置java虚拟机&quot;&gt;&lt;a href=&quot;#安装eclipse-报未配置java虚拟机&quot; class=&quot;headerlink&quot; title=&quot;安装eclipse 报未配置java虚拟机&quot;&gt;&lt;/a&gt;安装eclipse 报未配置java虚拟机&lt;/
      
    
    </summary>
    
    
      <category term="-softInstall" scheme="http://yoursite.com/tags/softInstall/"/>
    
  </entry>
  
  <entry>
    <title>spring</title>
    <link href="http://yoursite.com/2018/10/25/spring/"/>
    <id>http://yoursite.com/2018/10/25/spring/</id>
    <published>2018-10-25T11:00:59.000Z</published>
    <updated>2018-11-04T07:24:07.328Z</updated>
    
    <content type="html"><![CDATA[<h1 id="spring-介绍"><a href="#spring-介绍" class="headerlink" title="spring 介绍"></a>spring 介绍</h1><pre><code>Spring 框架Spring 框架是一个分层架构，由 7 个定义良好的模块组成。Spring 模块构建在核心容器之上，核心容器定义了创建、配置和管理 bean 的方式，如图 1 所示。</code></pre><p><img src="/2018/10/25/spring/spring简介.GIF" alt="spring简介"></p><h1 id="spring-核心"><a href="#spring-核心" class="headerlink" title="spring 核心"></a>spring 核心</h1><pre><code>spring 的核心是控制反转（IoC）和面向切面（AOP）</code></pre><h1 id="spring-优点"><a href="#spring-优点" class="headerlink" title="spring 优点"></a>spring 优点</h1><ol><li>方便解耦，简化开发(高类聚，低耦合)<br>spring 是一个大工厂，可以将所有的对象创建和依赖关系的维护，交给spring 管理<br>是一个生产bean的工厂</li><li>AOP 编程的支持<br>spring 提供面向切面的编程，可以方便的实现对程序进行权限的拦截，运行监控等功能</li><li>声明式事务的支持<br>只需要通过配置就可以完成对事物的管理，无需首手动编程</li><li>方便程序的测试<br>spring 对junit4 支持 可以通过注解方便的测试spring的程序</li><li>方便集成各种优秀的框架<br>spring 不排斥各种优秀的框架，其内部提供了对各种优秀框架的支持</li><li>降低javaee API的使用难度<br>srping 对javaee 中非常难用的API进行了封装</li></ol><h1 id="srping-体系结构"><a href="#srping-体系结构" class="headerlink" title="srping 体系结构"></a>srping 体系结构</h1><p><img src="/2018/10/25/spring/spring体系结构.png" alt="spring 体系结构"></p><pre><code>核心容器:bean core context expression</code></pre><h1 id="入门案例"><a href="#入门案例" class="headerlink" title="入门案例"></a>入门案例</h1><h1 id="入门案例DI"><a href="#入门案例DI" class="headerlink" title="入门案例DI"></a>入门案例DI</h1><ol><li>模拟spring 执行过程</li><li>创建service 实例 BookService BookService = new BookServiceImpl()； // IoC <bean></bean></li><li>创建dao实例 BookDao bookdao = new BookDao(); // IoC</li><li>讲dao设置给service BookService.setBookDao(bookdao) -&gt;Id <property></property></li></ol><h2 id="目标类"><a href="#目标类" class="headerlink" title="目标类"></a>目标类</h2><p>创建BookService 接口和实现类<br>创建BookDao 接口和实现类</p><h3 id="dao"><a href="#dao" class="headerlink" title="dao"></a>dao</h3><h3 id="service"><a href="#service" class="headerlink" title="service"></a>service</h3><h3 id="配置文件"><a href="#配置文件" class="headerlink" title="配置文件"></a>配置文件</h3><h3 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h3><h1 id="API"><a href="#API" class="headerlink" title="API"></a>API</h1><pre><code>BeanFactory 是一个工厂 ，用于生成任意bean，采用延时加载application BeanFactory 子接口。功能更加强大，（国际化处理，事件传递，Bean自动装配，各种不同应用层的Context实现）.                        当配置文件被加载即被实例化</code></pre><h1 id="application"><a href="#application" class="headerlink" title="application"></a>application</h1><pre><code>FileSystemXmlApplicationContext：该容器从 XML 文件中加载已被定义的 bean。在这里，你需要提供给构造器 XML 文件的完整路径。ClassPathXmlApplicationContext：该容器从 XML 文件中加载已被定义的 bean。在这里，你不需要提供 XML 文件的完整路径，只需正确配置 (类路径，src)CLASSPATH 环境变量即可，因为，容器会从 CLASSPATH 中搜索 bean 配置文件。WebXmlApplicationContext：该容器会在一个 web 应用程序的范围内加载在 XML 文件中已被定义的 bean。    </code></pre><h1 id="装配bean-基于xml"><a href="#装配bean-基于xml" class="headerlink" title="装配bean 基于xml"></a>装配bean 基于xml</h1><h2 id="实例化方式（三种）"><a href="#实例化方式（三种）" class="headerlink" title="实例化方式（三种）"></a>实例化方式（三种）</h2><h4 id="默认构造"><a href="#默认构造" class="headerlink" title="默认构造"></a>默认构造</h4><pre><code>&lt;bean id =&quot;&quot; class=&quot;&quot;&gt; 必须提供默认构造</code></pre><h4 id="静态工厂"><a href="#静态工厂" class="headerlink" title="静态工厂"></a>静态工厂</h4><pre><code>常用于spring 整合其他框架(工具)</code></pre><p></p><h6>静态工厂:</h6><br>    用于生成实例对象，所用方法必须是static<br>    <bean id="" class="工厂的全限定类名" factory-method="静态方法"><br>    测试<br>    静态工厂<br>    <bean id="UserServiceId" class="com.Factory.statics.StaticFactory" factory-method="CreateService"></bean><p></p><h4 id="实例工厂"><a href="#实例工厂" class="headerlink" title="实例工厂"></a>实例工厂</h4><pre><code>&lt;bean id=&quot;InstanceFatoryId&quot; class=&quot;com.Factory.Instance.InstanceFactory&quot;&gt; &lt;/bean&gt;&lt;bean id = &quot;UserServiceId&quot; factory-bean=&quot;InstanceFatoryId&quot; factory-method=&quot;CreateService&quot;&gt;&lt;/bean&gt;</code></pre><h2 id="Bean-种类"><a href="#Bean-种类" class="headerlink" title="Bean 种类"></a>Bean 种类</h2><ol><li>普通bean <bean id="" class="">,spring 直接创建A的实例，并返回</bean></li><li>FactoryBean： 是一个特殊的bean ， 具有工厂生产对象的能力，只能生成特定的对象。Bean 必须使用FactoryBean 接口 。 此接口提供方法getOject()用于获得特定的bean</li><li><h2 id="作用域"><a href="#作用域" class="headerlink" title="作用域"></a>作用域</h2>作用域 用于确定spring 创建实例的的个数<br>|类别|说明|<br>|–|–|<br>|singleton|在spring IoC 容器中仅存在一个bean 实例，bean一单例的方式纯在|<br>|prototype|每次从容器中调用Bean，都返回一个新的实例，即每次调用getBean时都执行 new XxxBean()|<br>|request|每次Http 请求都会创建一个新的Bean 该作用域仅适用与WebApplicationContext 环境|<br>|session| 同一个HttpSession 共享一个Bean 不同session使用不同的Bean 仅适用WebAPplicationContext 环境|<br>|GlobalSession| 一般用与portlet应用环境，该作用域适用与WebApplicationContext环境|<br>默认单例， 更改适用scope=“”<br><bean id="" class="" scope=""><br>##生命周期<h3 id="初始化和销毁"><a href="#初始化和销毁" class="headerlink" title="初始化和销毁"></a>初始化和销毁</h3>目标方法执行前和执行后，将执行初始化或销毁<br><bean id="" class="" init-method="初始化方法" destroy-method="销毁方法"><br>实际测试中，只有init ，并没有destroy 是因为容器并没有关闭<br>关闭的方法有两种<br>applicationContext.getClass().getMethod(“close”).invoke(applicationContext);<br>此法是因为需要调用的方法在实现类中定义实现了，但是<h3 id="BeanPostProcessor-后处理Bean"><a href="#BeanPostProcessor-后处理Bean" class="headerlink" title="BeanPostProcessor 后处理Bean"></a>BeanPostProcessor 后处理Bean</h3></bean></bean></li></ol><h2 id="属性依赖注入"><a href="#属性依赖注入" class="headerlink" title="属性依赖注入"></a>属性依赖注入</h2><h3 id="构造方法"><a href="#构造方法" class="headerlink" title="构造方法"></a>构造方法</h3><h3 id="setter-方法"><a href="#setter-方法" class="headerlink" title="setter 方法"></a>setter 方法</h3><!--         setter 方法注入        普通数据        <property name = ""  value ="">            等价于 <property name = "">                    <value>值</value>                </property>                    引用数据        <property name = "homeAddr" ref = ""></property>            等价于 <property name = "">                    <re>值</ref>                </property>                 --><pre><code>&lt;bean id=&quot;personId&quot; class =&quot;com.setter.Person&quot;&gt;     &lt;!-- 普通数据，两种 --&gt;    &lt;property name=&quot;pname&quot; value = &quot;zhong&quot;&gt;&lt;/property&gt;    &lt;property name=&quot;age&quot;&gt;&lt;value&gt;12&lt;/value&gt;&lt;/property&gt;    &lt;!-- 引用数据 --&gt;     &lt;property name = &quot;homeaddr&quot; ref = &quot;homeAddrid&quot; &gt; &lt;/property&gt;    &lt;property name =&quot;comaddr&quot;  ref = &quot;comaddrid&quot;&gt;&lt;/property&gt;     &lt;/bean&gt;&lt;bean id = &quot;homeAddrid&quot; class=&quot;com.setter.Address&quot;&gt;    &lt;property name=&quot;addr&quot; value=&quot;hello homeAddr&quot;&gt;&lt;/property&gt;    &lt;property name=&quot;tel&quot; value=&quot;119&quot;&gt;&lt;/property&gt;&lt;/bean&gt;&lt;bean id = &quot;comaddrid&quot; class=&quot;com.setter.Address&quot;&gt;    &lt;property name=&quot;addr&quot; value=&quot;hello comAddr&quot;&gt;&lt;/property&gt;    &lt;property name=&quot;tel&quot; value=&quot;911&quot;&gt;&lt;/property&gt;&lt;/bean&gt; </code></pre><h3 id="P命令空间"><a href="#P命令空间" class="headerlink" title="P命令空间"></a>P命令空间</h3><pre><code>对 setter 方法注入进行简化 ，替换 &lt;property name = &quot;属性名&quot;&gt;而是在&lt;bean p:属性名=“普通值” p:属性值-ref=&quot;引用值&quot;&gt;p 命名弓箭使用前提，必须添加命名信息1.添加    xmlns:p=&quot;http://www.springframework.org/schema/p&quot;2.修改配置信息    &lt;bean id=&quot;personId&quot; class =&quot;com.setter.p.Person&quot; p:pname=&quot;zhong&quot; p:age=&quot;22&quot; p:homeaddr-ref=&quot;homeAddrid&quot; p:comaddr-ref=&quot;comaddrid&quot;&gt; &lt;/bean&gt;    &lt;bean id = &quot;homeAddrid&quot; class=&quot;com.setter.p.Address&quot; p:addr=&quot;hello homeAddr&quot; p:tel=&quot;119&quot;&gt;    &lt;/bean&gt;     &lt;bean id = &quot;comaddrid&quot; class=&quot;com.setter.p.Address&quot; p:addr=&quot;hello comAddr&quot; p:tel=&quot;911&quot;&gt;    &lt;/bean&gt;</code></pre><h3 id="SpEL-属性注入格式的优化"><a href="#SpEL-属性注入格式的优化" class="headerlink" title="SpEL 属性注入格式的优化"></a>SpEL 属性注入格式的优化</h3><pre><code>对&lt;property&gt; 进行统一编程， 之后所有的内容都使用value&lt;property name=&quot;&quot; value=&quot;#{表达式}&quot;&gt; eg #{123} #{beanid}  另一个bean 的引用#{ beanid.propName} 操作数据#{beanid.toString} 执行方法#{T(权限定类名).字段 |　方法} 引用静态方法或字段</code></pre><h3 id="集合注入"><a href="#集合注入" class="headerlink" title="集合注入"></a>集合注入</h3><pre><code>集合的注入都是给property 添加子标签子标签数组 &lt;array&gt;    &lt;array&gt;        中间时普通数据就用value        中间时引用数据就用ref    &lt;/array&gt;List &lt;list&gt;Set &lt;Set&gt;Map &lt;Map&gt;Properties &lt;Properties&gt;</code></pre><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><h2 id="基于注解的装配"><a href="#基于注解的装配" class="headerlink" title="基于注解的装配"></a>基于注解的装配</h2><ol><li>注解就是一个类使用@注解名称</li><li>开发中，使用注解，取代xml 配置文件</li></ol><p>@Component 取代<bean class=""><br>@Component(“id”) 取代<bean class="" id=""><br>注解使用前提， 要添加命名空间  ， 让spring 扫描含有注解的类</bean></bean></p><ol start="3"><li>web 开发提供3 个@component 注解衍生注解<ol><li>@Repository dao 层  </li><li>@Service service 层</li><li>@Controller web层</li></ol></li><li>依赖注入<ol><li>普通值: @Value(“”);</li><li>引用值<ol><li>按照类型注入<ol><li>@Autowired </li></ol></li><li>按照名称注入<ol><li>@Autowired<br>@Qualifier(“名称”)</li><li>@Resource(“名称”)</li></ol></li></ol></li></ol></li></ol><h3 id="schema-命名空间"><a href="#schema-命名空间" class="headerlink" title="schema 命名空间"></a>schema 命名空间</h3><ol><li><p>命名空间声明</p><ol><li>默认 xmlns=””<ol><li>&lt;标签名&gt;</li></ol></li><li>显示： xmlns:别名=“”<ol><li>别名:标签名</li></ol></li></ol></li><li><p>确定schema xsd 文件位置</p><ol><li>xsi：schemaLocation=”名称 位置<pre><code>名称2 位置2 (成对的)&quot;</code></pre></li></ol></li></ol><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">xmlns=<span class="string">"http://www.springframework.org/schema/beans"</span></span><br><span class="line">xmlns:xsi=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span><br><span class="line">xmlns:tx=<span class="string">"http://www.springframework.org/schema/tx"</span></span><br><span class="line">xmlns:aop=<span class="string">"http://www.springframework.org/schema/aop"</span></span><br><span class="line">xmlns:context=<span class="string">"http://www.springframework.org/schema/context"</span></span><br><span class="line">xsi:schemaLocation=<span class="string">"http://www.springframework.org/schema/beans</span></span><br><span class="line">        http:<span class="comment">//www.springframework.org/schema/beans/spring-beans.xsd</span></span><br><span class="line">        http:<span class="comment">//www.springframework.org/schema/context</span></span><br><span class="line">        http:<span class="comment">//www.springframework.org/schema/context/spring-context.xsd</span></span><br><span class="line">        http:<span class="comment">//www.springframework.org/schema/aop</span></span><br><span class="line">        http:<span class="comment">//www.springframework.org/schema/aop/spring-aop.xsd</span></span><br><span class="line">        http:<span class="comment">//www.springframework.org/schema/tx</span></span><br><span class="line">        http:<span class="comment">//www.springframework.org/schema/tx/spring-tx.xsd"&gt;</span></span><br></pre></td></tr></table></figure><h1 id="AOP"><a href="#AOP" class="headerlink" title="AOP"></a>AOP</h1><h2 id="什么是AOP"><a href="#什么是AOP" class="headerlink" title="什么是AOP"></a>什么是AOP</h2><ol><li> 在软件业， AOP为 Aspect Oriented Programming 的缩写，意味，面向切片编程。通过预编译的方式和运行期动态代理<br> 实现程序功能的统一维护技术。 AOP是 OOP的延续，时软件开发中的一个热点也是spring框架中的一个重要内容。<br> 时函数式编程的一种衍生方法。 利用AOP 可以对业务逻辑的各个部分进行隔离<br> 从而是的业务逻辑各部分之间的耦合度降低，提高程序的可用性，同时提高了开发的效率</li><li>AOP 采用横向抽取，取代传统纵向继承体系重复行代码</li></ol><pre><code>aop 底层采用代理机制实现1. 接口 + 实用类： spring采用 jdk 的动态代理 proxy2. 实现类： spring采用cglib 字节码增强</code></pre><h2 id="AOP术语"><a href="#AOP术语" class="headerlink" title="AOP术语"></a>AOP术语</h2><pre><code>target 目标类 ， 需要被代理的类 UserServiceJoinPoint 链接点 ，所谓连接点是指那些可能被拦截的点(指方法) ， 例如 UserService.所有方法PointCut 切入点 已经被增强的连接点 例如 advice 增强， 通知 例如 增强代码 before() , after()weaving 织入 是吧增强advice 应用到目标对象target 来创建新的代理对象的过程 ()proxy 代理aspect (切面) 是嵌入点 pointcut 和通知advice 的结合</code></pre><h2 id="手动方式"><a href="#手动方式" class="headerlink" title="手动方式"></a>手动方式</h2><h3 id="JDK-动态代理"><a href="#JDK-动态代理" class="headerlink" title="JDK 动态代理"></a>JDK 动态代理</h3><pre><code>对装饰者设计模式的简化，使用前提， 必须有接口目标类 接口 + 实现类切面类 myaspect 用于生成通知 。 工厂类 编写工厂生成代理</code></pre><h3 id="CGLIB-字节码增强"><a href="#CGLIB-字节码增强" class="headerlink" title="CGLIB 字节码增强"></a>CGLIB 字节码增强</h3><pre><code>采用字节码增强， cglib 在运行时，创建目标类的子类，从而对目标类进行增强导入jar包</code></pre><h2 id="编写代理-，-半自动"><a href="#编写代理-，-半自动" class="headerlink" title="编写代理 ， 半自动"></a>编写代理 ， 半自动</h2><pre><code>aop 联盟通知类型AOP 联盟为通知Advice 定义了 org.aopallince.aop.AdviceSpring 按照通知Advice 在目标类方法的连接点位置，可以分为5类    前置通知 org.springframework.aop.MethodBeforeAdvice        在目标分挨个发执行前实行增强    后置通知 org.springframework.aop.AfterReturningAdvice        在目标方法执行偶施行增强    环绕通知 org.aopalliance.intercept.Methodinterceptor        在目标方法前后施行增强    异常跑出通知 org.springframework.aop.ThrowsAdvice        在方法跑出异常后增强    引介通知 org.springframework.aop.IntroductinoInterceptor        在目标类添加一些方法和属性    环绕通知， 必须手懂执行目标方法    try{        // 前置通知        //执行目标方法        // 后置通知    }    catch{        // 抛出异常通知    }让spring 创建代理对象。从spring 容器中手动获取代理对象</code></pre><ol><li>创建目标类<ol><li><bean id="UserServiceid" class=""></bean></li></ol></li><li>创建切片类<ol><li><bean id="myAspectId" class=""> </bean></li></ol></li><li>创建代理类<ol><li>使用工厂bean FactoryBean 底层调用getObject 返回特殊bena</li></ol></li></ol><h3 id="配置文件-1"><a href="#配置文件-1" class="headerlink" title="配置文件"></a>配置文件</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="meta">&lt;?</span>xml version=<span class="string">"1.0"</span> encoding=<span class="string">"UTF-8"</span><span class="meta">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;<span class="name">beans</span> <span class="attr">xmlns</span>=<span class="string">"http://www.springframework.org/schema/beans"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:xsi</span>=<span class="string">"http://www.w3.org/2001/XMLSchema-instance"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:tx</span>=<span class="string">"http://www.springframework.org/schema/tx"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:aop</span>=<span class="string">"http://www.springframework.org/schema/aop"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:p</span>=<span class="string">"http://www.springframework.org/schema/p"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:mvc</span>=<span class="string">"http://www.springframework.org/schema/mvc"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xmlns:context</span>=<span class="string">"http://www.springframework.org/schema/context"</span></span></span><br><span class="line"><span class="tag"><span class="attr">xsi:schemaLocation</span>=<span class="string">"</span></span></span><br><span class="line"><span class="tag"><span class="string">http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/mvc/spring-mvc.xsd </span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context/spring-context.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/aop/spring-aop.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/tx/spring-tx.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/beans/spring-beans-4.0.xsd</span></span></span><br><span class="line"><span class="tag"><span class="string">        http://www.springframework.org/schema/context</span></span></span><br><span class="line"><span class="tag"><span class="string">         http://www.springframework.org/schema/context/spring-context-4.0.xsd"</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 创建目标类 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">"userServiceId"</span> <span class="attr">class</span>=<span class="string">"spring.proxyFactoryBean.UserServiceImpl"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 创建切面类 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> = <span class="string">"myAspectId"</span> <span class="attr">class</span> =<span class="string">"spring.proxyFactoryBean.MyAspect"</span>&gt;</span><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 代理类 </span></span><br><span class="line"><span class="comment">使用工厂bean FactoryBean 底层调用getObject() 返回特殊bean</span></span><br><span class="line"><span class="comment">ProxyFactoryBean 用于创建代理工厂bean 生成特殊的代理对象</span></span><br><span class="line"><span class="comment">interfaces 确定借口</span></span><br><span class="line"><span class="comment">通过&lt;array&gt; 可以设置多个值</span></span><br><span class="line"><span class="comment">target 确定目标类</span></span><br><span class="line"><span class="comment">interceptorNames 通知切面类名称 ， 类型String</span></span><br><span class="line"><span class="comment">optimize 强制使用 cglib</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">底层机制</span></span><br><span class="line"><span class="comment">如果目标类有接口，采用jdk 动态代理</span></span><br><span class="line"><span class="comment">如果没有接口 ， 采用cglib 字节码增强</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">bean</span> <span class="attr">id</span> =<span class="string">"proxyServiceId"</span> <span class="attr">class</span>=<span class="string">"org.springframework.aop.framework.ProxyFactoryBean"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"interfaces"</span> <span class="attr">value</span>=<span class="string">"spring.proxyFactoryBean.UserService"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"target"</span> <span class="attr">ref</span>=<span class="string">userServiceId</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"interceptorNames"</span> <span class="attr">value</span>=<span class="string">"spring.proxyFactoryBean.MyAspect"</span>&gt;</span><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">bean</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">beans</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="aop-编程-全自动"><a href="#aop-编程-全自动" class="headerlink" title="aop 编程     全自动"></a>aop 编程     全自动</h2><pre><code>从spring 容器获得目标类。如果配置aop ，spring 将自动生成代理要确定表达式</code></pre><h2 id="aspect"><a href="#aspect" class="headerlink" title="aspect"></a>aspect</h2><ol><li>aspectJ 是一个基于java 语言的aop 框架</li><li>spring 2.0 以后增加了AspectJ 其诶单表达式的支持</li><li>@AspectJ时AspectJ1.5 新增功能，通过JDK5 注解技术，允许在Bean类中定义切面戏班的spring 框架建议使用AspectJ开发AOP</li></ol><h3 id="主要用途"><a href="#主要用途" class="headerlink" title="主要用途"></a>主要用途</h3><pre><code>自定义开发</code></pre><h2 id="切入点表达式"><a href="#切入点表达式" class="headerlink" title="切入点表达式"></a>切入点表达式</h2><ol><li><p>execution() 用于描述方法<br> 语法： execution(修饰符 返回值 包.类.方法(参数) throws 异常)</p><pre><code>修饰符 一般省略 public **返回值类型 void String 。。包类 UserServiceImpl  指定类×Impl               以Impl结尾User*               以User开头方法 不能省略addUser             固定方法add*                以add开头×dao                以Dao结尾(参数)    ()              无参    (..)            任意</code></pre></li></ol><h2 id="Aspect-通知类型"><a href="#Aspect-通知类型" class="headerlink" title="Aspect 通知类型"></a>Aspect 通知类型</h2><p>aop 联盟定义通知类型 ， 具有特性接口 ， 必须实现 ， 从而确定方法名称<br>aspectJ 通知类型，之定义类型名称，以及方法格式</p><p><b>Before advice: </b>Advice that runs before a join point but that does not have the ability to prevent execution flow proceeding to the join point (unless it throws an exception).</p><p><b>After returning advice:</b> Advice to be run after a join point completes normally (for example, if a method returns without throwing an exception).</p><p><b>After throwing advice:</b> Advice to be executed if a method exits by throwing an exception.</p><p><b>After (finally) advice:</b> Advice to be executed regardless of the means by which a join point exits (normal or exceptional return).</p><p><b>Around advice:</b> Advice that surrounds a join point such as a method invocation. This is the most powerful kind of advice. Around advice can perform custom behavior before and after the method invocation. It is also responsible for choosing whether to proceed to the join point or to shortcut the advised method execution by returning its own return value or throwing an exception.</p></bean>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;spring-介绍&quot;&gt;&lt;a href=&quot;#spring-介绍&quot; class=&quot;headerlink&quot; title=&quot;spring 介绍&quot;&gt;&lt;/a&gt;spring 介绍&lt;/h1&gt;&lt;pre&gt;&lt;code&gt;Spring 框架
Spring 框架是一个分层架构，由 7 个定义
      
    
    </summary>
    
      <category term="spring" scheme="http://yoursite.com/categories/spring/"/>
    
    
      <category term="spring" scheme="http://yoursite.com/tags/spring/"/>
    
  </entry>
  
  <entry>
    <title>git</title>
    <link href="http://yoursite.com/2018/10/24/git/"/>
    <id>http://yoursite.com/2018/10/24/git/</id>
    <published>2018-10-24T13:21:50.000Z</published>
    <updated>2018-10-24T13:23:13.188Z</updated>
    
    <content type="html"><![CDATA[<h1 id="error-https-jingyan-baidu-com-album-f3e34a12a25bc8f5ea65354a-html-picindex-5"><a href="#error-https-jingyan-baidu-com-album-f3e34a12a25bc8f5ea65354a-html-picindex-5" class="headerlink" title="error https://jingyan.baidu.com/album/f3e34a12a25bc8f5ea65354a.html?picindex=5"></a>error <a href="https://jingyan.baidu.com/album/f3e34a12a25bc8f5ea65354a.html?picindex=5" target="_blank" rel="noopener">https://jingyan.baidu.com/album/f3e34a12a25bc8f5ea65354a.html?picindex=5</a></h1><p>在使用git 对源代码进行push到gitHub时可能会出错，信息如下<br>出现错误的主要原因是github中的README.md文件不在本地代码目录中<br>可以通过如下命令进行代码合并【注：pull=fetch+merge]<br>git pull –rebase origin master<br>执行上面代码后可以看到本地代码库中多了README.md文件<br>此时再执行语句 git push -u origin master即可完成代码上传到github</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;error-https-jingyan-baidu-com-album-f3e34a12a25bc8f5ea65354a-html-picindex-5&quot;&gt;&lt;a href=&quot;#error-https-jingyan-baidu-com-album-f3e34a12
      
    
    </summary>
    
      <category term="git" scheme="http://yoursite.com/categories/git/"/>
    
    
      <category term="git" scheme="http://yoursite.com/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>english</title>
    <link href="http://yoursite.com/2018/10/24/english/"/>
    <id>http://yoursite.com/2018/10/24/english/</id>
    <published>2018-10-24T12:20:03.000Z</published>
    <updated>2018-11-18T09:56:11.586Z</updated>
    
    <content type="html"><![CDATA[<h1 id="before"><a href="#before" class="headerlink" title="before"></a>before</h1><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br></pre></td><td class="code"><pre><span class="line">optional</span><br><span class="line">whereas然而，反之</span><br><span class="line">compulsory义务的，必修的</span><br><span class="line">politics政治的 </span><br><span class="line">out of a hat 随意的，任意的</span><br><span class="line">engage 吸引，占用，雇佣，预定，答应，保证</span><br><span class="line">reluctant不情愿的，顽强的</span><br><span class="line">deliberately故意的，深思熟虑的</span><br><span class="line">spoil溺爱，糟蹋，破坏，掠夺，次品，奖品</span><br><span class="line">stream溪流，流动，光线，涌进，流出，涌出</span><br><span class="line">lift举起，提升，空运，耸立，电梯。起重机</span><br><span class="line">before the days of在…………时代开始以前</span><br><span class="line">ground floor底层，基层</span><br><span class="line">mathematician数学家</span><br><span class="line">military军事的</span><br><span class="line">pull out of拉出，取出</span><br><span class="line">facility设备</span><br><span class="line">infect感染，传染</span><br><span class="line">invisible无形的看不见的</span><br><span class="line"><span class="builtin-name">run</span> out of用完</span><br><span class="line">hint 暗示</span><br><span class="line">parerntal父母亲的</span><br><span class="line">proposal建议，求婚</span><br><span class="line">site地点，位置，选址，设置</span><br><span class="line">ingredient元素，要素，组成部分</span><br><span class="line">soughtseek的过去分词</span><br><span class="line">dialect方言</span><br><span class="line">medium中间的，中等的，媒介，方法</span><br><span class="line">bind结合，装订，捆绑</span><br><span class="line"><span class="keyword">in</span> terms of依据，依照，在……方面</span><br><span class="line">ratio比率</span><br><span class="line">unity团结，一致</span><br><span class="line">obvious明显的，显著的，平淡无奇的 </span><br><span class="line">clarity清楚，透明，n</span><br><span class="line">crack使爆裂，打开，变声，裂缝</span><br><span class="line">concise简明的，简洁的</span><br><span class="line">slip up疏忽，跌倒，遭遇不幸</span><br><span class="line">properly适当的，正确的</span><br><span class="line">migrant候鸟，移居者，流浪的 </span><br><span class="line">labor劳动，劳工，工作，努力，分娩</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">permanence 永久的，持久 n.</span><br><span class="line"></span><br><span class="line">tattoos 纹身，归营鼓 n</span><br><span class="line"></span><br><span class="line">regret 后悔，感到后悔，懊恼</span><br><span class="line"></span><br><span class="line">adhere 坚持。依符，沾着，追随</span><br><span class="line"></span><br><span class="line">cathedral 大教堂</span><br><span class="line"></span><br><span class="line">linear 线的，线性的，直线</span><br><span class="line"></span><br><span class="line">feasible 可行的</span><br><span class="line"></span><br><span class="line">hound 猎犬，紧逼，烦扰，纠缠</span><br><span class="line"></span><br><span class="line">awkward 尴尬的。笨拙的，棘手的，不雅观的</span><br><span class="line"></span><br><span class="line">specific 具体的，明确的，特写的，特殊的</span><br><span class="line"></span><br><span class="line">seminar 有研究会，座谈会 </span><br><span class="line"></span><br><span class="line">pamphlet 小册子 </span><br><span class="line"></span><br><span class="line">ornamental 装饰的 </span><br><span class="line"></span><br><span class="line">brief 简短的，扼要的</span><br><span class="line"></span><br><span class="line">sift 筛，筛选，</span><br><span class="line"></span><br><span class="line">banquet 宴会，宴请，款待</span><br><span class="line"></span><br><span class="line">strife 纷争，倾轧</span><br><span class="line"></span><br><span class="line">predictions  预言 n</span><br><span class="line"></span><br><span class="line">clasp 握紧，扣紧，紧抱，扣子，钩子 </span><br><span class="line"></span><br><span class="line">persecute  迫害，烦扰 </span><br><span class="line"></span><br><span class="line">underlying 在下面的，基本的 ，潜在的 </span><br><span class="line"></span><br><span class="line">standardize 立下标准，制定标准 vi 使标准化</span><br><span class="line"></span><br><span class="line">audit 审查，审计，查账</span><br><span class="line"></span><br><span class="line">counter 柜台，计数器，反对，反击对抗，相反的</span><br><span class="line"></span><br><span class="line">prediction 预言</span><br><span class="line"></span><br><span class="line">alleviate 减轻，缓和，</span><br><span class="line"></span><br><span class="line">knot 节，打结，疙瘩</span><br><span class="line"></span><br><span class="line">untie 解放，解开</span><br><span class="line"></span><br><span class="line">diverse 不同的，多种多样的，变化多的</span><br><span class="line"></span><br><span class="line">depict描述，画画，</span><br><span class="line"></span><br><span class="line">vows婚约，誓约，郑重声明</span><br><span class="line"></span><br><span class="line">digestive消化的，助消化的 </span><br><span class="line"></span><br><span class="line">tract 大片土地，地带，小册子，器官 </span><br><span class="line"></span><br><span class="line">bewilder使不知所措，使迷惑 </span><br><span class="line"></span><br><span class="line">composite合成的，复合的，合成物，复合材料</span><br><span class="line"></span><br><span class="line">rivalry竞争，敌对</span><br><span class="line"></span><br><span class="line">pertinent适当的，中肯的，有关的</span><br><span class="line"></span><br><span class="line">domestic国产，国内的</span><br><span class="line"></span><br><span class="line">despise轻视，看不起，蔑视</span><br><span class="line"></span><br><span class="line">magnet磁体，磁铁</span><br><span class="line"></span><br><span class="line">experimentally实验上的，用实验方法</span><br><span class="line"></span><br><span class="line">synthesis合成</span><br><span class="line"></span><br><span class="line">loom织布机，隐现，即将来临</span><br><span class="line"></span><br><span class="line">pastime消遣，娱乐</span><br><span class="line"></span><br><span class="line">manure肥料，耕种，施肥于</span><br><span class="line"></span><br><span class="line">spread伸开，伸展，传播，摊开，广大的</span><br><span class="line"></span><br><span class="line">advent到来，出现，来临</span><br><span class="line"></span><br><span class="line">device器械，装置，设备，手段，策略</span><br><span class="line"></span><br><span class="line">probe探测，探索，调查，探针</span><br><span class="line"></span><br><span class="line">solidify凝固，使团结，巩固</span><br><span class="line"></span><br><span class="line">molten融化的，铸造的，炙热的</span><br><span class="line"></span><br><span class="line">lava火山岩</span><br><span class="line"></span><br><span class="line">volcano火山 </span><br><span class="line"></span><br><span class="line">refuge避难，庇护，避难所，收容所，寻求庇护，提供庇护</span><br><span class="line"></span><br><span class="line">hybrid杂种，混血人，混合的</span><br><span class="line"></span><br><span class="line">ancestor祖先</span><br><span class="line"></span><br><span class="line">commuten. 通勤（口语）</span><br><span class="line">vt. 减刑；交换；用……交换；使……变成</span><br><span class="line">vi. （搭乘车、船等）通勤；代偿</span><br><span class="line"></span><br><span class="line">shrink萎缩，收缩，退缩，畏惧</span><br><span class="line"></span><br><span class="line">denial否认，拒绝</span><br><span class="line"></span><br><span class="line">timely适时地，及时的</span><br><span class="line"></span><br><span class="line">electricity电力，电流，电学</span><br><span class="line"></span><br><span class="line">consumption消耗，消费，耗尽</span><br><span class="line"></span><br><span class="line">prototype原型、</span><br><span class="line"></span><br><span class="line">oyster牡蛎</span><br><span class="line"></span><br><span class="line">passport护照</span><br><span class="line"></span><br><span class="line">legitimate合法的。合理的，授权，宣布合法的</span><br><span class="line"></span><br><span class="line">conscious意识，神志清醒的</span><br><span class="line"></span><br><span class="line">fist拳头。笔迹，用拳头打。握成拳</span><br><span class="line"></span><br><span class="line">participant参与者，参加者</span><br><span class="line"></span><br><span class="line">scratch抓痕，擦伤</span><br><span class="line"></span><br><span class="line">spy间谍，密探，当间谍</span><br><span class="line"></span><br><span class="line">haughty傲慢的</span><br><span class="line"></span><br><span class="line">plea抗辩，恳求，请求</span><br><span class="line"></span><br><span class="line">recur重新出现，再次发生，反复</span><br><span class="line"></span><br><span class="line">sack布袋</span><br><span class="line"></span><br><span class="line">coarse粗糙的，粗俗的</span><br><span class="line"></span><br><span class="line">stun使昏迷。使发愣</span><br><span class="line"></span><br><span class="line">growl咆哮，吼叫，咆哮声</span><br><span class="line"></span><br><span class="line">recipient接受者。容器。善于接受的</span><br><span class="line"></span><br><span class="line">inevitable不可避免的 </span><br><span class="line"></span><br><span class="line">consensus共识，一致同意</span><br><span class="line"></span><br><span class="line">tremendous巨大的，极好的</span><br><span class="line"></span><br><span class="line">transition过度，转变</span><br><span class="line"></span><br><span class="line">brief 简短的，简明扼要的</span><br><span class="line"></span><br><span class="line">dispute辩论，怀疑，争论</span><br><span class="line"></span><br><span class="line">consequence结果，推论</span><br><span class="line"></span><br><span class="line">relic遗迹，纪念的</span><br><span class="line"></span><br><span class="line">massive大量的，沉重的</span><br><span class="line"></span><br><span class="line">abrupt坚硬的</span><br><span class="line"></span><br><span class="line">summit顶峰，顶端</span><br><span class="line"></span><br><span class="line">stump 树桩，残余部分，笨拙行走，使***为难</span><br><span class="line"></span><br><span class="line">monument 纪念碑，历史遗迹，不朽的作品</span><br><span class="line"></span><br><span class="line">sheer完全的，十足的，陡峭的</span><br><span class="line"></span><br><span class="line">legend传说，传奇人物</span><br><span class="line"></span><br><span class="line">claws爪子，钳子</span><br><span class="line"></span><br><span class="line">extravagance奢侈的，浪费的，过度的</span><br><span class="line"></span><br><span class="line">justify 证明合法</span><br><span class="line"></span><br><span class="line">lavish浪费，丰富的，大方的</span><br><span class="line"></span><br><span class="line">soundv.听诊，测量，试探，宣告，</span><br><span class="line">n.声音，语音，噪声。</span><br><span class="line">adj. 健全的，合理的，可靠的</span><br><span class="line">adv. 彻底的，充分的，。</span><br><span class="line">vi 听起来，发出声音，回响</span><br><span class="line"></span><br><span class="line">engagement婚约，约会，交战，诺言</span><br><span class="line"></span><br><span class="line">robust强健的，健康的</span><br><span class="line"></span><br><span class="line">vitally生死攸关地</span><br><span class="line"></span><br><span class="line">presentation展示，演示</span><br><span class="line"></span><br><span class="line">arena舞台，竞技场</span><br><span class="line"></span><br><span class="line">contextual上下文的，前后关系的</span><br><span class="line"></span><br><span class="line">devoted……<span class="keyword">to</span> 吧*** 用于</span><br><span class="line"></span><br><span class="line">hasten加速，使赶紧</span><br><span class="line"></span><br><span class="line">hypotheses假定，臆测</span><br><span class="line"></span><br><span class="line">impairing损害，削弱</span><br><span class="line"></span><br><span class="line">incorporate包含，吸收</span><br><span class="line"></span><br><span class="line">indefinite不确定的，模糊不清的</span><br><span class="line"></span><br><span class="line">indulge满足，纵容</span><br><span class="line"></span><br><span class="line">inertia惯性，迟钝，惰性</span><br><span class="line"></span><br><span class="line">reap收获，收割</span><br><span class="line"></span><br><span class="line">warrant根据 ，证明 ，担保，辩护</span><br><span class="line"></span><br><span class="line">single digits个位数</span><br><span class="line"></span><br><span class="line">psychiatric精神病学的，</span><br><span class="line"></span><br><span class="line">symptom症状</span><br><span class="line"></span><br><span class="line">ton 吨，大量，很多</span><br><span class="line"></span><br><span class="line">description描述，说明</span><br><span class="line"></span><br><span class="line">engage  vt. 吸引，占用；使参加；雇佣；使订婚；预定vi. 从事；参与；答应，保证；交战；啮合</span><br><span class="line"></span><br><span class="line">jeopardy危险的，危险境地</span><br><span class="line"></span><br><span class="line">dubbedadj. 被称为的；译制的v. 刺；授予…称号；译制影片；结账（dub的过去分词）</span><br><span class="line"></span><br><span class="line">crackvt. 使破裂；打开；变声vi. 破裂；爆裂n. 裂缝；声变；噼啪声adj. 最好的；高明的</span><br><span class="line"></span><br><span class="line">cliniciann 临床医生</span><br><span class="line"></span><br><span class="line">drug毒品，药物</span><br><span class="line"></span><br><span class="line">overlook忽视，检查，远眺，俯瞰</span><br><span class="line"></span><br><span class="line">conspicuous显著的 ，显而易见的</span><br><span class="line"></span><br><span class="line">excessive过多的，极度的，过分的 </span><br><span class="line"></span><br><span class="line">truancy逃学，旷课</span><br><span class="line"></span><br><span class="line">demonstrate证明，显示，论证，示威</span><br><span class="line"></span><br><span class="line">neglect疏忽，忽视，忽略</span><br><span class="line"></span><br><span class="line">depress压抑，使沮丧</span><br><span class="line"></span><br><span class="line">exhibit展览，显示，提出证据，展览会，展出</span><br><span class="line"></span><br><span class="line">caught off guard 触不及防，出乎意料</span><br><span class="line"></span><br><span class="line">neon霓虹灯</span><br><span class="line"></span><br><span class="line">liable有责任的 ，有义务的， 有倾向的， </span><br><span class="line"></span><br><span class="line">transformative 变形的，变化的，有改革能力的</span><br><span class="line"></span><br><span class="line">odd adj. 奇数的；古怪的；剩余的；临时的；零散的n. 奇数；怪人；奇特的事物</span><br><span class="line"></span><br><span class="line">suppose假设，认为，料想，猜想</span><br><span class="line"></span><br><span class="line">channel开导，引导，通道，海峡</span><br><span class="line"></span><br><span class="line">bacon 腌肉，熏肉</span><br><span class="line"></span><br><span class="line">increible难以置信的，惊人的 </span><br><span class="line"></span><br><span class="line">oven烤箱</span><br><span class="line"></span><br><span class="line">gallons加仑</span><br><span class="line"></span><br><span class="line">teabag袋泡茶</span><br><span class="line"></span><br><span class="line">fairly相当的，公平的 ，简直</span><br><span class="line"></span><br><span class="line">expense损失，代价，消费，开支</span><br><span class="line"></span><br><span class="line">midst当中，中间</span><br><span class="line"></span><br><span class="line">publicizing宣传</span><br><span class="line"></span><br><span class="line">term 学期，期限，条款</span><br><span class="line"></span><br><span class="line">cling附着，紧贴</span><br><span class="line"></span><br><span class="line">stuffn. 东西；材料；填充物；素材资料</span><br><span class="line">vt. 塞满；填塞；让吃饱</span><br><span class="line">vi. 吃得过多</span><br><span class="line"></span><br><span class="line">chemical化学制品，化学的</span><br><span class="line"></span><br><span class="line">intense激烈的，强烈的</span><br><span class="line"></span><br><span class="line">a chunk off厚片，大块，相当大的数量</span><br><span class="line"></span><br><span class="line">consecutive不断地 ，连续的</span><br><span class="line"></span><br><span class="line">underrate低估 ， 看轻</span><br><span class="line"></span><br><span class="line">correspondent客户，通信</span><br><span class="line"></span><br><span class="line">proficient熟练的，精通的</span><br><span class="line"></span><br><span class="line">consent 同意，赞成</span><br><span class="line"></span><br><span class="line">harness治理，驾驭，马具</span><br><span class="line"></span><br><span class="line">revival复兴，复活，恢复精神</span><br><span class="line"></span><br><span class="line">implement施行，执行，</span><br><span class="line"></span><br><span class="line">sake目的，利益</span><br><span class="line"></span><br><span class="line">innovation创新，革新，方法</span><br><span class="line"></span><br><span class="line">infant婴儿，幼儿，未成年人</span><br><span class="line"></span><br><span class="line">approximate大约</span><br><span class="line"></span><br><span class="line">period周期，目的，月经</span><br><span class="line"></span><br><span class="line">toll通行费，代价，征收</span><br><span class="line"></span><br><span class="line">revitalise使有新活力，使新生</span><br><span class="line"></span><br><span class="line">tribal部落的，种族的</span><br><span class="line"></span><br><span class="line">be down <span class="keyword">to</span> 只剩下</span><br><span class="line"></span><br><span class="line">grocery食品杂货</span><br><span class="line"></span><br><span class="line">immersion沉浸，陷入，专心</span><br><span class="line"></span><br><span class="line">togues舌头，言语，口才</span><br><span class="line"></span><br><span class="line">wage支付，工资</span><br><span class="line"></span><br><span class="line">devastate毁灭，毁坏</span><br><span class="line"></span><br><span class="line">recession经济萧条</span><br><span class="line"></span><br><span class="line">optional</span><br><span class="line"></span><br><span class="line">whereas然而，反之</span><br><span class="line"></span><br><span class="line">compulsory义务的，必修的</span><br><span class="line"></span><br><span class="line">politics政治的 </span><br><span class="line"></span><br><span class="line">out of a hat 随意的，任意的</span><br><span class="line"></span><br><span class="line">engage 吸引，占用，雇佣，预定，答应，保证</span><br><span class="line"></span><br><span class="line">reluctant不情愿的，顽强的</span><br><span class="line"></span><br><span class="line">deliberately故意的，深思熟虑的</span><br><span class="line"></span><br><span class="line">spoil溺爱，糟蹋，破坏，掠夺，次品，奖品</span><br><span class="line"></span><br><span class="line">stream溪流，流动，光线，涌进，流出，涌出</span><br><span class="line"></span><br><span class="line">lift举起，提升，空运，耸立，电梯。起重机</span><br><span class="line"></span><br><span class="line">before the days of在…………时代开始以前</span><br><span class="line"></span><br><span class="line">ground floor底层，基层</span><br><span class="line"></span><br><span class="line">mathematician数学家</span><br><span class="line"></span><br><span class="line">military军事的</span><br><span class="line"></span><br><span class="line">pull out of拉出，取出</span><br><span class="line"></span><br><span class="line">facility设备</span><br><span class="line"></span><br><span class="line">infect感染，传染</span><br><span class="line"></span><br><span class="line">invisible无形的看不见的</span><br><span class="line"></span><br><span class="line"><span class="builtin-name">run</span> out of用完</span><br><span class="line"></span><br><span class="line">hint 暗示</span><br><span class="line"></span><br><span class="line">parerntal父母亲的</span><br><span class="line"></span><br><span class="line">proposal建议，求婚</span><br><span class="line"></span><br><span class="line">site地点，位置，选址，设置</span><br><span class="line"></span><br><span class="line">ingredient元素，要素，组成部分</span><br><span class="line"></span><br><span class="line">soughtseek的过去分词</span><br><span class="line"></span><br><span class="line">dialect方言</span><br><span class="line"></span><br><span class="line">medium中间的，中等的，媒介，方法</span><br><span class="line"></span><br><span class="line">bind结合，装订，捆绑</span><br><span class="line"></span><br><span class="line"><span class="keyword">in</span> terms of依据，依照，在……方面</span><br><span class="line"></span><br><span class="line">ratio比率</span><br><span class="line"></span><br><span class="line">unity团结，一致</span><br><span class="line"></span><br><span class="line">obvious明显的，显著的，平淡无奇的 </span><br><span class="line"></span><br><span class="line">clarity清楚，透明，n</span><br><span class="line"></span><br><span class="line">crack使爆裂，打开，变声，裂缝</span><br><span class="line"></span><br><span class="line">concise简明的，简洁的</span><br><span class="line"></span><br><span class="line">slip up疏忽，跌倒，遭遇不幸</span><br><span class="line"></span><br><span class="line">properly适当的，正确的</span><br><span class="line"></span><br><span class="line">migrant候鸟，移居者，流浪的 </span><br><span class="line"></span><br><span class="line">labor劳动，劳工，工作，努力，分娩</span><br></pre></td></tr></table></figure><h1 id="2018-10-24"><a href="#2018-10-24" class="headerlink" title="2018/10/24"></a>2018/10/24</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">just-hartched </span>刚刚破壳</span><br><span class="line">colony 殖民地 ， 移民队</span><br><span class="line"><span class="keyword">breading </span>colony 繁殖地</span><br><span class="line">take a toll 产生负面影响</span><br><span class="line">vulnerable 易受攻击</span><br><span class="line">involve 牵涉，涉及</span><br><span class="line">conservation 保守</span><br><span class="line">meticulously 一丝不苟</span><br><span class="line">starvation 饿死 </span><br><span class="line">predation 捕食</span><br><span class="line">prelong 延长</span><br><span class="line">period 周期</span><br><span class="line">supplies 物质 ， 供产品</span><br><span class="line">restrict 约束，限制</span><br><span class="line"><span class="keyword">subsidles </span>津贴，补助</span><br><span class="line">deposits 存款</span><br><span class="line"><span class="keyword">substrantial </span>大量的。 实质的</span><br><span class="line">mortgage 抵押的</span><br><span class="line">slump 暴跌</span><br><span class="line">rebount 反弹</span><br><span class="line">almost 差不多</span><br><span class="line">mominal 名义上的</span><br><span class="line">dramatic 戏剧性的</span><br><span class="line">downward 向下的</span><br><span class="line">spiral 螺旋的</span><br><span class="line">recession 衰退，不景气</span><br></pre></td></tr></table></figure><h1 id="20181104"><a href="#20181104" class="headerlink" title="20181104"></a>20181104</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">smuggle 走私</span><br><span class="line">sophisticate 复杂的</span><br><span class="line">gadget 小玩意</span><br><span class="line"><span class="keyword">discipline </span>学科，纪律</span><br><span class="line"><span class="keyword">disruptive </span>破坏的，分裂的</span><br><span class="line">unit单位的</span><br><span class="line"><span class="keyword">disqualified </span>不合格的</span><br><span class="line">council委员会</span><br><span class="line">tolerance公差，容忍度</span><br><span class="line">pupils学生，瞳孔</span><br><span class="line">condone宽恕，赦免</span><br><span class="line">stakes桩，棍子。赌注</span><br><span class="line">pressurized 加压的，</span><br><span class="line">emphasized 重点，强调</span><br><span class="line"></span><br><span class="line"><span class="keyword">bulk</span>体积，容积 ，大多数，使扩大</span><br><span class="line">estimate估计，判断，评价，看法</span><br><span class="line">intimate亲密的</span><br><span class="line">overshadow使失色，使暗淡，多去……光彩</span><br><span class="line">counterpart副本，配对物</span><br><span class="line">alien 外国的，相异的，外国人，外星人</span><br><span class="line">essentially本质的</span><br><span class="line">endorse本书，认可，赞同</span><br><span class="line">supervisor监督人，管理员，检查员</span><br><span class="line"><span class="keyword">distraction</span>私自</span><br><span class="line">self-image自我形象</span><br><span class="line">sibling兄弟姐妹</span><br><span class="line">validate证实，验证；确认；使生效</span><br><span class="line">presentvt. 提出；介绍；呈现；</span><br><span class="line">赠送vi. 举枪瞄准</span><br><span class="line">adj. 现在的；出席的</span><br><span class="line">n. 现在；礼物；瞄准</span><br><span class="line"></span><br><span class="line">recognition识别，辨别，重新认识</span><br><span class="line">mockvt. 愚弄，嘲弄</span><br><span class="line">adj. 仿制的，模拟的，虚假的，不诚实的</span><br><span class="line">vt. 不尊重，蔑视</span><br><span class="line">dubbed被称作</span><br><span class="line"><span class="keyword">be </span>vulnerable to 易受</span><br><span class="line">作文：</span><br><span class="line">priceless天价的，极贵重的</span><br><span class="line"><span class="keyword">originated </span>from 起源</span><br><span class="line">generation代，产生</span><br><span class="line">exclusive独有的，排外的，专一的，独家记者</span><br><span class="line">collapsing崩溃；塌陷（collapse的ing形式）；折叠；压扁</span><br><span class="line">a kind of 一种</span><br><span class="line">so…… that以至于</span><br><span class="line">archaic古代的，陈旧的</span><br><span class="line"></span><br><span class="line">interactive相互作用，交互作用</span><br><span class="line">cable缆绳，电缆</span><br><span class="line">rolling out 推出</span><br><span class="line">skepticism怀疑的态度</span><br><span class="line">overlay覆盖图，覆盖物</span><br><span class="line">catalogue目录</span><br><span class="line">engagevt. 吸引，占用；使参加；雇佣；使订婚；预定</span><br><span class="line">vi. 从事；参与；答应，保证；交战；啮合</span><br><span class="line">agency代理</span><br><span class="line">surge汹涌，波涛，大浪</span><br><span class="line">crave渴望，恳求</span><br><span class="line">anticipate期望，预期</span><br><span class="line">cure治愈</span><br><span class="line"><span class="keyword">bleak</span>阴冷的，荒凉的，无希望的</span><br><span class="line"><span class="keyword">justified</span>adj. 有正当理由的；合乎情理的；事出有因的</span><br><span class="line">v. 调整（<span class="keyword">justify的过去分词）；证明…正当</span></span><br><span class="line"><span class="keyword">bother</span>烦扰，打扰</span><br><span class="line">inadequate不充分的，不恰当的</span><br><span class="line">wise明智的</span><br><span class="line">mass块团，群总，大量</span><br><span class="line">on the contrary 相反的</span><br><span class="line">crisis危机，危险期</span><br><span class="line">clarifyvt. 澄清；阐明</span><br><span class="line">vi. 得到澄清；变得明晰；得到净化</span><br><span class="line">plungen. 投入；跳进</span><br><span class="line">vi. 突然地下降；投入；陷入；跳进</span><br><span class="line">vt. 使陷入；使投入；使插入</span><br><span class="line">serve as 担任…，充当…；起…的作用</span><br><span class="line">soared飙升</span><br><span class="line">excuse 借口，理由</span><br><span class="line">sectorn. 部门；扇形，扇区；象限仪；函数尺</span><br><span class="line">vt. 把…分成扇形，</span><br><span class="line"></span><br><span class="line">Depression不景气，沮丧，忧愁</span><br><span class="line">identical完全相同的</span><br><span class="line"><span class="keyword">buildup</span>增强，发展</span><br><span class="line">fiscal财政的，会计</span><br><span class="line">stimulus刺激，激励</span><br><span class="line">ideology意识形态，</span><br><span class="line">oppose to 反对的</span><br><span class="line">cripplingadj. 造成严重后果的</span><br><span class="line">v. 削弱（cripple的ing形式）；使受损</span><br><span class="line">n. 残缺的东西；有缺陷的事物</span><br><span class="line">desperate不顾一切</span><br></pre></td></tr></table></figure><h1 id="20181108"><a href="#20181108" class="headerlink" title="20181108"></a>20181108</h1><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">minority少数派 ， 少数民族  </span><br><span class="line"><span class="keyword">broadly</span>概括的，明显的</span><br><span class="line">reluctant不情愿的</span><br><span class="line">post 岗位，邮件， 张贴，公布</span><br><span class="line">geneticist遗传学者</span><br><span class="line">astronomer天文学家</span><br><span class="line"><span class="keyword">be </span>accustomed to 习惯了</span><br><span class="line">exception例外</span><br><span class="line">object to 拒绝</span><br><span class="line">funder投资人</span><br><span class="line">funding提供资金</span><br><span class="line"><span class="keyword">journal</span>学术期刊</span><br><span class="line"><span class="keyword">barriers</span>隔阂，屏障</span><br><span class="line">preserve保存</span><br><span class="line">recognize 认出，识别，确认</span><br><span class="line">galaxies星系</span><br><span class="line">telescope压缩，望远镜</span><br><span class="line">recognize识别，认出，确认</span><br><span class="line">citations引用</span><br><span class="line"><span class="keyword">be </span>springing up涌现</span><br><span class="line"><span class="keyword">multidisciplinary</span>有关各种学问的</span><br><span class="line">density密度</span><br><span class="line">timber木材</span><br><span class="line">opposed反对</span><br><span class="line">ambiguous模棱两可</span><br><span class="line">liberal自由的</span><br><span class="line">neutral中立的</span><br><span class="line">hinder阻碍</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">plunge投入，陷入，使陷入，跳进，突然下降</span><br><span class="line">capped覆盖，给…… 带帽</span><br><span class="line">flagship旗舰</span><br><span class="line"><span class="keyword">shrank</span>缩小</span><br><span class="line">retailer零售商</span><br><span class="line">lure诱惑</span><br><span class="line"><span class="keyword">dining </span>out 外出就餐</span><br><span class="line">accessories配件，饰品</span><br><span class="line"><span class="keyword">be </span>attributed to 归因为</span><br><span class="line"><span class="keyword">shortfall</span>短缺</span><br><span class="line">forecast预期</span><br><span class="line">press release发射，释放，允许发展</span><br><span class="line">prompted引起</span><br><span class="line">temporary气温</span><br><span class="line">pledged to 保证， 抵押</span><br><span class="line">executive行政的，经营的</span><br><span class="line">slash猛砍，鞭打，严厉批评</span><br><span class="line">metropolitan大都市的</span><br><span class="line">era时代，年纪</span><br><span class="line">category种类，分类</span><br><span class="line">channel引导</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">further进一步的。而且，深一层的</span><br><span class="line">innovation创新，革新</span><br><span class="line">policymaker决策者</span><br><span class="line"><span class="keyword">barrel</span>桶，枪管，炮管，把 …… 装入桶中</span><br><span class="line"><span class="keyword">substitute</span>替代品</span><br><span class="line">Egyptian埃及的</span><br><span class="line">endorse背书，认可，签署</span><br><span class="line">fragile脆的，易碎的</span><br><span class="line">alleviate减轻</span><br><span class="line">deposite存款，沉积</span><br><span class="line">intense强烈的</span><br><span class="line">undermine破坏 ，渐渐破坏</span><br><span class="line">quantitative定量的，量的</span><br><span class="line">stock股份，股票，存货的，平凡的</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;before&quot;&gt;&lt;a href=&quot;#before&quot; class=&quot;headerlink&quot; title=&quot;before&quot;&gt;&lt;/a&gt;before&lt;/h1&gt;&lt;figure class=&quot;highlight routeros&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
      <category term="english" scheme="http://yoursite.com/categories/english/"/>
    
    
      <category term="english" scheme="http://yoursite.com/tags/english/"/>
    
  </entry>
  
  <entry>
    <title>mysql</title>
    <link href="http://yoursite.com/2018/10/11/mysql/"/>
    <id>http://yoursite.com/2018/10/11/mysql/</id>
    <published>2018-10-11T09:59:33.000Z</published>
    <updated>2018-11-11T12:52:37.959Z</updated>
    
    <content type="html"><![CDATA[<h1 id="解决mysql插入中文字符异常02-48-47"><a href="#解决mysql插入中文字符异常02-48-47" class="headerlink" title="解决mysql插入中文字符异常02:48:47"></a>解决mysql插入中文字符异常02:48:47</h1><pre><code>Error Code: 1064. You have an error in your SQL syntax; check the manual thatcorresponds to your MySQL server version for the right syntax to use near &apos;varchar(100) not null&apos; at line 1    0.00020 sec1.在mysql的安装目录下找到my.ini,作如下修改：[mysqld]character-set-server=utf8mb4[mysql]default-character-set=utf8mb42. 将已经建好的表也转换成utf8mb4命令：alter table TABLE_NAME convert to character set utf8mb4 collate utf8mb4_bin; （将TABLE_NAME替换成你的表名）修改后重启Mysql</code></pre><h1 id="mysql-首次启动"><a href="#mysql-首次启动" class="headerlink" title="mysql 首次启动"></a>mysql 首次启动</h1><pre><code>mysql 自动生成的sudo cat /etc/mysql/debian.cnf</code></pre><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Automatically generated for Debian scripts. DO NOT TOUCH!</span></span><br><span class="line">[client]</span><br><span class="line">host     = localhost</span><br><span class="line">user     = debian-sys-maint</span><br><span class="line">password = 9rtt2JDishiMrewE</span><br><span class="line">socket   = /var/run/mysqld/mysqld.sock</span><br><span class="line">[mysql_upgrade]</span><br><span class="line">host     = localhost</span><br><span class="line">user     = debian-sys-maint</span><br><span class="line">password = 9rtt2JDishiMrewE</span><br><span class="line">socket   = /var/run/mysqld/mysqld.sock</span><br></pre></td></tr></table></figure><h1 id="mysql-修改密码"><a href="#mysql-修改密码" class="headerlink" title="mysql 修改密码"></a>mysql 修改密码</h1><p>ALTER user ‘root‘@’localhost’ IDENTIFIED BY ‘Qian123#’  </p><h1 id="mysql-skip-grant-tables"><a href="#mysql-skip-grant-tables" class="headerlink" title="mysql skip-grant-tables"></a>mysql skip-grant-tables</h1><ol><li>先关闭mysql</li><li>然后开启mysqld start skip-grant-tables</li><li>然后mysql -uroot -p 可以不填密码直接回车</li></ol><h1 id="mysql-8-0-创建新用户"><a href="#mysql-8-0-创建新用户" class="headerlink" title="mysql 8.0 创建新用户"></a>mysql 8.0 创建新用户</h1><p>mysql&gt; create user ‘news‘@’39.15.16.14’ identified by ‘123news’;<br>Query OK, 0 rows affected (0.09 sec)</p><h1 id="授权用户"><a href="#授权用户" class="headerlink" title="授权用户"></a>授权用户</h1><p>mysql&gt; grant all privileges on news.* to ‘news‘@’39.15.16.14’;<br>Query OK, 0 rows affected (0.10 sec)</p><p>mysql&gt; flush privileges;<br>Query OK, 0 rows affected (0.01 sec)</p><h1 id="创建账号密码"><a href="#创建账号密码" class="headerlink" title="创建账号密码"></a>创建账号密码</h1><p>CREATE USER <code>wangwei</code>@<code>127.0.0.1</code> IDENTIFIED BY ‘passowrd’;</p><h1 id="授予权限"><a href="#授予权限" class="headerlink" title="授予权限"></a>授予权限</h1><p>GRANT ALL ON <em>.</em> TO <code>wangwei</code>@<code>127.0.0.1</code> WITH GRANT OPTION;</p><h1 id="删除权限"><a href="#删除权限" class="headerlink" title="删除权限"></a>删除权限</h1><p>REVOKE all privileges ON databasename.tablename FROM ‘username‘@’host’;</p><h1 id="修改密码"><a href="#修改密码" class="headerlink" title="修改密码"></a>修改密码</h1><p>ALTER USER ‘root‘@’localhost’ IDENTIFIED WITH mysql_native_password BY ‘你的密码’;</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;解决mysql插入中文字符异常02-48-47&quot;&gt;&lt;a href=&quot;#解决mysql插入中文字符异常02-48-47&quot; class=&quot;headerlink&quot; title=&quot;解决mysql插入中文字符异常02:48:47&quot;&gt;&lt;/a&gt;解决mysql插入中文字符异常02
      
    
    </summary>
    
      <category term="mysql" scheme="http://yoursite.com/categories/mysql/"/>
    
    
      <category term="mysql" scheme="http://yoursite.com/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>javaweb</title>
    <link href="http://yoursite.com/2018/09/23/javaweb/"/>
    <id>http://yoursite.com/2018/09/23/javaweb/</id>
    <published>2018-09-24T00:48:27.000Z</published>
    <updated>2018-10-23T12:33:43.902Z</updated>
    
    <content type="html"><![CDATA[<h1 id="html"><a href="#html" class="headerlink" title="html"></a>html</h1><h2 id="表单"><a href="#表单" class="headerlink" title="表单"></a><form action="“url”" method="get | post" name="name" onsubmit="" target=""><form>表单</form></form></h2><pre><code>action 属性 该属性用来指定处理数据的url地址method 属性 该属性制定将数据传到服务器的方式onSubmit 属性 制定用户点击时触发的事件name 该表单的名称target 制定输入结果显示在哪一个窗口，1. _blank 在新窗口中打开2. 在同一个窗口中打开_self3. 在上一级窗口打开_parent4. 在浏览器整个窗口打开  _top</code></pre><h1 id="常见的网络状态"><a href="#常见的网络状态" class="headerlink" title="常见的网络状态"></a>常见的网络状态</h1><p>200: 一切正常<br>300/301： 页面重定向/跳转<br>404：资源不存在<br>403：权限不足<br>500：服务器内部错误，（代码有错）</p><h1 id="jsp-定义"><a href="#jsp-定义" class="headerlink" title="jsp 定义"></a>jsp 定义</h1><pre><code>jsp: html 嵌入java代码&lt;% java 代码%&gt;</code></pre><h1 id="默认index"><a href="#默认index" class="headerlink" title="默认index"></a>默认index</h1><pre><code>在/WEB_INF/web.xml中设置默认打index</code></pre><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;welcome-<span class="built_in">file</span>-<span class="built_in">list</span>&gt;</span><br><span class="line">&lt;welcome-<span class="built_in">file</span>&gt;index.jsp&lt;/welcome-<span class="built_in">file</span>&gt;</span><br><span class="line">&lt;/welcome-<span class="built_in">file</span>-<span class="built_in">list</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="虚拟路径"><a href="#虚拟路径" class="headerlink" title="虚拟路径"></a>虚拟路径</h1><pre><code>将web项目放在webapps之外打地方  在server.html 中&lt;Engine&gt;下的&lt;host&gt;钟添加&lt;Context&gt;</code></pre><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">方式 1</span><br><span class="line">&lt;Context <span class="attribute">docBase</span>=<span class="string">""</span> <span class="attribute">path</span>=<span class="string">""</span>&gt;</span><br><span class="line">docBase: 实际路径</span><br><span class="line">path： 虚拟路径（绝对路径或相对路径（相对webapps））</span><br><span class="line">&lt;Context <span class="attribute">docBase</span>=<span class="string">"PATH"</span> <span class="attribute">path</span>=<span class="string">"/JspProject"</span>&gt;</span><br><span class="line">访问webapps下打JspProject 相当于访问PATH</span><br><span class="line"></span><br><span class="line">方式 2</span><br><span class="line">在catalin中的localhost钟新建 项目名.xml</span><br><span class="line">打开 .xml 文件添加</span><br><span class="line">&lt;Context <span class="attribute">docBase</span>=<span class="string">"PATH"</span> <span class="attribute">path</span>=<span class="string">"/JspProject"</span>&gt;</span><br></pre></td></tr></table></figure><h1 id="虚拟主机"><a href="#虚拟主机" class="headerlink" title="虚拟主机"></a>虚拟主机</h1><pre><code>例子，通过www.test.com 访问本机a. 在conf/server.xml下，添加Host</code></pre><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;Host appBase=<span class="string">"实际项目路径"</span> name=<span class="string">"www.test.com"</span>&gt;</span><br><span class="line">&lt;context docBase=<span class="string">"实际项目名"</span> path=<span class="string">"/"</span> /&gt;</span><br><span class="line">&lt;/Host&gt;</span><br><span class="line"><span class="selector-tag">b</span>.修改Engine 的dufaultHost 为 www<span class="selector-class">.test</span><span class="selector-class">.com</span></span><br><span class="line">    c.修改本地域名解析，hosts文件</span><br><span class="line">    （ubuntu 下的/etc/hosts,windows 下 C:\windows\System32\drivers\etc\host）</span><br></pre></td></tr></table></figure><pre><code>以上虚拟路径和虚拟主机不常用</code></pre><h1 id="Jsp执行流程"><a href="#Jsp执行流程" class="headerlink" title="Jsp执行流程"></a>Jsp执行流程</h1><pre><code>第一次访问，服务端将jsp翻译成java，再讲java编译成class文件</code></pre><h1 id="Eclipse-安装"><a href="#Eclipse-安装" class="headerlink" title="Eclipse 安装"></a>Eclipse 安装</h1><pre><code>说在前面Eclipse 安装首先配置jdk，jdk版本一定要与eclipse版本适配(曾经，用32位jdk配置64位eclipse，被坑了一上午)</code></pre><h2 id="jdk-安装"><a href="#jdk-安装" class="headerlink" title="jdk 安装"></a>jdk 安装</h2><pre><code>下载jdk，解压到目录，然后添加环境变量我直接添加在/etc/profile</code></pre><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/usr/lib/jvm/jdk1.8.0_181</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JRE_HOME</span>=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLASSPATH</span>=.:$&#123;JAVA_HOME&#125;/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=.:$&#123;JAVA_HOME&#125;/bin:<span class="variable">$PATH</span></span><br></pre></td></tr></table></figure><p><a href="https://www.oracle.com/technetwork/cn/java/javase/downloads/jdk8-downloads-2133151-zhs.html" target="_blank" rel="noopener">jdk 地址</a><br><a href="https://www.eclipse.org/downloads/download.php?file=/oomph/epp/2018-09/R/eclipse-inst-linux64.tar.gz&amp;mirror_id=1093" target="_blank" rel="noopener">eclipse</a></p><h2 id="Eclipse-安装-1"><a href="#Eclipse-安装-1" class="headerlink" title="Eclipse 安装"></a>Eclipse 安装</h2><pre><code>配置玩jdk之后，下载Eclipse解压，然后运行./eclipse_inst 然后无脑操作</code></pre><h2 id="tomcat配置关联"><a href="#tomcat配置关联" class="headerlink" title="tomcat配置关联"></a>tomcat配置关联</h2><pre><code>首先在windows 下的preference钟找到runtime Environment 钟添加Apache Tomcat,我这边悬着tomcat 8.5然后在servers中配置tomcat，同样是tomcat8.5然后新建一个other/dynamic web project 项目</code></pre><h1 id="Jsp-的页面元素"><a href="#Jsp-的页面元素" class="headerlink" title="Jsp 的页面元素"></a>Jsp 的页面元素</h1><h2 id="scriptlet"><a href="#scriptlet" class="headerlink" title="scriptlet"></a>scriptlet</h2><ol><li>&lt;% 局部变量 java语句%&gt;</li><li>&lt;%!全局变量 定义方法% &gt;<figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">!</span></span><br><span class="line"><span class="ruby">public String BookName;<span class="regexp">//</span>全局变量</span></span><br><span class="line"><span class="ruby">public void init()&#123;</span></span><br><span class="line"><span class="ruby">BookName = <span class="string">"java book"</span>;</span></span><br><span class="line"><span class="ruby">&#125;</span></span><br><span class="line"><span class="ruby"></span><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby"> </span></span><br><span class="line"><span class="ruby">String name = <span class="string">"zhangsan"</span>;<span class="regexp">//</span>局部变量</span></span><br><span class="line"><span class="ruby">out.print(<span class="string">"hello..."</span>+name );</span></span><br><span class="line"><span class="ruby">init();</span></span><br><span class="line"><span class="ruby"></span><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%=</span></span></span><span class="ruby">BookName </span><span class="xml"><span class="tag">%&gt;</span></span></span><br><span class="line"><span class="xml"><span class="comment">&lt;!--一般而言，修改web.xml,配置文件，java代码，需要重启tomcat服务--&gt;</span></span></span><br><span class="line"><span class="xml">   <span class="comment">&lt;!--修改jsp，css，html,js不需要--&gt;</span></span></span><br></pre></td></tr></table></figure></li></ol><h2 id="指令"><a href="#指令" class="headerlink" title="指令"></a>指令</h2><h3 id="page指令"><a href="#page指令" class="headerlink" title="page指令"></a>page指令</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">网页开头</span><br><span class="line">&lt;%@<span class="built_in"> page </span><span class="attribute">language</span>=<span class="string">"java"</span> <span class="attribute">contentType</span>=<span class="string">"text/html; charset=UTF-8"</span></span><br><span class="line">    <span class="attribute">pageEncoding</span>=<span class="string">"UTF-8"</span>%&gt;</span><br></pre></td></tr></table></figure><pre><code>page指定属性</code></pre><ol><li>language : jsp 页面使用打脚本语言</li><li>import 导入类</li><li>pageEncoding:jsp 自生编码</li><li>contentType： 浏览器解析jsp编码</li></ol><h2 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h2><ol><li>html 注释<!----></li><li>java 注释// /**/</li><li>jsp注释 &lt;%– –%&gt;</li></ol><p>##jsp 九大内置对象</p><h2 id="out"><a href="#out" class="headerlink" title="out"></a>out</h2><pre><code>向客户端输出内容</code></pre><h2 id="request"><a href="#request" class="headerlink" title="request"></a>request</h2><pre><code>请求对象，存储客户端向服务端发送打请求信息常见方法: </code></pre><ol><li>String getParameter(String name);根据请求打字段名key，返回字段值value</li><li>String[] getParameterValues(String name); 根据请求打字段名key 返回多个字段value</li><li>void setCharacterEncoding（“编码格式utf-8”）设置请求编码(tomcat7以前默认编码ios-8859-1，tomcat8以后默认编码utf-8）</li><li>getRequestDispatcher().forward();请求转发的方式跳转页面 A-&gt;B</li><li>getServerContext() 或请项目的ServletContext对象</li></ol><h2 id="pageContent"><a href="#pageContent" class="headerlink" title="pageContent"></a>pageContent</h2><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>register.jsp<br><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="ruby">    pageEncoding=<span class="string">"UTF-8"</span></span><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"show.jsp"</span> &gt;</span></span></span><br><span class="line"><span class="xml">用户名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span> = <span class="string">"uname"</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">姓名:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span> = <span class="string">"name"</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">密码:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"password"</span> <span class="attr">name</span> = <span class="string">"pwd"</span> /&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">爱好: <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">足球:<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span> = <span class="string">"hobby"</span>  <span class="attr">value</span>=<span class="string">"足球"</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml">篮球 :<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"checkbox"</span> <span class="attr">name</span> = <span class="string">"hobby"</span> <span class="attr">value</span>=<span class="string">"篮球"</span>/&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"注册"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p><figure class="highlight vbscript-html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="vbscript">&lt;%@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="vbscript">    pageEncoding=<span class="string">"UTF-8"</span>%&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript"><span class="built_in">request</span>.setCharacterEncoding(<span class="string">"utf-8"</span>);//设置post 方式编码</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> name = <span class="built_in">request</span>.getParameter(<span class="string">"uname"</span>); </span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span> pwd = <span class="built_in">request</span>.getParameter(<span class="string">"pwd"</span>);</span></span><br><span class="line"><span class="vbscript"><span class="built_in">String</span>[] hobby = <span class="built_in">request</span>.getParameterValues(<span class="string">"hobby"</span>);</span></span><br><span class="line"><span class="vbscript">%&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">注册成功,信息如下</span></span><br><span class="line"><span class="xml">姓名：</span><span class="vbscript">&lt;%=name %&gt;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">密码：</span><span class="vbscript">&lt;%=pwd %&gt;</span><span class="xml"><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">爱好：</span></span><br><span class="line"><span class="xml"></span><span class="vbscript">&lt;%</span></span><br><span class="line"><span class="vbscript"><span class="keyword">if</span>(hobby != <span class="literal">null</span>)&#123;</span></span><br><span class="line"><span class="vbscript"><span class="keyword">for</span>(<span class="built_in">String</span> i : hobby)&#123;</span></span><br><span class="line"><span class="vbscript">out.print(i);</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript">&#125;</span></span><br><span class="line"><span class="vbscript"></span></span><br><span class="line"><span class="vbscript"></span></span><br><span class="line"><span class="vbscript"></span></span><br><span class="line"><span class="vbscript">%&gt;</span><span class="xml"></span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><p><img src="/2018/09/23/javaweb/show.png" alt="show.jsp"></p><h2 id="get-和-post"><a href="#get-和-post" class="headerlink" title="get 和 post"></a>get 和 post</h2><p><a href="http://localhost:8888/JspProject/show.jsp?uname=sdf&amp;name=sdf&amp;pwd=sdf&amp;hobby=%E8%B6%B3%E7%90%83" target="_blank" rel="noopener">http://localhost:8888/JspProject/show.jsp?uname=sdf&amp;name=sdf&amp;pwd=sdf&amp;hobby=%E8%B6%B3%E7%90%83</a><br>get 提交方式 method=“get” 和 地址栏 请求方式默认都属于get提交方式，form 表带默认是get模式</p><h4 id="get-和-post-区别"><a href="#get-和-post-区别" class="headerlink" title="get 和 post 区别"></a>get 和 post 区别</h4><ol><li>get方式在地址栏显示请求信息，但是地址栏能够容纳信息有限，4-5kb，且不安全</li><li>文件上传方式必须是post</li><li>推荐使用post</li></ol><h2 id="乱码"><a href="#乱码" class="headerlink" title="乱码"></a>乱码</h2><p>a. 使用new String(name.getBytes(“ios-8859-1”),”utf-8”);</p><p>b. 修改server.xml 将tomcat 默认编码改为 utf -8 ，添加URIEncoding=”UTF-8”<br>如图：<br><img src="/2018/09/23/javaweb/修改tomcat默认编码.png" alt="修改编码"></p><h3 id="responds-响应对象"><a href="#responds-响应对象" class="headerlink" title="responds 响应对象"></a>responds 响应对象</h3><pre><code>提供的方法</code></pre><ol><li>addCookie (Cookie cookie) 服务端向客户端添加一条cookie</li><li>sendRedirect(String location) throws IOException 页面跳转打一种（重定向）</li><li>setContentType(String type) 设置服务端编码</li></ol><h2 id="页面跳转的两种方式"><a href="#页面跳转的两种方式" class="headerlink" title="页面跳转的两种方式"></a>页面跳转的两种方式</h2><table><thead><tr><th>&amp;nbps</th><th>请求转发</th><th>重定向</th></tr></thead><tbody><tr><td>地址栏是否改变</td><td>不变</td><td>改变</td></tr><tr><td>是否保留第一次请求时的数据</td><td>保留</td><td>不保留</td></tr><tr><td>请求的次数</td><td>1</td><td>2</td></tr><tr><td>跳转位置</td><td>服务端</td><td>客户端发出的第二次request</td></tr></tbody></table><h3 id="重定向和转发打两种工作方式"><a href="#重定向和转发打两种工作方式" class="headerlink" title="重定向和转发打两种工作方式"></a>重定向和转发打两种工作方式</h3><pre><code>转发（客户端） --&gt; [ 服务窗口 A(服务端) -&gt; 服务窗口B]// 服务器累不转发，实现页面跳转，所以请求1次，重定向 (客户端) --&gt;[服务窗口A] // A告诉客户端，让客户端发情球给B        客户端---&gt; 根据窗口A的回复，找B，于是客户端给B发request</code></pre><h1 id="session-服务端"><a href="#session-服务端" class="headerlink" title="session(服务端)"></a>session(服务端)</h1><h2 id="Cookie-客户端，不是内置对象-Cookie-是服务端生成的，再发给客户端保存。"><a href="#Cookie-客户端，不是内置对象-Cookie-是服务端生成的，再发给客户端保存。" class="headerlink" title="Cookie(客户端，不是内置对象): Cookie 是服务端生成的，再发给客户端保存。"></a>Cookie(客户端，不是内置对象): Cookie 是服务端生成的，再发给客户端保存。</h2><pre><code>相当于本能地访问作用 :提高访问服务器效率，但是安全性较差</code></pre><figure class="highlight delphi"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cookie： key/<span class="keyword">name</span>=value</span><br><span class="line">javax.servlet.http.Cookie</span><br><span class="line"><span class="keyword">public</span> Cookie(<span class="keyword">String</span> <span class="keyword">name</span>,<span class="keyword">String</span> <span class="keyword">name</span>)</span><br><span class="line"><span class="keyword">String</span> getName() 获取<span class="keyword">name</span></span><br><span class="line"><span class="keyword">String</span> getValue() 获取value</span><br><span class="line">void setMaxAge(int expiry); 最大有效期</span><br></pre></td></tr></table></figure><h3 id="服务器准备发送给客户端"><a href="#服务器准备发送给客户端" class="headerlink" title="服务器准备发送给客户端"></a>服务器准备发送给客户端</h3><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">response</span><span class="selector-class">.addCookie</span>(Cookie cookie);</span><br><span class="line">页面跳转 (转发，重定向)</span><br></pre></td></tr></table></figure><h3 id="客户端获取cookie"><a href="#客户端获取cookie" class="headerlink" title="客户端获取cookie:"></a>客户端获取cookie:</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">request</span><span class="selector-class">.getCookie</span>()</span><br></pre></td></tr></table></figure><pre><code>一次只能吧全部cookie全部获取</code></pre><h3 id="session-回话"><a href="#session-回话" class="headerlink" title="session : 回话"></a>session : 回话</h3><h4 id="例子"><a href="#例子" class="headerlink" title="例子"></a>例子</h4><ol><li>浏览网站，开始，关闭</li><li>购物浏览付款关闭</li></ol><h4 id="JESSIONID"><a href="#JESSIONID" class="headerlink" title="JESSIONID"></a>JESSIONID</h4><pre><code>JESSIONID 于sessionID 对应，用于区分用户客户端第一次访问服务器时，由服务断产生一个session回话，并将sessionid 给到jsessionid，通过cookie返回客户端</code></pre><h4 id="session-方法"><a href="#session-方法" class="headerlink" title="session 方法"></a>session 方法</h4><ol><li>getid 获取sessionid 编号</li><li>boolean isNew()判断是否新用户</li><li>void invalidate（）是session失效</li><li>setAttribute（）</li><li>getAttribute();</li><li>setMaxInactiveInterval(); 设置最大有效非活动时间</li><li>getMaxInactiveInterval(); 获取最大有效非活动时间</li></ol><h3 id="四种作用范围对象"><a href="#四种作用范围对象" class="headerlink" title="四种作用范围对象"></a>四种作用范围对象</h3><table><thead><tr><th>对象</th><th>中文名</th><th>作用范围</th></tr></thead><tbody><tr><td>pageContext</td><td>Jsp页面容器</td><td>当前页面有效</td></tr><tr><td>request</td><td>请求对象</td><td>同一次请求有效</td></tr><tr><td>session</td><td>会话对象</td><td>同一次会话有效</td></tr><tr><td>application</td><td>全局对象</td><td>全局有效</td></tr></tbody></table><h1 id="jDBC-java-database-connectivity"><a href="#jDBC-java-database-connectivity" class="headerlink" title="jDBC(java database connectivity)"></a>jDBC(java database connectivity)</h1><ol><li>JDBC API 提供各种操作访问的借口</li><li>JDBC DriverManager : 管理不同的数据库驱动</li><li>各种数据库驱动，相应的数据库厂商提供的，直接操作数据库</li></ol><h2 id="JDBC-主要功能"><a href="#JDBC-主要功能" class="headerlink" title="JDBC 主要功能"></a>JDBC 主要功能</h2><p>三件事。具体通过一下接口，类实现<br>DriverManager 管理jdbc 驱动<br>connection 连接<br>statement 增删改查<br>callableStatement 调用数据库中的存储过程和存储函数<br>result 返回结果集</p><h2 id="jdbc-访问数据库的具体步骤"><a href="#jdbc-访问数据库的具体步骤" class="headerlink" title="jdbc 访问数据库的具体步骤"></a>jdbc 访问数据库的具体步骤</h2><p>a. 导入驱动，加载具体驱动类<br>b. 与数据库建立链接<br>c. 发送sql 执行<br>d. 处理结果集</p><h2 id="数据库驱动"><a href="#数据库驱动" class="headerlink" title="数据库驱动"></a>数据库驱动</h2><table><thead><tr><th></th><th>驱动jar</th><th>具体的驱动类</th><th>链接字符串</th></tr></thead><tbody><tr><td>oracle</td><td>ojdbc-x.jar</td><td>oracle.jdbc.oracleDriver</td><td>jdbc:oracle:thin:@localhost:1521:ORCL</td></tr><tr><td>mysql</td><td>mysql-connector-java-x.jar</td><td>com.mysql.jdbc.Driver</td><td>jdbc:mysql://localhost:3306/数据库实例名</td></tr><tr><td>SqlServer</td><td>sqljdbc-x.jar</td><td>com.microsoft.sqlserver.jdbc.sqlserverdriver</td><td>jdbc:microsoft:sqlserver:localhost:1433;datebasename=实例名</td></tr></tbody></table><figure class="highlight processing"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br></pre></td><td class="code"><pre><span class="line">实现java 访问 mysql</span><br><span class="line">不会了，来看看</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.sql.DriverManager;</span><br><span class="line"><span class="keyword">import</span> java.sql.ResultSet;</span><br><span class="line"><span class="keyword">import</span> java.sql.SQLException;</span><br><span class="line"><span class="keyword">import</span> java.sql.Connection;</span><br><span class="line"><span class="keyword">import</span> com.mysql.cj.jdbc.Driver;</span><br><span class="line"><span class="keyword">import</span> java.sql.Statement;</span><br><span class="line"><span class="keyword">import</span> java.sql.PreparedStatement;</span><br><span class="line"><span class="keyword">public</span> class jdbc &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> URL = <span class="string">"jdbc:mysql://localhost:3306/javaweb"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> USER = <span class="string">"zhong"</span>;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">String</span> PWD = <span class="string">"dyr520"</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span>  <span class="keyword">void</span> update() &#123;</span><br><span class="line"><span class="comment">// 导入驱动，具体的类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 与数据库建立链接</span></span><br><span class="line"><span class="comment">//DriverManager.getConnection(URL);</span></span><br><span class="line">Connection connection = <span class="keyword">null</span>;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">connection = DriverManager.getConnection(URL,USER,PWD);</span><br><span class="line">stmt = connection.createStatement();</span><br><span class="line"><span class="keyword">String</span> sql = <span class="string">"insert into firsttest(id) values(9)"</span>;</span><br><span class="line"><span class="comment">//String sql = "alter ";</span></span><br><span class="line"><span class="comment">//String sql = "delete";</span></span><br><span class="line"><span class="built_in">int</span> state = stmt.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span> (state &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"success"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"fail"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">stmt.close();</span><br><span class="line">connection.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> query() &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 导入驱动，具体的类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 与数据库建立链接</span></span><br><span class="line"><span class="comment">//DriverManager.getConnection(URL);</span></span><br><span class="line">Connection connection = <span class="keyword">null</span>;</span><br><span class="line">Statement stmt = <span class="keyword">null</span>;</span><br><span class="line">ResultSet rs = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">connection = DriverManager.getConnection(URL,USER,PWD);</span><br><span class="line">stmt = connection.createStatement();</span><br><span class="line"><span class="keyword">String</span> sql = <span class="string">"select * from firsttest;"</span>;</span><br><span class="line">rs = stmt.executeQuery(sql);</span><br><span class="line"><span class="keyword">while</span>(rs.next()) &#123;</span><br><span class="line"><span class="built_in">int</span> snoid = rs.getInt(<span class="string">"id"</span>);</span><br><span class="line">System.out.<span class="built_in">println</span>(snoid);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">rs.close();</span><br><span class="line">stmt.close();</span><br><span class="line">connection.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> update2() &#123;</span><br><span class="line"><span class="comment">// 导入驱动，具体的类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 与数据库建立链接</span></span><br><span class="line"><span class="comment">//DriverManager.getConnection(URL);</span></span><br><span class="line">Connection connection = <span class="keyword">null</span>;</span><br><span class="line">PreparedStatement pstmt = <span class="keyword">null</span>;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">Class.forName(<span class="string">"com.mysql.jdbc.Driver"</span>);</span><br><span class="line">connection = DriverManager.getConnection(URL,USER,PWD);</span><br><span class="line"><span class="keyword">String</span> sql = <span class="string">"insert into firsttest(id) values(?)"</span>;</span><br><span class="line">pstmt = connection.prepareStatement(sql);</span><br><span class="line">pstmt.setInt(<span class="number">1</span>, <span class="number">8</span>);</span><br><span class="line">pstmt.executeUpdate();</span><br><span class="line"><span class="comment">//String sql = "alter ";</span></span><br><span class="line"><span class="comment">//String sql = "delete";</span></span><br><span class="line"><span class="built_in">int</span> state = pstmt.executeUpdate(sql);</span><br><span class="line"><span class="keyword">if</span> (state &gt;= <span class="number">1</span>) &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"success"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">System.out.<span class="built_in">println</span>(<span class="string">"fail"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(SQLException e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">finally</span> &#123;</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">pstmt.close();</span><br><span class="line">connection.close();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="keyword">String</span> args[]) &#123;</span><br><span class="line"><span class="comment">//update();</span></span><br><span class="line">update2();</span><br><span class="line">query();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="推荐使用PreparedStatement"><a href="#推荐使用PreparedStatement" class="headerlink" title="推荐使用PreparedStatement"></a>推荐使用PreparedStatement</h3><h4 id="stmt"><a href="#stmt" class="headerlink" title="stmt"></a>stmt</h4><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">String sql = "<span class="keyword">insert</span> <span class="keyword">into</span> studen(<span class="keyword">id</span>,<span class="keyword">name</span>) <span class="keyword">values</span>(<span class="string">"+id+"</span>,<span class="string">'"+name+"'</span>)</span><br><span class="line">   stmt.executeUpdate(<span class="keyword">sql</span>);</span><br></pre></td></tr></table></figure><h4 id="OreparedStatement"><a href="#OreparedStatement" class="headerlink" title="OreparedStatement"></a>OreparedStatement</h4><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">String sql = <span class="string">"insert into student(id,name) values(?,?)"</span><span class="comment">;</span></span><br><span class="line">pstmt = connection.prepareStatement(sql)<span class="comment">;//预编译操作</span></span><br><span class="line">pstmt.setString(<span class="number">1</span>,name)<span class="comment">;</span></span><br><span class="line">pstmt.setInt(<span class="number">2</span>,age)<span class="comment">;</span></span><br><span class="line">pstmt.executeUpdate()<span class="comment">;</span></span><br></pre></td></tr></table></figure><h3 id="PreparedStatement-好处"><a href="#PreparedStatement-好处" class="headerlink" title="PreparedStatement 好处"></a>PreparedStatement 好处</h3><ol><li>方便</li><li>效率高</li><li>安全，可以防止sql注入</li></ol><h2 id="CallableStatement"><a href="#CallableStatement" class="headerlink" title="CallableStatement"></a>CallableStatement</h2><pre><code>调用 存储过程，存储函数connection.prepareCall(参数，存储过程或存储函数)</code></pre><h2 id="jdbc总结"><a href="#jdbc总结" class="headerlink" title="jdbc总结"></a>jdbc总结</h2><h2 id="加载具体的驱动类"><a href="#加载具体的驱动类" class="headerlink" title="加载具体的驱动类"></a>加载具体的驱动类</h2><pre><code>Class.forName(&quot;com.mysql.jdbc.Driver&quot;);</code></pre><h2 id="与数据库建立链接"><a href="#与数据库建立链接" class="headerlink" title="与数据库建立链接"></a>与数据库建立链接</h2><pre><code>connection = DriverManager.getConnection(URL,USER,PWD);</code></pre><h2 id="建立操作数据库对象"><a href="#建立操作数据库对象" class="headerlink" title="建立操作数据库对象"></a>建立操作数据库对象</h2><p>1.pstmt = connection.prepareStatement(sql);<br>2.stmt = connection.createStatement();</p><h2 id="若是查询，则处理结果集"><a href="#若是查询，则处理结果集" class="headerlink" title="若是查询，则处理结果集"></a>若是查询，则处理结果集</h2><h2 id="处理异常"><a href="#处理异常" class="headerlink" title="处理异常"></a>处理异常</h2><pre><code>jdbc中除了Class.ForName 抛出ClassNotFoundException，其他都是sqlException</code></pre><h2 id="处理CLOB-text-BLOG-类型-CLOB-为oracle类型，text为mysql类型"><a href="#处理CLOB-text-BLOG-类型-CLOB-为oracle类型，text为mysql类型" class="headerlink" title="处理CLOB[text]/BLOG 类型(CLOB 为oracle类型，text为mysql类型)"></a>处理CLOB[text]/BLOG 类型(CLOB 为oracle类型，text为mysql类型)</h2><p>处理稍大型数据<br>方法1.<br>    存储路径，然后通过IO处理<br>    例如，<br>方法2.<br>    直接存在数据库中<br>    CLOB:大文本数据 //setCharacterStream(2,new IputStreamReader(in));</p><p>#jsp 访问数据库</p><h2 id="导包"><a href="#导包" class="headerlink" title="导包"></a>导包</h2><pre><code>java项目复制到工程，然后右键build path ，点击web 讲jar复制到web-inf/lib 下 ok</code></pre><h1 id="javaBean"><a href="#javaBean" class="headerlink" title="javaBean"></a>javaBean</h1><h2 id="javaBean是一个java类的定义，满足以下两点可称为javaBean"><a href="#javaBean是一个java类的定义，满足以下两点可称为javaBean" class="headerlink" title="javaBean是一个java类的定义，满足以下两点可称为javaBean"></a>javaBean是一个java类的定义，满足以下两点可称为javaBean</h2><pre><code>a.public 修饰类，public 无参构造函数b.所有的属性都是private，并且提供set/get/isd</code></pre><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><pre><code>如果jsp出现错误 xxx type is not resolve 1.可能是jdk,tomcat 版本问题2.清空缓存，邮件项目，clean tomcat clean 或者project clean 进tomcat 目录，删除work3.将类写在包下</code></pre><h2 id="标准"><a href="#标准" class="headerlink" title="标准"></a>标准</h2><pre><code>如果类是访问数据库的类，则类名以dao结尾</code></pre><h1 id="MVC-设计模式"><a href="#MVC-设计模式" class="headerlink" title="MVC 设计模式"></a>MVC 设计模式</h1><h2 id="M-model-模型"><a href="#M-model-模型" class="headerlink" title="M (model)模型"></a>M (model)模型</h2><pre><code>例如 登录功能，增加学生功能，删除学生功能</code></pre><h2 id="V-view-视图"><a href="#V-view-视图" class="headerlink" title="V (view) 视图"></a>V (view) 视图</h2><pre><code>负责页面的显示，表单，表格html/css/jsp/jsp</code></pre><h2 id="C-controller-控制器"><a href="#C-controller-控制器" class="headerlink" title="C (controller) 控制器"></a>C (controller) 控制器</h2><pre><code>可以理解为分发器。接受各种请求，将请求分发到各个模型处理</code></pre><h2 id="Servlet-要想使用，必须配置"><a href="#Servlet-要想使用，必须配置" class="headerlink" title="Servlet 要想使用，必须配置"></a>Servlet 要想使用，必须配置</h2><pre><code>Serlvet2.5 web.xmlServlet3.0 @WebServlet</code></pre><h2 id="web的根目录-src，WebContent"><a href="#web的根目录-src，WebContent" class="headerlink" title="web的根目录 src，WebContent"></a>web的根目录 src，WebContent</h2><h2 id="servlet2-5-执行流程"><a href="#servlet2-5-执行流程" class="headerlink" title="servlet2.5  执行流程"></a>servlet2.5  执行流程</h2><pre><code>请求被url-pattern拦截，找到servlet-name对应servlet 中的servlet-class</code></pre><h2 id="servlet3-0-于2-5区别"><a href="#servlet3-0-于2-5区别" class="headerlink" title="servlet3.0 于2.5区别"></a>servlet3.0 于2.5区别</h2><pre><code>servlet3.0 不需要在web.xml 钟配置，但是需要在servlet中写@webservlet（/servlet-name）匹配流程，请求地址，于@webServlet钟的值进行匹配，如果匹配成功，则请求的就是该类servlet3.0 写参数</code></pre><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">@WebServlet</span>(value=<span class="string">"/WelcomeServlet"</span>,loadOnStartup=<span class="number">1</span>,initParams=&#123;<span class="variable">@WebInitParam</span>(name=<span class="string">"servlet30"</span> value=<span class="string">"servlet30"</span>)&#125;)</span><br></pre></td></tr></table></figure><h1 id="servlet-生命周期"><a href="#servlet-生命周期" class="headerlink" title="servlet 生命周期"></a>servlet 生命周期</h1><pre><code>5个过程1. 加载2. 初始化init()该方法在servlet加载并实例化之后执行，第一次访问执行，并且，只执行一次3. 服务 service（） -&gt; doGet doPost()4. 销毁destroy() servlet 被系统回收时执行5. 卸载其中加载，卸载由Servlet容器自动处理</code></pre><h1 id="Servlet-API-由两个包组成，http包，和其他协议包"><a href="#Servlet-API-由两个包组成，http包，和其他协议包" class="headerlink" title="Servlet API  由两个包组成，http包，和其他协议包"></a>Servlet API  由两个包组成，http包，和其他协议包</h1><h2 id="SErvletConfig-接口"><a href="#SErvletConfig-接口" class="headerlink" title="SErvletConfig: 接口"></a>SErvletConfig: 接口</h2><h2 id="ServletContext-getServletConetext（）"><a href="#ServletContext-getServletConetext（）" class="headerlink" title="ServletContext getServletConetext（）"></a>ServletContext getServletConetext（）</h2><pre><code>获取servlet上下文对象 application</code></pre><h2 id="String-getInitParameter（String-name）"><a href="#String-getInitParameter（String-name）" class="headerlink" title="String getInitParameter（String name）"></a>String getInitParameter（String name）</h2><pre><code>当前Servlet范围获取 获取参数名为name的只</code></pre><h2 id="ServletContext中常见方法application"><a href="#ServletContext中常见方法application" class="headerlink" title="ServletContext中常见方法application"></a>ServletContext中常见方法application</h2><p>1.getContextPath()<br>2.getRealPath()<br>3.setAttribute getAttribute()</p><h2 id="String-getInitParameter（String-name）-1"><a href="#String-getInitParameter（String-name）-1" class="headerlink" title="String getInitParameter（String name）"></a>String getInitParameter（String name）</h2><pre><code>当前web范围获取 获取参数名为name的只</code></pre><h1 id="三层架构"><a href="#三层架构" class="headerlink" title="三层架构"></a>三层架构</h1><pre><code>于mvc设计模式目标一直，都是为了解耦合，提高代码复用区别，两者对项目的理解角度不同</code></pre><h1 id="三层组成"><a href="#三层组成" class="headerlink" title="三层组成"></a>三层组成</h1><p>表示层 （USL，user showlayer 视图层）<br>    前台 js，html， css ，jqeury<br>    后台 servlet<br>业务逻辑 BLL Bussiness logic layer service层）<br>数据访问层 （DAL data access layer dao层）</p><h1 id="三层优化"><a href="#三层优化" class="headerlink" title="三层优化"></a>三层优化</h1><p>1.加入接口<br>    建议面向接口开发,先接口然后是实现类</p><pre><code>--service dao加入接口</code></pre><table><thead><tr><th></th><th>起名</th></tr></thead><tbody><tr><td>接口interface</td><td>I实体类Service/IStudentDao</td></tr><tr><td>实体类implements</td><td>实体类 ServiceImpl StudentDaoImpl</td></tr></tbody></table><p>2.DBUtil</p><h1 id="SQL-分页"><a href="#SQL-分页" class="headerlink" title="SQL 分页"></a>SQL 分页</h1><h2 id="分页"><a href="#分页" class="headerlink" title="分页"></a>分页</h2><pre><code>要实现分页，必须知道，某一页的数据从哪里开始，到哪里结束</code></pre><h1 id="mysql-实现分页的sql"><a href="#mysql-实现分页的sql" class="headerlink" title="mysql 实现分页的sql"></a>mysql 实现分页的sql</h1><p>limit 开始，多少条 （mysql 从0 开始计数，oracle，SQlserver是1）<br>select * from student limit 0,10 [0 - 9 条数据]</p><h2 id="分页的实现"><a href="#分页的实现" class="headerlink" title="分页的实现"></a>分页的实现</h2><h3 id="5-个变量（属性）"><a href="#5-个变量（属性）" class="headerlink" title="5 个变量（属性）"></a>5 个变量（属性）</h3><p>1.数据的总数 查数据库 select count（×） 。。。<br>2.页面大小 （用户自定义）<br>3.总页数    （程序计算）<br>4.当前页（页码） （用户自定义<br>5.当前也的对象集合（实体集合） ，每页显示所有的数据</p><h1 id="上传文件"><a href="#上传文件" class="headerlink" title="上传文件"></a>上传文件</h1><h2 id="a-引入2个jar"><a href="#a-引入2个jar" class="headerlink" title="a. 引入2个jar"></a>a. 引入2个jar</h2><pre><code>apache： commons-fileupload.jar commons-fileupload.jar 依赖 commons-io.jar</code></pre><h2 id="b-代码"><a href="#b-代码" class="headerlink" title="b.代码"></a>b.代码</h2><h3 id="前台jsp"><a href="#前台jsp" class="headerlink" title="前台jsp"></a>前台jsp</h3><pre><code>&lt;input type=&quot;file&quot; name = &quot;picture&quot; /&gt;表单提交方式为post在表单中必须添加一个属性 enctype= “multipart/form-data”</code></pre><h3 id="servlet"><a href="#servlet" class="headerlink" title="servlet"></a>servlet</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ctgu.szmt.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.<span class="keyword">File</span>;</span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.util.List;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItem;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.FileItemFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.disk.DiskFileItemFactory;</span><br><span class="line"><span class="keyword">import</span> org.apache.commons.fileupload.servlet.ServletFileUpload;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class updateFileServlet</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line">@WebServlet(<span class="string">"/updateFileServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> updateFileServlet <span class="keyword">extends</span> HttpServlet &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">long</span> serialVersionUID = <span class="number">1</span>L;</span><br><span class="line">       </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> doGet(HttpServletRequest request, HttpServletResponse response) <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line">System.out.<span class="keyword">println</span>(<span class="string">"upload"</span>);</span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">response.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line">response.setContentType(<span class="string">"text/html; charset=UTF-8"</span>);</span><br><span class="line"><span class="keyword">boolean</span> IsMultipart = ServletFileUpload.isMultipartContent(request);</span><br><span class="line"> <span class="keyword">if</span>(IsMultipart) &#123; <span class="comment">// 判断前台form是否有mutipart字段</span></span><br><span class="line"><span class="comment">// 若有，则进行上传处理</span></span><br><span class="line">FileItemFactory factory = <span class="keyword">new</span> DiskFileItemFactory();</span><br><span class="line"><span class="comment">//通过paserRequest 解析form 钟的请求字段，并保存在List中</span></span><br><span class="line">ServletFileUpload upload = <span class="keyword">new</span> ServletFileUpload(factory);</span><br><span class="line">List&lt;FileItem&gt; items = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line"><span class="keyword">if</span>(upload != <span class="keyword">null</span>) &#123;</span><br><span class="line">items = upload.parseRequest(request);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">System.out.<span class="keyword">println</span>(<span class="string">"null"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">catch</span>(Exception e) &#123;</span><br><span class="line">System.out.<span class="keyword">println</span>(<span class="string">"this is a exception"</span>);</span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (FileItem it : items) &#123;</span><br><span class="line"><span class="comment">//判断是普通表单字段，还是文件字段</span></span><br><span class="line"><span class="keyword">if</span>(it.isFormField()) &#123;</span><br><span class="line"><span class="keyword">if</span>( it.getFieldName().equals(<span class="string">"sno"</span>)) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (it.getFieldName().equals(<span class="string">"sname"</span>)) &#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line">System.out.<span class="keyword">println</span>(<span class="string">"other"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// 文件上传</span></span><br><span class="line"><span class="comment">// 文件名 getName ,(getFieldName 普通表单字段的Name) </span></span><br><span class="line">String fileName = it.getName();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取上传的路径 </span></span><br><span class="line">String path = request.getSession().getServletContext().getRealPath(<span class="string">"upload"</span>);</span><br><span class="line">System.out.<span class="keyword">println</span>(path);</span><br><span class="line"><span class="keyword">File</span> <span class="keyword">file</span> = <span class="keyword">new</span> <span class="keyword">File</span>(path,fileName);</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">it.<span class="keyword">write</span>(<span class="keyword">file</span>);</span><br><span class="line">System.out.<span class="keyword">println</span>(<span class="string">"success"</span>);</span><br><span class="line">&#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">System.out.<span class="keyword">println</span>(<span class="string">"fail"</span>);</span><br><span class="line"><span class="comment">// TODO Auto-generated catch block</span></span><br><span class="line">e.printStackTrace();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> doPost(HttpServletRequest request, HttpServletResponse response) <span class="keyword">throws</span> ServletException, IOException &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="限制上传"><a href="#限制上传" class="headerlink" title="限制上传"></a>限制上传</h2><h3 id="控制文件上传类型"><a href="#控制文件上传类型" class="headerlink" title="控制文件上传类型"></a>控制文件上传类型</h3><h4 id="windows-判断文件后缀"><a href="#windows-判断文件后缀" class="headerlink" title="windows 判断文件后缀"></a>windows 判断文件后缀</h4><h3 id="控制文件上传文件大小"><a href="#控制文件上传文件大小" class="headerlink" title="控制文件上传文件大小"></a>控制文件上传文件大小</h3><pre><code>upload.setSizeMax( 字节数 )</code></pre><h3 id="设置上传文件上会设置用到的临时文件的大小"><a href="#设置上传文件上会设置用到的临时文件的大小" class="headerlink" title="设置上传文件上会设置用到的临时文件的大小"></a>设置上传文件上会设置用到的临时文件的大小</h3><pre><code>DiskFileItemFactory setSizeThreshold(10240); //设置临时文件大小DiskFileItemFactory.setRepository(File);//设置临时目录</code></pre><h1 id="下载-不需要依赖jar包"><a href="#下载-不需要依赖jar包" class="headerlink" title="下载 不需要依赖jar包"></a>下载 不需要依赖jar包</h1><h2 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h2><pre><code>1. 前台发送一个请求，servlet处理2. servlet 通过文件的地址，将文件转为输入流，读入到servlet中，3. 通过输出流将 刚才已经为输入流的数据输出到用户</code></pre><h2 id="添加响应消息头"><a href="#添加响应消息头" class="headerlink" title="添加响应消息头"></a>添加响应消息头</h2><pre><code>response.addHeader(&quot;content-Type&quot;,&quot;Image/gif&quot;);response.addHeader(&quot;content-Disposition&quot;,&quot;attachement:filename=&quot;+fileName);</code></pre><table><thead><tr><th>文件类型</th><th>ContentType</th></tr></thead><tbody><tr><td>二进制文件（任何文件类型）</td><td>application/octet-stream</td></tr><tr><td>word</td><td>application/msword</td></tr><tr><td>excel</td><td>application/vnd.ms+excel</td></tr><tr><td>PPT</td><td>application/vnd.ms+powerpoint</td></tr><tr><td>图片</td><td>Image/gif,image/bmp,image/jpeg</td></tr><tr><td>文本文件</td><td>text/plain</td></tr><tr><td>html网页</td><td>text/html</td></tr></tbody></table><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> ctgu.szmt.servlet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletException;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.ServletOutputStream;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.annotation.WebServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServlet;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletRequest;</span><br><span class="line"><span class="keyword">import</span> javax.servlet.http.HttpServletResponse;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Servlet implementation class downloadServlet</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">@WebServlet</span>(<span class="string">"/downloadServlet"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> downloadServlet extends HttpServlet &#123;</span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="built_in">long</span> serialVersionUID = <span class="number">1L</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @see HttpServlet#HttpServlet()</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> downloadServlet() &#123;</span><br><span class="line"><span class="keyword">super</span>();</span><br><span class="line"><span class="comment">// TODO Auto-generated constructor stub</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse</span></span><br><span class="line"><span class="comment"> *      response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> doGet(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line">throws ServletException, IOException &#123;</span><br><span class="line">request.setCharacterEncoding(<span class="string">"utf-8"</span>);</span><br><span class="line"><span class="comment">// 设置响应头</span></span><br><span class="line"></span><br><span class="line">String fileName = request.getParameter(<span class="string">"filename"</span>);</span><br><span class="line">System.<span class="keyword">out</span>.println(fileName);</span><br><span class="line">response.addHeader(<span class="string">"content-Type"</span>, <span class="string">"Image/png"</span>);</span><br><span class="line">response.addHeader(<span class="string">"content-Disposition"</span>,<span class="string">"attachment;filename="</span>+fileName);</span><br><span class="line">String path = <span class="string">"/source/"</span> + fileName;</span><br><span class="line">System.<span class="keyword">out</span>.println(path);</span><br><span class="line">InputStream <span class="keyword">in</span> = getServletContext().getResourceAsStream(path);</span><br><span class="line">ServletOutputStream <span class="keyword">out</span>  = response.getOutputStream();</span><br><span class="line"><span class="keyword">byte</span>[] bs = <span class="keyword">new</span> <span class="keyword">byte</span>[<span class="number">1000</span>];</span><br><span class="line"><span class="keyword">int</span> len = -<span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>( (len = <span class="keyword">in</span>.read(bs))!= -<span class="number">1</span>) &#123;</span><br><span class="line"><span class="keyword">out</span>.write(bs,<span class="number">0</span>,len);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">out</span>.close();</span><br><span class="line"><span class="keyword">in</span>.close();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse</span></span><br><span class="line"><span class="comment"> *      response)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">protected</span> <span class="keyword">void</span> doPost(HttpServletRequest request, HttpServletResponse response)</span><br><span class="line">throws ServletException, IOException &#123;</span><br><span class="line"><span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">doGet(request, response);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="下载乱码"><a href="#下载乱码" class="headerlink" title="下载乱码"></a>下载乱码</h2><ol><li>edge,ie<br>  URLEncoding(filename,”UTF-8”)</li><li><p>firefox<br> 给文件名加前缀后缀<br> 前缀 =？UTF-8？B？<br> Base64.encode<br> String构造方法<br> 后缀 ？=</p><pre><code>response.addHeader(&quot;content-Disposition&quot;,&quot;attachment;filename==?UTF-8?B?&quot;+new String (Base64.encode(fileName.getBytes()) +&quot;?=&quot;));</code></pre></li></ol><h1 id="EL-expression-language"><a href="#EL-expression-language" class="headerlink" title="EL expression language"></a>EL expression language</h1><pre><code>可以替代jsp页面中的java代码</code></pre><h2 id="servlet增加数据-jsp显示"><a href="#servlet增加数据-jsp显示" class="headerlink" title="servlet增加数据 jsp显示"></a>servlet增加数据 jsp显示</h2><pre><code>传统在jsp中用java代码显示数据的弊端 类型转换、需要处理null 代码杂 -&gt;EL</code></pre><h2 id="EL-实例"><a href="#EL-实例" class="headerlink" title="EL 实例"></a>EL 实例</h2><p>#${requestScope.student.address.schoolAddress}<br>${域对象.域对象钟的属性.属性.属性.……。级联属性}</p><h2 id="EL操作符"><a href="#EL操作符" class="headerlink" title="EL操作符"></a>EL操作符</h2><table><thead><tr><th>比较</th><th>类型</th><th>优点</th></tr></thead><tbody><tr><td></td><td>点操作符　.</td><td>使用方便</td><td>　</td></tr><tr><td></td><td>中括号操作符[]</td><td>功能强大，可以包含特殊字符，可以获取变量值(即点操作符只能为常亮，但是[]可以为变量)</td><td>‘</td></tr></tbody></table><h1 id="EL-表达式的隐式对象"><a href="#EL-表达式的隐式对象" class="headerlink" title="EL 表达式的隐式对象"></a>EL 表达式的隐式对象</h1><pre><code>（不要new 就能用的自带对象）a.作用域访问对象el域对象 pageScope requestScope sessionScope applicationScope    如果不指定域对象，则会根据从小到大的顺序，依次取值pageScope，requestScope，sessionScope，applicationScope b.参数访问对象 获取表单，超链接。中的参数${param}     ${paramValues}c.jsp 隐是对象 pageContext在jsp中可以通过pageContext 获取其他的jsp隐藏对象${pageContext.getSession()} -&gt; pageContext.session</code></pre><h1 id="JSTL-比EL更加强大"><a href="#JSTL-比EL更加强大" class="headerlink" title="JSTL 比EL更加强大"></a>JSTL 比EL更加强大</h1><pre><code>两个jar包：jstl.jar     stardard.jar引入tablib&lt;%@ taglib uri=&quot;http://java.sun.com/jsp/jstl/core&quot; prefix=&quot;c&quot; %&gt;其中prefix 为前缀核心标签哭 通用标签库，条件标签库 迭代标签库</code></pre><h2 id="通用标签库3"><a href="#通用标签库3" class="headerlink" title="通用标签库3"></a>通用标签库3</h2><p>###<set> 赋值，其中c为前缀<br>    &lt;c:set var = “变量名” value=“变量值 ” / &gt;</set></p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$&#123;requestScope</span>.hello &#125;&lt;<span class="keyword">br</span>/&gt;</span><br><span class="line">&lt;c:<span class="keyword">set</span> <span class="keyword">var</span> =<span class="string">"hello"</span>  value = <span class="string">"钟俊威"</span> scope=<span class="string">"request"</span>/&gt;</span><br><span class="line">&lt;%--等价于request.setAttribute（”name“, <span class="string">"zhangsan "</span>） --%&gt;</span><br><span class="line"><span class="variable">$&#123;requestScope</span>.hello &#125;&lt;<span class="keyword">br</span>/&gt;</span><br><span class="line"><span class="variable">$&#123;requestScope</span>[<span class="string">"hello"</span>] &#125;&lt;<span class="keyword">br</span>/&gt;</span><br><span class="line"><span class="variable">$&#123;requestScope</span>.map.cn&#125; &lt;<span class="keyword">br</span>/&gt;</span><br><span class="line"><span class="variable">$&#123;requestScope</span>[<span class="string">"map"</span>][<span class="string">"cn"</span>]&#125;&lt;<span class="keyword">br</span>/&gt;</span><br><span class="line">&lt;c:<span class="keyword">set</span> target=<span class="string">"$&#123;requestScope.map&#125;"</span> property=<span class="string">"cn"</span> value=<span class="string">"中国"</span> /&gt;</span><br><span class="line"><span class="variable">$&#123;requestScope</span>[<span class="string">"map"</span>][<span class="string">"cn"</span>]&#125;&lt;<span class="keyword">br</span>/&gt;</span><br></pre></td></tr></table></figure><h3 id="c-out"><a href="#c-out" class="headerlink" title="c:out"></a>c:out</h3><pre><code>传统EL${requestScope.student}&lt;br/&gt;c:out 方式 &lt;c:out value =&quot;${requestScope.student}&quot;/&gt;c:out 显示不存在的数据 &lt;c:out value =&quot;${requestScope.student}&quot; default=“啥啥啥”/&gt;如果不存在，可以显示default </code></pre><h2 id="条件标签"><a href="#条件标签" class="headerlink" title="条件标签"></a>条件标签</h2><h3 id="c-if-注意引号没有空格"><a href="#c-if-注意引号没有空格" class="headerlink" title="c:if  (注意引号没有空格)"></a>c:if  (注意引号没有空格)</h3><pre><code>&lt;c:if test=&quot;${10&gt;2}&quot; var=&quot;result&quot; scope=&quot;request&quot;&gt;&lt;/c:if&gt;</code></pre><h3 id="c-choose"><a href="#c-choose" class="headerlink" title="c:choose"></a>c:choose</h3><pre><code>&lt;c:choose&gt;    &lt;c:when test=&quot;${}&quot;&gt;&lt;/c:when&gt;    &lt;c:when test=&quot;${}&quot;&gt;&lt;/c:when&gt;    &lt;c:when test=&quot;${}&quot;&gt;&lt;/c:when&gt;       &lt;c:otherwise&gt;&lt;/c:otherwise&gt;&lt;/c:choose&gt;</code></pre><h2 id="迭代标签"><a href="#迭代标签" class="headerlink" title="迭代标签"></a>迭代标签</h2><pre><code>&lt;c:forEach begin=&quot;&quot; end =&quot;&quot; step=&quot;1&quot;&gt;test..&lt;br&gt;&lt;/c:forEach&gt;&lt;c:forEach var=&quot;name&quot; items=&quot;${requets.student }&quot;&gt; &lt;/c:forEach&gt;</code></pre><h1 id="过滤器，拦截器"><a href="#过滤器，拦截器" class="headerlink" title="过滤器，拦截器"></a>过滤器，拦截器</h1><ol><li>过滤器 拦截请求，响应 </li><li>需要过滤器放行 </li></ol><h2 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h2><pre><code>1.创建一个class 实现Filter2.在web.xml 添加类似 &lt;servlet&gt;的</code></pre><h1 id="监听器"><a href="#监听器" class="headerlink" title="监听器"></a>监听器</h1><h2 id="监听对象"><a href="#监听对象" class="headerlink" title="监听对象"></a>监听对象</h2><pre><code>request session application</code></pre><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>request</td><td>ServletRequestListner</td></tr><tr><td>session</td><td>HttpSessionListener</td></tr><tr><td>application</td><td>ServletContextListner</td></tr></tbody></table><h2 id="监听属性变更"><a href="#监听属性变更" class="headerlink" title="监听属性变更"></a>监听属性变更</h2><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td>request</td><td>ServletRequestAttitudeListner</td></tr><tr><td>session</td><td>HttpSessionAttitudeListener</td></tr><tr><td>application</td><td>ServletContextAttitudeListner</td></tr></tbody></table><h1 id="session-的钝化和活化"><a href="#session-的钝化和活化" class="headerlink" title="session 的钝化和活化"></a>session 的钝化和活化</h1><h2 id="内存到硬盘为钝化"><a href="#内存到硬盘为钝化" class="headerlink" title="内存到硬盘为钝化"></a>内存到硬盘为钝化</h2><h2 id="硬盘到内容为活化"><a href="#硬盘到内容为活化" class="headerlink" title="硬盘到内容为活化"></a>硬盘到内容为活化</h2><h2 id="session-对象的四种状态"><a href="#session-对象的四种状态" class="headerlink" title="session 对象的四种状态"></a>session 对象的四种状态</h2><pre><code>a.session。setAttribute(&quot;a&quot;,xxx) 将对象a绑定到session中b，sessionremoveAttribute(&quot;a&quot;) 将对象解绑以上两种可以用HttpSessionBindListenerc。钝化d. 活化以上两种可以用session对象的钝化活化 HttpSessionActivationListener</code></pre><h1 id="Ajax-异步js-和-xml"><a href="#Ajax-异步js-和-xml" class="headerlink" title="Ajax : 异步js  和 xml"></a>Ajax : 异步js  和 xml</h1><h2 id="异步刷新-网页中局部刷新，比如点赞。。不用全局刷新"><a href="#异步刷新-网页中局部刷新，比如点赞。。不用全局刷新" class="headerlink" title="异步刷新 网页中局部刷新，比如点赞。。不用全局刷新"></a>异步刷新 网页中局部刷新，比如点赞。。不用全局刷新</h2><h2 id="实现-1"><a href="#实现-1" class="headerlink" title="实现"></a>实现</h2><h3 id="js：-依赖XMLHttpRequest"><a href="#js：-依赖XMLHttpRequest" class="headerlink" title="js： 依赖XMLHttpRequest"></a>js： 依赖XMLHttpRequest</h3><p>XMLHttpRequest 对象的方法<br>open（方法名(提交方式 get | post)，服务器地址，true） true 代表是否是异步刷新 与服务器建立链接<br>send（）；<br>    get： send（null）<br>    post send（参数值）<br>setRequestHeader(header ,value);<br>    get 不需要设置<br>    post 设置<br>        a。如果请求元素中包含了文件上传<br>            setRequestHeader(“content-Type”,”multipart/form-data”)<br>        b.<br>        xmlrequest.setRequestHeader(“content-Type”,”application/x-www-form-urlencoded”);<br>XMLHttpRequest 对象的属性<br>readystate 请求状态 只有状态为4 代表请求完毕<br>status 响应状态 只有200 代表响应正常<br>onreadystatechange 回调函数<br>responseText 响应格式为String<br>responseXML 响应格式为XML</p><h1 id="PrintWrite-out-response-getWrite"><a href="#PrintWrite-out-response-getWrite" class="headerlink" title="PrintWrite  out  = response.getWrite();"></a>PrintWrite  out  = response.getWrite();</h1><figure class="highlight erb"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">%</span></span></span><span class="ruby">@ page language=<span class="string">"java"</span> contentType=<span class="string">"text/html; charset=UTF-8"</span></span></span><br><span class="line"><span class="ruby">    pageEncoding=<span class="string">"UTF-8"</span></span><span class="xml">%&gt;</span></span><br><span class="line"><span class="xml"><span class="meta">&lt;!DOCTYPE html&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span> <span class="attr">src</span>=<span class="string">"js/jquery-3.3.1.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">    function register()&#123;</span></span><br><span class="line"><span class="xml"></span></span><br><span class="line"><span class="xml">        var $mobile = $("#phone").val();</span></span><br><span class="line"><span class="xml">        $.ajax(</span></span><br><span class="line"><span class="xml">            &#123;</span></span><br><span class="line"><span class="xml">                url:"moble",</span></span><br><span class="line"><span class="xml">                请求方式:"post",</span></span><br><span class="line"><span class="xml">                data:"moble="+$mobile,</span></span><br><span class="line"><span class="xml">                success:function(result,testStatus)&#123;</span></span><br><span class="line"><span class="xml">                    if(result == "true")&#123;</span></span><br><span class="line"><span class="xml">                        alert("已存在")</span></span><br><span class="line"><span class="xml">                    &#125;</span></span><br><span class="line"><span class="xml">                    else&#123;</span></span><br><span class="line"><span class="xml">                        alert("成功")</span></span><br><span class="line"><span class="xml">                    &#125;</span></span><br><span class="line"><span class="xml">                &#125;,</span></span><br><span class="line"><span class="xml">                error:function(xhmr,errorMessage,e)&#123;</span></span><br><span class="line"><span class="xml">                    alert("失败");</span></span><br><span class="line"><span class="xml">                &#125;</span></span><br><span class="line"><span class="xml">            &#125;</span></span><br><span class="line"><span class="xml">        )</span></span><br><span class="line"><span class="xml">    &#125;</span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">title</span>&gt;</span>Insert title here<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml">    电话<span class="tag">&lt;<span class="name">input</span> <span class="attr">id</span> = <span class="string">"phone"</span> <span class="attr">type</span>=<span class="string">"text"</span> /&gt;</span></span></span><br><span class="line"><span class="xml">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">value</span>=<span class="string">"hell"</span> <span class="attr">onclick</span>=<span class="string">"register()"</span>/&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span></span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$.get(</span><br><span class="line">服务器地址</span><br><span class="line">请求数据</span><br><span class="line"><span class="function"><span class="keyword">function</span>（<span class="title">result</span>）</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">)</span><br><span class="line">$.post(</span><br><span class="line">服务器地址</span><br><span class="line">请求数据</span><br><span class="line"><span class="function"><span class="keyword">function</span>（<span class="title">result</span>）</span>&#123;</span><br><span class="line"></span><br><span class="line">&#125;,</span><br><span class="line">预期返回值(<span class="string">"xml"</span> <span class="string">"json"</span> <span class="string">"text"</span>)</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">$(选择器).load(</span><br><span class="line">服务器地址</span><br><span class="line">请求数据</span><br><span class="line">) <span class="comment">// 将服务器的返回值直接加载到$(xxx)所选择的元素中</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;html&quot;&gt;&lt;a href=&quot;#html&quot; class=&quot;headerlink&quot; title=&quot;html&quot;&gt;&lt;/a&gt;html&lt;/h1&gt;&lt;h2 id=&quot;表单&quot;&gt;&lt;a href=&quot;#表单&quot; class=&quot;headerlink&quot; title=&quot;表单&quot;&gt;&lt;/a&gt;&lt;form
      
    
    </summary>
    
      <category term="javaweb" scheme="http://yoursite.com/categories/javaweb/"/>
    
    
      <category term="javaweb" scheme="http://yoursite.com/tags/javaweb/"/>
    
  </entry>
  
  <entry>
    <title>realcodespider</title>
    <link href="http://yoursite.com/2018/08/25/realcodespider/"/>
    <id>http://yoursite.com/2018/08/25/realcodespider/</id>
    <published>2018-08-26T02:55:36.000Z</published>
    <updated>2018-10-31T11:01:31.035Z</updated>
    
    <content type="html"><![CDATA[<h1 id="尝试爬去qmx网站钟俊威的总结"><a href="#尝试爬去qmx网站钟俊威的总结" class="headerlink" title="尝试爬去qmx网站钟俊威的总结"></a>尝试爬去qmx网站钟俊威的总结</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Spider</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">__init__</span><span class="params">(self)</span>:</span></span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">deals</span> <span class="params">(self, html)</span>:</span></span><br><span class="line"></span><br><span class="line">        soup = BeautifulSoup(html,<span class="string">'html.parser'</span>);</span><br><span class="line">        <span class="comment">#print (soup.a.select('.aw-user-name'))</span></span><br><span class="line">        <span class="keyword">print</span> (soup.prettify());</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> soup.find_all(<span class="string">'div'</span>,class_ = <span class="string">"mod-head"</span>):</span><br><span class="line">            <span class="keyword">try</span> :</span><br><span class="line">                <span class="keyword">if</span> i.div.p.a.get_text() == <span class="string">"钟俊威"</span>:</span><br><span class="line">                    print(i.div.p.a.get_text() + i.find_next_sibling().div.get_text())</span><br><span class="line">            <span class="keyword">except</span>:</span><br><span class="line">                <span class="keyword">pass</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">load</span><span class="params">(self, url)</span>:</span></span><br><span class="line">        print(url);</span><br><span class="line">        headers = &#123;</span><br><span class="line">            <span class="string">"Connection"</span>:<span class="string">"keep-alive"</span>,</span><br><span class="line">            <span class="string">"User-Agent"</span>:<span class="string">"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:61.0) Gecko/20100101 Firefox/61.0"</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#request = requests.Request(url=url,headers=headers);</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            response = requests.get(url,headers = headers)</span><br><span class="line">            html = response.text;</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            print(<span class="string">"No"</span>);</span><br><span class="line">        self.deals(html);</span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">main</span><span class="params">(self)</span>:</span></span><br><span class="line">        url = <span class="string">"https://www.ctguqmx.com/question/"</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">300</span> , <span class="number">400</span>):</span><br><span class="line">            self.load(<span class="string">"https://www.ctguqmx.com"</span>)</span><br><span class="line">             self.load(url + str(i));</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">'__main__'</span>:</span><br><span class="line">    spider = Spider();</span><br><span class="line">    spider.main();</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;尝试爬去qmx网站钟俊威的总结&quot;&gt;&lt;a href=&quot;#尝试爬去qmx网站钟俊威的总结&quot; class=&quot;headerlink&quot; title=&quot;尝试爬去qmx网站钟俊威的总结&quot;&gt;&lt;/a&gt;尝试爬去qmx网站钟俊威的总结&lt;/h1&gt;&lt;figure class=&quot;highli
      
    
    </summary>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>spider</title>
    <link href="http://yoursite.com/2018/08/25/spider/"/>
    <id>http://yoursite.com/2018/08/25/spider/</id>
    <published>2018-08-26T01:58:13.000Z</published>
    <updated>2018-10-31T11:01:31.035Z</updated>
    
    <content type="html"><![CDATA[<h1 id="BeautifulSoup"><a href="#BeautifulSoup" class="headerlink" title="BeautifulSoup"></a>BeautifulSoup</h1><h2 id="BeautifilSoup-简介"><a href="#BeautifilSoup-简介" class="headerlink" title="BeautifilSoup 简介"></a>BeautifilSoup 简介</h2><pre><code>Beautiful Soup提供一些简单的、python式的函数用来处理导航、搜索、修改分析树等功能。它是一个工具箱，通过解析文档为用户提供需要抓取的数据因为简单，所以不需要多少代码就可以写出一个完整的应用程序。Beautiful Soup自动将输入文档转换为Unicode编码，输出文档转换为utf-8编码。你不需要考虑编码方式，除非文档没有指定一个编码方式，这时，Beautiful Soup就不能自动识别编码方式了。然后，你仅仅需要说明一下原始编码方式就可以了。    Beautiful Soup已成为和lxml、html6lib一样出色的python解释器，为用户灵活地提供不同的解析策略或强劲的速度。</code></pre><h2 id="创建beautifulsoup"><a href="#创建beautifulsoup" class="headerlink" title="创建beautifulsoup"></a>创建beautifulsoup</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">soup</span> = BeautifulSoup(html)</span><br></pre></td></tr></table></figure><h2 id="格式化输入beautifulSoup"><a href="#格式化输入beautifulSoup" class="headerlink" title="格式化输入beautifulSoup"></a>格式化输入beautifulSoup</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">print</span> soup.prettify()</span><br></pre></td></tr></table></figure><h2 id="四种对象"><a href="#四种对象" class="headerlink" title="四种对象"></a>四种对象</h2><p>Beautiful Soup将复杂HTML文档转换成一个复杂的树形结构,每个节点都是Python对象,所有对象可以归纳为4种:</p><pre><code>TagNavigableStringBeautifulSoupComment</code></pre><h3 id="Tag"><a href="#Tag" class="headerlink" title="Tag"></a>Tag</h3><pre><code>Tag 是什么？通俗点讲就是 HTML 中的一个个标签HTML 标签加上里面包括的内容就是 Tag，下面我们来感受一下怎样用 Beautiful Soup 我们可以利用 soup加标签名轻松地获取这些标签的内容需要注意的是它查找的是在所有内容中的第一个符合要求的标签，如果要查询所有的标签，我们在后面进行介绍。对于 Tag，它有两个重要的属性，是 name 和 attrs，下面我们分别来感受一下</code></pre><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">name</span><br><span class="line"><span class="builtin-name">print</span> soup.name</span><br><span class="line"><span class="builtin-name">print</span> soup.head.name</span><br><span class="line"><span class="comment">#[document]</span></span><br><span class="line"><span class="comment">#head</span></span><br></pre></td></tr></table></figure><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">全部</span><br><span class="line">print soup<span class="selector-class">.p</span><span class="selector-class">.attrs</span></span><br><span class="line">#&#123;<span class="string">'class'</span>: [<span class="string">'title'</span>], <span class="string">'name'</span>: <span class="string">'dromouse'</span>&#125;</span><br><span class="line">单个</span><br><span class="line">print soup<span class="selector-class">.p</span>[<span class="string">'class'</span>]</span><br><span class="line">#[<span class="string">'title'</span>]</span><br><span class="line">print soup<span class="selector-class">.p</span><span class="selector-class">.get</span>(<span class="string">'class'</span>)</span><br><span class="line">#[<span class="string">'title'</span>]</span><br></pre></td></tr></table></figure><pre><code>可以对属性和内容进行更改和删除</code></pre><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">soup.p['class']="newClass"</span><br><span class="line">print soup.p</span><br><span class="line">#<span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">"newClass"</span> <span class="attr">name</span>=<span class="string">"dromouse"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">del soup.p['class']</span><br><span class="line">print soup.p</span><br><span class="line">#<span class="tag">&lt;<span class="name">p</span> <span class="attr">name</span>=<span class="string">"dromouse"</span>&gt;</span><span class="tag">&lt;<span class="name">b</span>&gt;</span>The Dormouse's story<span class="tag">&lt;/<span class="name">b</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="NavigableString"><a href="#NavigableString" class="headerlink" title="NavigableString"></a>NavigableString</h2><p>既然我们已经得到了标签的内容，那么问题来了，我们要想获取标签内部的文字怎么办呢？很简单，用 .string 即可，例如<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print soup<span class="selector-class">.p</span><span class="selector-class">.string</span></span><br><span class="line"><span class="selector-id">#The</span> Dormouse<span class="string">'s story</span></span><br></pre></td></tr></table></figure></p><h2 id="遍历文档树"><a href="#遍历文档树" class="headerlink" title="遍历文档树"></a>遍历文档树</h2><h3 id="直接子节点"><a href="#直接子节点" class="headerlink" title="直接子节点"></a>直接子节点</h3><pre><code>要点：.contents  .children  属性</code></pre><h4 id="contents"><a href="#contents" class="headerlink" title=".contents"></a>.contents</h4><pre><code>tag 的 .content 属性可以将tag的子节点以列表的方式输出</code></pre><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print soup.head.contents </span><br><span class="line"> #<span class="meta">[&lt;title&gt;The Dormouse's story&lt;/title&gt;]</span></span><br></pre></td></tr></table></figure><pre><code>输出方式为列表，我们可以用列表索引来获取它的某一个元素</code></pre><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">print</span> soup.head.contents[0]</span><br><span class="line"><span class="comment">#&lt;title&gt;The Dormouse's story&lt;/title&gt;</span></span><br></pre></td></tr></table></figure><h4 id="children"><a href="#children" class="headerlink" title=".children"></a>.children</h4><pre><code>它返回的不是一个 list，不过我们可以通过遍历获取所有子节点。我们打印输出 .children 看一下，可以发现它是一个 list 生成器对象</code></pre><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">print soup<span class="selector-class">.head</span><span class="selector-class">.children</span></span><br><span class="line">#&lt;listiterator <span class="selector-tag">object</span> at <span class="number">0</span>x7f71457f5710&gt;</span><br></pre></td></tr></table></figure><pre><code>我们怎样获得里面的内容呢？很简单，遍历一下就好了，代码及结果如下</code></pre><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> child <span class="keyword">in</span>  soup<span class="selector-class">.body</span><span class="selector-class">.children</span>:</span><br><span class="line">    print child</span><br></pre></td></tr></table></figure><h3 id="所有子孙节点"><a href="#所有子孙节点" class="headerlink" title="所有子孙节点"></a>所有子孙节点</h3><pre><code>知识点：.descendants 属性</code></pre><h4 id="descendants"><a href="#descendants" class="headerlink" title=".descendants"></a>.descendants</h4><pre><code>.contents 和 .children 属性仅包含tag的直接子节点，.descendants 属性可以对所有tag的子孙节点进行递归循环，和 children类似，我们也需要遍历获取其中的内容。</code></pre><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> child <span class="keyword">in</span> soup.descendants:</span><br><span class="line">    <span class="builtin-name">print</span> child</span><br></pre></td></tr></table></figure><pre><code>运行结果如下，可以发现，所有的节点都被打印出来了，先生最外层的 HTML标签，其次从 head 标签一个个剥离，以此类推。</code></pre><h3 id="节点内容"><a href="#节点内容" class="headerlink" title="节点内容"></a>节点内容</h3><h4 id="string-属性"><a href="#string-属性" class="headerlink" title=".string 属性"></a>.string 属性</h4><pre><code>如果tag只有一个 NavigableString 类型子节点,那么这个tag可以使用 .string 得到子节点。如果一个tag仅有一个子节点,那么这个tag也可以使用 .string 方法,输出结果与当前唯一子节点的 .string 结果相同。通俗点说就是：如果一个标签里面没有标签了，那么 .string 就会返回标签里面的内容。如果标签里面只有唯一的一个标签了，那么 .string 也会返回最里面的内容。</code></pre><p>如果tag包含了多个子节点,tag就无法确定，string 方法应该调用哪个子节点的内容, .string 的输出结果是 None</p><h3 id="多个内容"><a href="#多个内容" class="headerlink" title="多个内容"></a>多个内容</h3><pre><code>知识点： .strings  .stripped_strings 属性</code></pre><h4 id="strings"><a href="#strings" class="headerlink" title=".strings"></a>.strings</h4><pre><code>获取多个内容，不过需要遍历获取，比如下面的例子</code></pre><p>输出的字符串中可能包含了很多空格或空行,使用 .stripped_strings 可以去除多余空白内容<br><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> <span class="built_in">string</span> <span class="keyword">in</span> soup.stripped_strings:</span><br><span class="line">    <span class="built_in">print</span>(repr(<span class="built_in">string</span>))</span><br></pre></td></tr></table></figure></p><h3 id="父节点"><a href="#父节点" class="headerlink" title="父节点"></a>父节点</h3><pre><code>知识点： .parent 属性</code></pre><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> = soup.p</span><br><span class="line">print <span class="selector-tag">p</span><span class="selector-class">.parent</span><span class="selector-class">.name</span></span><br></pre></td></tr></table></figure><h3 id="全部父节点"><a href="#全部父节点" class="headerlink" title="全部父节点"></a>全部父节点</h3><pre><code>知识点：.parents 属性通过元素的 .parents 属性可以递归得到元素的所有父辈节点，例如</code></pre><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">content</span> = soup.head.<span class="built_in">title</span>.<span class="built_in">string</span></span><br><span class="line"><span class="keyword">for</span> parent <span class="keyword">in</span>  <span class="built_in">content</span>.parents:</span><br><span class="line">    <span class="built_in">print</span> parent.name</span><br></pre></td></tr></table></figure><h3 id="兄弟节点"><a href="#兄弟节点" class="headerlink" title="兄弟节点"></a>兄弟节点</h3><h4 id="知识点：-next-sibling-previous-sibling-属性"><a href="#知识点：-next-sibling-previous-sibling-属性" class="headerlink" title="知识点：.next_sibling  .previous_sibling 属性"></a>知识点：.next_sibling  .previous_sibling 属性</h4><pre><code>兄弟节点可以理解为和本节点处在统一级的节点，.next_sibling 属性获取了该节点的下一个兄弟节点，.previous_sibling 则与之相反，如果节点不存在，则返回 None</code></pre><p>注意：实际文档中的tag的 .next_sibling 和 .previous_sibling 属性通常是字符串或空白，因为空白或者换行也可以被视作一个节点，所以得到的结果可能是空白或者换行<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">print soup<span class="selector-class">.p</span><span class="selector-class">.next_sibling</span></span><br><span class="line">print soup<span class="selector-class">.p</span><span class="selector-class">.prev_sibling</span></span><br><span class="line"><span class="selector-id">#None</span>   没有前一个兄弟节点，返回 None</span><br></pre></td></tr></table></figure></p><p>print soup.p.next_sibling.next_sibling<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">### 全部兄弟节点</span><br><span class="line"></span><br><span class="line">#### <span class="number">1</span>知识点：.next_siblings  .previous_siblings 属性</span><br><span class="line"></span><br><span class="line">通过 .next_siblings 和 .previous_siblings 属性可以对当前节点的兄弟节点迭代输出</span><br></pre></td></tr></table></figure></p><p>for sibling in soup.a.next_siblings:<br>    print(repr(sibling))<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">### 前后节点</span><br><span class="line">#### 知识点：.next_element  .previous_element 属性</span><br><span class="line"></span><br><span class="line">与 .next_sibling  .previous_sibling 不同，它并不是针对于兄弟节点，而是在所有节点，不分层次</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#### 所有前后节点</span><br><span class="line"></span><br><span class="line">#### 知识点：.next_elements  .previous_elements 属性</span><br><span class="line"></span><br><span class="line">通过 .next_elements 和 .previous_elements 的迭代器就可以向前或向后访问文档的解析内容,就好像文档正在被解析一样</span><br></pre></td></tr></table></figure></p><p>for element in last_a_tag.next_elements:<br>    print(repr(element))<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">以上是遍历文档树的基本用法。</span><br><span class="line"></span><br><span class="line">## 搜索文档树</span><br><span class="line">### find_all</span><br><span class="line">    find_all( name , attrs , recursive , text , **kwargs )</span><br><span class="line">    find_all() 方法搜索当前tag的所有tag子节点,并判断是否符合过滤器的条件</span><br><span class="line"></span><br><span class="line">#### name 参数</span><br><span class="line"></span><br><span class="line">name 参数可以查找所有名字为 name 的tag,字符串对象会被自动忽略掉</span><br><span class="line"></span><br><span class="line">#### 传字符串</span><br><span class="line"></span><br><span class="line">最简单的过滤器是字符串.在搜索方法中传入一个字符串参数,Beautiful Soup会查找与字符串完整匹配的内容,下面的例子用于查找文档中所有的&lt;b&gt;标签</span><br></pre></td></tr></table></figure></p><p>soup.find_all(‘b’)<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 传正则表达式</span><br><span class="line"></span><br><span class="line">如果传入正则表达式作为参数,Beautiful Soup会通过正则表达式的 match() 来匹配内容.下面例子中找出所有以b开头的标签,这表示&lt;body&gt;和&lt;b&gt;标签都应该被找到</span><br></pre></td></tr></table></figure></p><p>import re<br>for tag in soup.find_all(re.compile(“^b”)):<br>    print(tag.name)<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">#### 传 <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="literal">True</span> 可以匹配任何值,下面代码查找到所有的tag,但是不会返回字符串节点</span><br></pre></td></tr></table></figure></p><p>for tag in soup.find_all(True):<br>    print(tag.name)<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#### 传方法</span><br><span class="line"></span><br><span class="line">如果没有合适过滤器,那么还可以定义一个方法,方法只接受一个元素参数 [<span class="number">4</span>] ,如果这个方法返回 <span class="literal">True</span> 表示当前元素匹配并且被找到,如果不是则反回 <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">下面方法校验了当前元素,如果包含 <span class="keyword">class</span> 属性却不包含 id 属性,那么将返回 <span class="literal">True</span>:</span><br></pre></td></tr></table></figure></p><p>def has_class_but_no_id(tag):<br>    return tag.has_attr(‘class’) and not tag.has_attr(‘id’)</p><p>soup.find_all(has_class_but_no_id)<br><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#### keyword 参数</span><br><span class="line"></span><br><span class="line">    注意：如果一个指定名字的参数不是搜索内置的参数名,搜索时会把该参数当作指定名字tag的属性来搜索,如果包含一个名字为 id 的参数,Beautiful Soup会搜索每个tag的”id”属性</span><br></pre></td></tr></table></figure></p><p>soup.find_all(id=’link2’)<br>soup.find_all(href=re.compile(“elsie”))<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用多个指定名字的参数可以同时过滤<span class="keyword">tag</span>的多个属性</span><br></pre></td></tr></table></figure></p><p>soup.find_all(href=re.compile(“elsie”), id=’link1’)<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">有些<span class="keyword">tag</span>属性在搜索不能使用,比如HTML5中的 data-* 属性</span><br><span class="line">但是可以通过 find_all() 方法的 attrs 参数定义一个字典参数来搜索包含特殊属性的<span class="keyword">tag</span></span><br><span class="line">```</span><br><span class="line">data_soup.find_all(<span class="attr">attrs=</span>&#123;<span class="string">"data-foo"</span>: <span class="string">"value"</span>&#125;)</span><br></pre></td></tr></table></figure></p><h4 id="text-参数"><a href="#text-参数" class="headerlink" title="text 参数"></a>text 参数</h4><pre><code>通过 text 参数可以搜搜文档中的字符串内容.与 name 参数的可选值一样, text 参数接受 字符串 , 正则表达式 , 列表, True</code></pre><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(text=<span class="string">"Elsie"</span>)</span><br><span class="line"><span class="comment"># [u'Elsie']</span></span><br><span class="line"></span><br><span class="line">soup.find_all(text=[<span class="string">"Tillie"</span>, <span class="string">"Elsie"</span>, <span class="string">"Lacie"</span>])</span><br><span class="line"><span class="comment"># [u'Elsie', u'Lacie', u'Tillie']</span></span><br><span class="line"></span><br><span class="line">soup.find_all(text=re.compile(<span class="string">"Dormouse"</span>))</span><br><span class="line">[<span class="string">u"The Dormouse's story"</span>, <span class="string">u"The Dormouse's story"</span>]</span><br></pre></td></tr></table></figure><h4 id="limit-参数"><a href="#limit-参数" class="headerlink" title="limit 参数"></a>limit 参数</h4><pre><code>find_all() 方法返回全部的搜索结构,如果文档树很大那么搜索会很慢.如果我们不需要全部结果,可以使用 limit 参数限制返回结果的数量.当搜索到的结果数量达到 limit 的限制时,就停止搜索返回结果.文档树中有3个tag符合搜索条件,但结果只返回了2个,因为我们限制了返回数量</code></pre><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">soup.find_all(<span class="string">"a"</span>, <span class="attribute">limit</span>=2)</span><br></pre></td></tr></table></figure><h4 id="recursive-参数"><a href="#recursive-参数" class="headerlink" title="recursive 参数"></a>recursive 参数</h4><pre><code>调用tag的 find_all() 方法时,Beautiful Soup会检索当前tag的所有子孙节点,如果只想搜索tag的直接子节点,可以使用参数 recursive=False .</code></pre><p>一段简单的文档:</p><p><html><br> <head><br>  <title><br>   The Dormouse’s story<br>  </title><br> </head><br><figure class="highlight fsharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">是否使用 recursive 参数的搜索结果:</span><br><span class="line">soup.html.find_all(<span class="string">"title"</span>)</span><br><span class="line"># <span class="meta">[&lt;title&gt;The Dormouse's story&lt;/title&gt;]</span></span><br><span class="line"></span><br><span class="line">soup.html.find_all(<span class="string">"title"</span>, recursive=False)</span><br></pre></td></tr></table></figure></html></p><h3 id="find-name-attrs-recursive-text-kwargs"><a href="#find-name-attrs-recursive-text-kwargs" class="headerlink" title="find( name , attrs , recursive , text , **kwargs )"></a>find( name , attrs , recursive , text , **kwargs )</h3><pre><code>它与 find_all() 方法唯一的区别是 find_all() 方法的返回结果是值包含一个元素的列表,而 find() 方法直接返回结果</code></pre><h3 id="find-parents-find-parent"><a href="#find-parents-find-parent" class="headerlink" title="find_parents()  find_parent()"></a>find_parents()  find_parent()</h3><pre><code>find_all() 和 find() 只搜索当前节点的所有子节点,孙子节点等. find_parents() 和 find_parent() 用来搜索当前节点的父辈节点,搜索方法与普通tag的搜索方法相同,搜索文档搜索文档包含的内容</code></pre><h3 id="find-next-siblings-find-next-sibling"><a href="#find-next-siblings-find-next-sibling" class="headerlink" title="find_next_siblings()  find_next_sibling()"></a>find_next_siblings()  find_next_sibling()</h3><pre><code>这2个方法通过 .next_siblings 属性对当 tag 的所有后面解析的兄弟 tag 节点进行迭代, find_next_siblings() 方法返回所有符合条件的后面的兄弟节点,find_next_sibling() 只返回符合条件的后面的第一个tag节点</code></pre><h3 id="find-previous-siblings-find-previous-sibling"><a href="#find-previous-siblings-find-previous-sibling" class="headerlink" title="find_previous_siblings()  find_previous_sibling()"></a>find_previous_siblings()  find_previous_sibling()</h3><pre><code>这2个方法通过 .previous_siblings 属性对当前 tag 的前面解析的兄弟 tag 节点进行迭代, find_previous_siblings() 方法返回所有符合条件的前面的兄弟节点, find_previous_sibling() 方法返回第一个符合条件的前面的兄弟节点</code></pre><h3 id="find-all-next-find-next"><a href="#find-all-next-find-next" class="headerlink" title="find_all_next()  find_next()"></a>find_all_next()  find_next()</h3><pre><code>这2个方法通过 .next_elements 属性对当前 tag 的之后的 tag 和字符串进行迭代, find_all_next() 方法返回所有符合条件的节点, find_next() 方法返回第一个符合条件的节点</code></pre><h3 id="find-all-previous-和-find-previous"><a href="#find-all-previous-和-find-previous" class="headerlink" title="find_all_previous() 和 find_previous()"></a>find_all_previous() 和 find_previous()</h3><pre><code>这2个方法通过 .previous_elements 属性对当前节点前面的 tag 和字符串进行迭代, find_all_previous() 方法返回所有符合条件的节点, find_previous()方法返回第一个符合条件的节点注：以上（2）（3）（4）（5）（6）（7）方法参数用法与 find_all() 完全相同，原理均类似，在此不再赘述。</code></pre><h2 id="CSS选择器"><a href="#CSS选择器" class="headerlink" title="CSS选择器"></a>CSS选择器</h2><p>我们在写 CSS 时，标签名不加任何修饰，类名前加点，id名前加 #，在这里我们也可以利用类似的方法来筛选元素，用到的方法是 soup.select()，返回类型是 list</p><h3 id="通过标签名查找"><a href="#通过标签名查找" class="headerlink" title="通过标签名查找"></a>通过标签名查找</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> soup.<span class="built_in">select</span>('<span class="built_in">title</span>')</span><br></pre></td></tr></table></figure><h3 id="通过类名查找"><a href="#通过类名查找" class="headerlink" title="通过类名查找"></a>通过类名查找</h3><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> soup.<span class="keyword">select</span>(<span class="string">'.sister'</span>)</span><br></pre></td></tr></table></figure><h3 id="通过-id-名查找"><a href="#通过-id-名查找" class="headerlink" title="通过 id 名查找"></a>通过 id 名查找</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> soup.<span class="built_in">select</span>('<span class="meta">#link1')</span></span><br></pre></td></tr></table></figure><h3 id="组合查找"><a href="#组合查找" class="headerlink" title="组合查找"></a>组合查找</h3><pre><code>组合查找即和写 class 文件时，标签名与类名、id名进行的组合原理是一样的，例如查找 p 标签中，id 等于 link1的内容，二者需要用空格分开</code></pre><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> soup.<span class="built_in">select</span>('p <span class="meta">#link1')</span></span><br></pre></td></tr></table></figure><h3 id="直接子标签查找"><a href="#直接子标签查找" class="headerlink" title="直接子标签查找"></a>直接子标签查找</h3><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">print</span> soup.<span class="built_in">select</span>(<span class="string">"head &gt; title"</span>)</span><br></pre></td></tr></table></figure><h3 id="属性查找"><a href="#属性查找" class="headerlink" title="属性查找"></a>属性查找</h3><pre><code>查找时还可以加入属性元素，属性需要用中括号括起来，注意属性和标签属于同一节点，所以中间不能加空格，否则会无法匹配到。</code></pre><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print soup.select(<span class="symbol">'a</span>[<span class="class"><span class="keyword">class</span></span>=<span class="string">"sister"</span>]')</span><br></pre></td></tr></table></figure><pre><code>同样，属性仍然可以与上述查找方式组合，不在同一节点的空格隔开，同一节点的不加空格</code></pre><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">print soup.<span class="keyword">select</span>(<span class="symbol">'p</span> a[href=<span class="string">"http://example.com/elsie"</span>]')</span><br></pre></td></tr></table></figure><pre><code>以上的 select 方法返回的结果都是列表形式，可以遍历形式输出，然后用 get_text() 方法来获取它的内容。</code></pre><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">soup = BeautifulSoup(html, 'lxml')</span><br><span class="line"><span class="keyword">print</span> <span class="built_in">type</span>(soup.<span class="built_in">select</span>('<span class="built_in">title</span>'))</span><br><span class="line"><span class="keyword">print</span> soup.<span class="built_in">select</span>('<span class="built_in">title</span>')[<span class="number">0</span>].get_text()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> <span class="built_in">title</span> in soup.<span class="built_in">select</span>('<span class="built_in">title</span>'):</span><br><span class="line">    <span class="keyword">print</span> <span class="built_in">title</span>.get_text()</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;BeautifulSoup&quot;&gt;&lt;a href=&quot;#BeautifulSoup&quot; class=&quot;headerlink&quot; title=&quot;BeautifulSoup&quot;&gt;&lt;/a&gt;BeautifulSoup&lt;/h1&gt;&lt;h2 id=&quot;BeautifilSoup-简介&quot;&gt;&lt;a 
      
    
    </summary>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>鸟哥的linux私房菜笔记</title>
    <link href="http://yoursite.com/2018/08/13/%E9%B8%9F%E5%93%A5%E7%9A%84linux%E7%A7%81%E6%88%BF%E8%8F%9C%E7%AC%94%E8%AE%B0/"/>
    <id>http://yoursite.com/2018/08/13/鸟哥的linux私房菜笔记/</id>
    <published>2018-08-14T03:25:31.000Z</published>
    <updated>2018-10-31T11:01:31.035Z</updated>
    
    <content type="html"><![CDATA[<p>这里记录的我在第二次阅读鸟哥的基础篇记下的笔记。</p><h1 id="selinux-初探"><a href="#selinux-初探" class="headerlink" title="selinux 初探"></a>selinux 初探</h1><pre><code>selinux(security enhanced linux) 最初目的是因为许多人发现系统出现问题大部分都在于内部员工的资源的误用。于是美国国家安全局着手处理了这方面的管控。他使用linux 作为研究的目标，并将结果整合到了linux 内核中，形成了selinux</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;这里记录的我在第二次阅读鸟哥的基础篇记下的笔记。&lt;/p&gt;
&lt;h1 id=&quot;selinux-初探&quot;&gt;&lt;a href=&quot;#selinux-初探&quot; class=&quot;headerlink&quot; title=&quot;selinux 初探&quot;&gt;&lt;/a&gt;selinux 初探&lt;/h1&gt;&lt;pre&gt;&lt;cod
      
    
    </summary>
    
      <category term="linux" scheme="http://yoursite.com/categories/linux/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>python</title>
    <link href="http://yoursite.com/2018/08/06/python/"/>
    <id>http://yoursite.com/2018/08/06/python/</id>
    <published>2018-08-07T04:56:16.000Z</published>
    <updated>2018-10-31T11:01:31.035Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;figure class=&quot;highlight elm&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class
      
    
    </summary>
    
      <category term="categories" scheme="http://yoursite.com/categories/categories/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>net</title>
    <link href="http://yoursite.com/2018/08/06/net/"/>
    <id>http://yoursite.com/2018/08/06/net/</id>
    <published>2018-08-06T19:45:06.000Z</published>
    <updated>2018-10-31T11:01:31.031Z</updated>
    
    <content type="html"><![CDATA[<p>#数据链路层</p><p><em>链路是只从一个结点到相邻结点的一段物理线路，中间没有其他交换结点，而数据链路是指当需要在一条线路上传输数据时，处理必须有一条物理线路外，还必须有必要的通信协议来控制这些数据的传输（现在最常用的办法是使用网路适配器（既有硬件，也有软件）；来实现这些协议）</em></p><h2 id="数据链路层的三个基本问题"><a href="#数据链路层的三个基本问题" class="headerlink" title="数据链路层的三个基本问题"></a>数据链路层的三个基本问题</h2><h3 id="封装成帧"><a href="#封装成帧" class="headerlink" title="封装成帧"></a>封装成帧</h3><pre><code>封装成帧就是在一段数据的前后分别添加首部和尾部，这样就构成了一个帧。接收端在收到物理层上交的比特流后，能够根据首部和尾部的标记，识别到帧的开始和结束。网络层的IP数据报传送到数据链路层就成为了帧的数据部分。</code></pre><p><em>MTU最大传送单元(maximum transfer unit) 为了提高帧的传送效率使帧的数据部分长度尽可能的大于首部和尾部的长度，但要MTU</em></p><h4 id="帧定界符"><a href="#帧定界符" class="headerlink" title="帧定界符"></a>帧定界符</h4><pre><code>SOH （start of head）二进制00000001 EOT  (end of transmission) 二进制00000100在传输钟出现差错时，接收端能够根于SOH，EOT 进行取舍</code></pre><hr><h3 id="透明传输"><a href="#透明传输" class="headerlink" title="透明传输"></a>透明传输</h3><h4 id="透明传输含义"><a href="#透明传输含义" class="headerlink" title="透明传输含义"></a>透明传输含义</h4><pre><code>由于帧的开始和结束标记是专门指明的控制字符，因此，所传输的数据中的任何8比特的组合一定不允许和定界符的控制字符的比特编码一样，否则会出现帧定界符错误</code></pre><h4 id="透明传输的实现方法–-字节填充"><a href="#透明传输的实现方法–-字节填充" class="headerlink" title="透明传输的实现方法– 字节填充"></a>透明传输的实现方法– 字节填充</h4><pre><code>发送端的数据链路层在数据中出现帧定界符时，在SOH或EOT前插一个转义字符ESC（00011011）接受端在吧数据上交网络层前删掉这个转义字符ESC如果数据钟有转义字符，则再在其前添加一个转义字符</code></pre><hr><h3 id="差错控制"><a href="#差错控制" class="headerlink" title="差错控制"></a>差错控制</h3><h4 id="比特差错"><a href="#比特差错" class="headerlink" title="比特差错"></a>比特差错</h4><pre><code>比特差错是传输错误的一种，传输错误的比特占所传输比特总数的比率叫做误码率BER.</code></pre><h4 id="帧丢失，帧重复，帧乱序"><a href="#帧丢失，帧重复，帧乱序" class="headerlink" title="帧丢失，帧重复，帧乱序"></a>帧丢失，帧重复，帧乱序</h4><h4 id="循环冗余检测的检错技术-CRC-cycle-Redundancy-Check-CRC只能检查比特差错"><a href="#循环冗余检测的检错技术-CRC-cycle-Redundancy-Check-CRC只能检查比特差错" class="headerlink" title="循环冗余检测的检错技术 CRC (cycle Redundancy Check) CRC只能检查比特差错"></a>循环冗余检测的检错技术 CRC (cycle Redundancy Check) CRC只能检查比特差错</h4><pre><code>1.将多项式转化为二进制序列，由G（X） = X^4 + X^3 + 1可知二进制一种有五位，第4位、第三位和第零位分别为1，则序列为110012.多项式的位数位5，则在数据帧的后面加上5-1位0，数据帧变为101100110000，然后使用模2除法除以        除数11001，得到余数。3.将计算出来的CRC校验码添加在原始帧的后面，真正的数据帧为101100110100，再把这个数据帧发送到接收端。4.接收端收到数据帧后，用上面选定的除数，用模2除法除去，验证余数是否为0，如果为0，则说明数据帧没有出错。</code></pre><p><img src="/2018/08/06/net/CRC.png" alt="CRC"></p><hr><h2 id="适配器，转发器，集线器，网桥，以太网交换几的作用以及使用场合"><a href="#适配器，转发器，集线器，网桥，以太网交换几的作用以及使用场合" class="headerlink" title="适配器，转发器，集线器，网桥，以太网交换几的作用以及使用场合"></a>适配器，转发器，集线器，网桥，以太网交换几的作用以及使用场合</h2><hr><h2 id="点对点信道"><a href="#点对点信道" class="headerlink" title="点对点信道"></a>点对点信道</h2><h3 id="主要步骤"><a href="#主要步骤" class="headerlink" title="主要步骤"></a>主要步骤</h3><ol><li>结点A 的数据链路层吧网络层交下来的IP数据报添加首部和尾部封装成帧</li><li>结点A 把封装好的帧发送给结点B的数据链路层</li><li>若结点B 的数据链路层收到的帧无差错，则从收到的帧中提取ip数据报上交给网络层，否则丢弃此帧</li></ol><hr><h3 id="ppp-协议"><a href="#ppp-协议" class="headerlink" title="ppp 协议"></a>ppp 协议</h3><h4 id="ppp协议的需求"><a href="#ppp协议的需求" class="headerlink" title="ppp协议的需求"></a>ppp协议的需求</h4><pre><code>1.简单2.封装成帧3.透明性4.多种网络层协议5.多种类型链路6.差错控制7.检查链接状态8.最大传输单元9.网络地址协商10.数据压缩协商</code></pre><h3 id="ppp协议的组成"><a href="#ppp协议的组成" class="headerlink" title="ppp协议的组成"></a>ppp协议的组成</h3><pre><code>1.数据链路层协议可以用于异步穿行或同步串行的介质2.它使用LCP（link control protocol)链路控制协议 建立并维护数据链路链接3.NCP (network control protocol) 网络控制协议允许点到点链接上使用多种网络层协议</code></pre><hr><h3 id="ppp协议的帧格式"><a href="#ppp协议的帧格式" class="headerlink" title="ppp协议的帧格式"></a>ppp协议的帧格式</h3><h4 id="ppp协议的帧格式，图解"><a href="#ppp协议的帧格式，图解" class="headerlink" title="ppp协议的帧格式，图解"></a>ppp协议的帧格式，图解</h4><p><img src="/2018/08/06/net/ppp_protocol.png" alt="ppp协议的帧"></p><h4 id="ppp-协议帧格式个字段的意义"><a href="#ppp-协议帧格式个字段的意义" class="headerlink" title="ppp 协议帧格式个字段的意义"></a>ppp 协议帧格式个字段的意义</h4><pre><code>1.F ： 标记字段 规定为0x7E ,标记开始和结束，因此标记字段就是ppp帧的定界符2.A : 地址字段，规定为0xFF（最初曾考虑对这两个字段的值进行其他定义，而然至今未给出）3.C :控制字段，PPP首部的第四个字段是2个字节的协议字段4.FCS : CRC的帧检验序列FCS。       　1.当协议字段为0x0021时，PPP帧的信息字段就是IP数据报，    　2.当为0xC021时，则信息字段是PPP链路控制协议LCP的数据，    　3.当为0x8021表示这个网络层的控制数据    　4.0xC023 表示为安全性认证PAP    　5.0xC025 表示LQR    　6.0xC233 安全性认证认证CHAP </code></pre><h2 id="广播信道"><a href="#广播信道" class="headerlink" title="广播信道"></a>广播信道</h2><p>###特点</p><h3 id="CSMA-CD-协议"><a href="#CSMA-CD-协议" class="headerlink" title="CSMA/CD 协议"></a>CSMA/CD 协议</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;#数据链路层&lt;/p&gt;
&lt;p&gt;&lt;em&gt;链路是只从一个结点到相邻结点的一段物理线路，中间没有其他交换结点，而数据链路是指当需要在一条线路上传输数据时，处理必须有一条物理线路外，还必须有必要的通信协议来控制这些数据的传输（现在最常用的办法是使用网路适配器（既有硬件，也有软件）；来
      
    
    </summary>
    
    
      <category term="-net" scheme="http://yoursite.com/tags/net/"/>
    
  </entry>
  
  <entry>
    <title>java</title>
    <link href="http://yoursite.com/2018/08/06/java-1/"/>
    <id>http://yoursite.com/2018/08/06/java-1/</id>
    <published>2018-08-06T19:45:06.000Z</published>
    <updated>2018-10-29T09:10:27.335Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Java-包"><a href="#Java-包" class="headerlink" title="Java 包"></a>Java 包</h1><h2 id="定义和作用"><a href="#定义和作用" class="headerlink" title="定义和作用"></a>定义和作用</h2><pre><code>包是java有效管理类的一个机制，不同java源程序可能出现名字相同的累，可以使用包名进行区分</code></pre><h2 id="关键字"><a href="#关键字" class="headerlink" title="关键字"></a>关键字</h2><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span></span><br><span class="line"><span class="keyword">package</span> <span class="title">sun.com.cn</span></span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li>如果一个类有包名，则不能在任意位置存放，否则虚拟无法加载，</li><li>存储文件的目录结构要有包相应的结构</li><li>可以将源文件直接放在对应目录下编译，则字节码默认保存在相应目录</li></ol><h2 id="运行有包名的主类"><a href="#运行有包名的主类" class="headerlink" title="运行有包名的主类"></a>运行有包名的主类</h2><pre><code>比如tom.jiafei则必须到tom/jiafei 上一级目录执行</code></pre><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java tom<span class="selector-class">.jiafei</span>.主类名</span><br></pre></td></tr></table></figure><h1 id="abstract-类，abstract-方法"><a href="#abstract-类，abstract-方法" class="headerlink" title="abstract 类，abstract 方法"></a>abstract 类，abstract 方法</h1><pre><code>用关键字abstract修饰的类称为abstract类（抽象类）用abstract修饰的方法称为abstract方法，abstract修饰的方法必须在子类中重写</code></pre><p>#内部类<br>    类有两钟重要的成员，成员变量，和成员方法， 实际上java 允许类有一种成员 == 类部类</p><ol><li>声明内部类和声明的方法和成员变量一样，一个类吧内部类看作是自己的成员变量。</li><li>内部类的外迁类的成员在内部类中仍然有效，内部类也可以调用外嵌类的方法</li><li>内部类的类体不能声明类变量和类方法( 即 静态变量，和静态方法)</li><li>外嵌类的类体中可以用内部类声明对象作为外嵌类的成员</li></ol><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"><span class="markdown">/<span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="emphasis">***</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">&gt; File Name: inlineClass.java</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">&gt; Author: </span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">&gt; Mail: </span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"><span class="code">&gt; Created Time: 2018年10月27日 星期六 17时55分30秒</span></span></span></span><br><span class="line"><span class="comment"><span class="markdown"> <span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span><span class="strong">*****</span>**/</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">inlineClass</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">final</span> <span class="built_in">String</span> song = <span class="string">"hello world"</span>;</span><br><span class="line">    private Beijing beijing; <span class="comment">// 内部类对象</span></span><br><span class="line">    inlineClass()&#123;</span><br><span class="line">        beijing = <span class="keyword">new</span> Beijing();</span><br><span class="line">    &#125;</span><br><span class="line">    public Beijing getBeijing()&#123;</span><br><span class="line">        <span class="keyword">return</span> beijing;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="built_in">String</span> getSong()&#123;</span><br><span class="line">        <span class="keyword">return</span> song;</span><br><span class="line">    &#125;</span><br><span class="line">    public <span class="class"><span class="keyword">class</span> <span class="title">Beijing</span></span>&#123;</span><br><span class="line">        <span class="built_in">String</span> name = <span class="string">"Beijing"</span>;</span><br><span class="line">        <span class="keyword">void</span> <span class="built_in">print</span>()&#123;</span><br><span class="line">            System.out.println(<span class="string">"hello Beijing"</span>); </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">public <span class="class"><span class="keyword">class</span> <span class="title">TestinlineClass</span></span>&#123;</span><br><span class="line">    public <span class="keyword">static</span> <span class="keyword">void</span> main(<span class="built_in">String</span> args[])&#123;</span><br><span class="line">        inlineClass test = <span class="keyword">new</span> inlineClass();</span><br><span class="line">        System.out.println(test.getSong());</span><br><span class="line">        test.getBeijing().<span class="built_in">print</span>();</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="匿名类"><a href="#匿名类" class="headerlink" title="匿名类"></a>匿名类</h1><p>1.没有名字的局部内部类。<br>2.没有class,interface,implements,extends关键字<br>3.没有构造器。<br>4.一般隐式的继承某一个父类或者实现某一个接口<br>5.匿名类时一个内部类</p><h1 id="Class-类"><a href="#Class-类" class="headerlink" title="Class 类"></a>Class 类</h1><ol><li>Class 是java.lang 中的类，用于封装对象运行时的状态，当一个类被加载切创造对象时，和该类相关的Class 被自动创建</li><li>Class 本身不提供构造方法，因此不能使用new 创建一个方法</li><li>任何对象可以调动getClass 获得Class<br>|方法|作用|<br>|—|—|<br>|String getName()|返回类名|<br>|Constructor[] getDeclaredConstructors|返回类的全部构造方法|<br>|Field[] getDeclaredFields| 返回类的全部方法|<br>|Method[] getDeclaredMethonds| 返回类的全部方法|</li></ol><h1 id="输入输出流"><a href="#输入输出流" class="headerlink" title="输入输出流"></a>输入输出流</h1><p>＃ 输入输出流提供一条通道程序，可以使用这条通道读取源中的数据或把数据传送到目的地<br>＃ 把输入流的指向称作源，程序</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;Java-包&quot;&gt;&lt;a href=&quot;#Java-包&quot; class=&quot;headerlink&quot; title=&quot;Java 包&quot;&gt;&lt;/a&gt;Java 包&lt;/h1&gt;&lt;h2 id=&quot;定义和作用&quot;&gt;&lt;a href=&quot;#定义和作用&quot; class=&quot;headerlink&quot; title=
      
    
    </summary>
    
      <category term="java" scheme="http://yoursite.com/categories/java/"/>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>linux</title>
    <link href="http://yoursite.com/2018/08/05/linux/"/>
    <id>http://yoursite.com/2018/08/05/linux/</id>
    <published>2018-08-05T19:45:23.000Z</published>
    <updated>2018-10-31T11:01:31.031Z</updated>
    
    <content type="html"><![CDATA[<h1 id="vim-常用命令"><a href="#vim-常用命令" class="headerlink" title="vim 常用命令"></a>vim 常用命令</h1><h2 id="移动"><a href="#移动" class="headerlink" title="移动"></a>移动</h2><pre><code>H 移动到屏幕最上方一行的第一个字符M 移动到屏幕最中央一行的第一个字符L 移动到屏幕最下方一行的第一个字符w 向前移动一个单词（光标停在单词首部），如果已到行尾，则转至下一行行首。此命令快，可以代替l命令。b 向后移动一个单词 2b 向后移动2个单词e，同w，只不过是光标停在单词尾部ge，同b，光标停在单词尾部。^ 移动到本行第一个非空白字符上。0（数字0）移动到本行第一个字符上，&lt;HOME&gt; 移动到本行第一个字符。同0健。$ 移动到行尾 3$ 移动到下面3行的行尾gg 移动到文件头。 = [[G（shift + g） 移动到文件尾。 = ]]f（find）命令也可以用于移动，fx将找到光标后第一个为x的字符，3fd将找到第三个为d的字符。F 同f，反向查找。跳到指定行，冒号+行号，回车，比如跳到240行就是 :240回车。另一个方法是行号+G，比如230G跳到230行</code></pre><h2 id="撤销"><a href="#撤销" class="headerlink" title="撤销"></a>撤销</h2><pre><code>u 撤销（Undo）U 撤销对整行的操作Ctrl + r 重做（Redo），即撤销的撤销。</code></pre><h2 id="删除命令"><a href="#删除命令" class="headerlink" title="删除命令"></a>删除命令</h2><pre><code>x 删除当前字符3x 删除当前光标开始向后三个字符X 删除当前字符的前一个字符。X=dhdl 删除当前字符， dl=xdh 删除前一个字符dd 删除当前行dj 删除上一行dk 删除下一行10d 删除当前行开始的10行。D 删除当前字符至行尾。D=d$d$ 删除当前字符之后的所有字符（本行）kdgg 删除当前行之前所有行（不包括当前行）jdG（jd shift + g）   删除当前行之后所有行（不包括当前行）:1,10d 删除1-10行:11,$d 删除11行及以后所有的行:1,$d 删除所有行J(shift + j)　　删除两行之间的空行，实际上是合并两行。</code></pre><h1 id="tar-的常用方法"><a href="#tar-的常用方法" class="headerlink" title="tar 的常用方法"></a>tar 的常用方法</h1><pre><code>-tar -c新建打包文件,-x 压缩解压缩-j bzip2压缩解压缩-z gzip压缩解压缩-v 显示文件名-f 后接被处理的文件名tar -cjvf --tar -xjvf --</code></pre><h1 id="linux下解压windows文件乱码问题"><a href="#linux下解压windows文件乱码问题" class="headerlink" title="linux下解压windows文件乱码问题"></a>linux下解压windows文件乱码问题</h1><pre><code>unzip -O Cp936 xxx.zip</code></pre><h1 id="firewall"><a href="#firewall" class="headerlink" title="firewall:"></a>firewall:</h1><p><em>使用命令行管理firewall之前，说明有关于防火墙的策略独立性：明确的策略，策略之间无关联。 比如mysql使用3306，firewall添加mysql服务但未添加3306，当查询3306端口状态会显示no； 同理，添加3306端口，但未添加mysql服务，当查询mysql服务是否被firewalld允许时，显示no。在这两种情况下，外网都可以正常访问，也必须能访问，这里的逻辑不存在问题。同样，拿Java程序开发来类比：往hashMap.put进service与port，当get的时候就成了两码事,即便所操作的是关于mysql服务</em></p><p>#防火墙常用的命令</p><h3 id="1-查看防火墙状态"><a href="#1-查看防火墙状态" class="headerlink" title="1.查看防火墙状态"></a>1.查看防火墙状态</h3><pre><code>systemctl status firewalld</code></pre><h3 id="2-查看开放的服务-端口："><a href="#2-查看开放的服务-端口：" class="headerlink" title="2.查看开放的服务/端口："></a>2.查看开放的服务/端口：</h3><pre><code>firewall-cmd --list-servicefirewall-cmd --list-port</code></pre><h3 id="3-查询指定的端口是否永久开放"><a href="#3-查询指定的端口是否永久开放" class="headerlink" title="3.查询指定的端口是否永久开放"></a>3.查询指定的端口是否永久开放</h3><pre><code>firewall-cmd --permanent --query-port=1000/tcp</code></pre><h3 id="4-查询指定的服务-端口："><a href="#4-查询指定的服务-端口：" class="headerlink" title="4.查询指定的服务/端口："></a>4.查询指定的服务/端口：</h3><pre><code>firewall-cmd --query-service sshfirewall-cmd --query-port=3306/tcp</code></pre><h3 id="5-添加服务："><a href="#5-添加服务：" class="headerlink" title="5.添加服务："></a>5.添加服务：</h3><pre><code>firewall-cmd --permanent --add-service=ftpfirewall-cmd --permanent --remove-service=ftp</code></pre><h3 id="6-添加端口"><a href="#6-添加端口" class="headerlink" title="6.添加端口"></a>6.添加端口</h3><pre><code>方式1：  firewall-cmd --permanent --add-port=3306/tcp  firewall-cmd --permanent --add-port=1522/tcp  firewall-cmd --reload方式2：  cp  /usr/lib/firewalld/services/ssh.xml /etc/firewalld/services/ssh.xml  vi  /etc/firewalld/services/ssh.xml  vi /etc/firewalld/zones/public.xml</code></pre><h3 id="7-查看存在的zones"><a href="#7-查看存在的zones" class="headerlink" title="7.查看存在的zones:"></a>7.查看存在的zones:</h3><pre><code>firewall-cmd --get-zones</code></pre><h3 id="8-当前使用的zone："><a href="#8-当前使用的zone：" class="headerlink" title="8.当前使用的zone："></a>8.当前使用的zone：</h3><pre><code>firewall-cmd --get-active-zones</code></pre><h3 id="9-zone为public的所有策略："><a href="#9-zone为public的所有策略：" class="headerlink" title="9.zone为public的所有策略："></a>9.zone为public的所有策略：</h3><pre><code>firewall-cmd --zone=public --list-all</code></pre><h3 id="10-设置默认的zone-（public是最合适的，也是firewall默认的）"><a href="#10-设置默认的zone-（public是最合适的，也是firewall默认的）" class="headerlink" title="10.设置默认的zone: （public是最合适的，也是firewall默认的）"></a>10.设置默认的zone: （public是最合适的，也是firewall默认的）</h3><pre><code>firewall-cmd --set-default-zone=public</code></pre><p>#结果终端提示:无法获得锁/var/lib/dpkg/lock</p><pre><code>结果终端提示:无法获得锁/var/lib/dpkg/lockE: 无法锁定管理目录(/var/lib/dpkg/)，是否有其他进程正占用它？”解决办法如下：1.终端输入 ps  -aux ，列出进程,找到含有apt-get的进程，直接sudo kill PID解决。2.强制解锁--命令:sudo rm /var/cache/apt/archives/locksudo rm /var/lib/dpkg/lock</code></pre>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;vim-常用命令&quot;&gt;&lt;a href=&quot;#vim-常用命令&quot; class=&quot;headerlink&quot; title=&quot;vim 常用命令&quot;&gt;&lt;/a&gt;vim 常用命令&lt;/h1&gt;&lt;h2 id=&quot;移动&quot;&gt;&lt;a href=&quot;#移动&quot; class=&quot;headerlink&quot; titl
      
    
    </summary>
    
      <category term="categories" scheme="http://yoursite.com/categories/categories/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>algorithm</title>
    <link href="http://yoursite.com/2018/08/05/algorithm/"/>
    <id>http://yoursite.com/2018/08/05/algorithm/</id>
    <published>2018-08-05T19:44:07.000Z</published>
    <updated>2018-10-31T11:01:30.999Z</updated>
    
    <content type="html"><![CDATA[<h1 id="挑战程序设计竞赛练习"><a href="#挑战程序设计竞赛练习" class="headerlink" title="挑战程序设计竞赛练习"></a>挑战程序设计竞赛练习</h1><h2 id="并查集"><a href="#并查集" class="headerlink" title="并查集"></a>并查集</h2><h3 id="例题poj2236"><a href="#例题poj2236" class="headerlink" title="例题poj2236"></a>例题poj2236</h3><p><img src="/2018/08/05/algorithm/poj/poj2236.png" alt="poj2236"></p><h3 id="思路-并查集"><a href="#思路-并查集" class="headerlink" title="思路 并查集"></a>思路 并查集</h3><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;set&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 1005</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line"><span class="keyword">int</span> d,n;</span><br><span class="line"><span class="keyword">int</span> parent[N];</span><br><span class="line"><span class="keyword">bool</span> visit[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">point</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> x,y;</span><br><span class="line">&#125;p[N];</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">find</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x == parent[x])&#123;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> parent[x] = find(parent[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">dis</span><span class="params">(point x, point y)</span></span>&#123;</span><br><span class="line">    <span class="comment">//return   (((LL)x.x - (LL)y.x) * ((LL)x.x + (LL)y.x) + ((LL)x.y - (LL)y.y) * ((LL)x.y - (LL)y.y))&lt;= (LL)d *(LL)d;</span></span><br><span class="line">    LL xx = x.x - y.x;</span><br><span class="line">    LL yy = x.y - y.y;</span><br><span class="line">    <span class="keyword">return</span> xx*xx + yy*yy &lt;= (LL)d * (LL)d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ;i ++)&#123;</span><br><span class="line">        parent[i] = i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">memset</span>(visit,<span class="number">0</span>,<span class="keyword">sizeof</span>(visit));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> tmp;</span><br><span class="line">    <span class="keyword">int</span> t,t2;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;d);</span><br><span class="line">    init();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ;i ++)&#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;p[i].x,&amp;p[i].y);</span><br><span class="line">    &#125;</span><br><span class="line">   </span><br><span class="line">    <span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%c%c"</span>,&amp;tmp,&amp;tmp))&#123;</span><br><span class="line">        <span class="keyword">if</span>(tmp == <span class="string">'O'</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;t);</span><br><span class="line">            visit[t] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++)&#123;</span><br><span class="line">               <span class="comment">// cout&lt;&lt;"-------&gt;"&lt;&lt;i&lt;&lt;" "&lt;&lt;t&lt;&lt;endl;</span></span><br><span class="line">                <span class="keyword">if</span>(i != t &amp;&amp; visit[i] &amp;&amp; dis(p[i],p[t]))&#123;</span><br><span class="line">                </span><br><span class="line">                    <span class="keyword">int</span> x = find(i);</span><br><span class="line">                    <span class="keyword">int</span> y = find(t);</span><br><span class="line">            <span class="comment">//    cout&lt;&lt;"---&gt;&gt;"&lt;&lt;x&lt;&lt;" "&lt;&lt;y&lt;&lt;endl;</span></span><br><span class="line">                    <span class="keyword">if</span>(x != y )&#123;</span><br><span class="line">                        parent[y] = x;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(tmp == <span class="string">'S'</span>)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;t,&amp;t2);   </span><br><span class="line">            <span class="keyword">int</span> x = find(t);</span><br><span class="line">            <span class="keyword">int</span> y = find(t2);</span><br><span class="line">           <span class="comment">// cout&lt;&lt;"find "&lt;&lt;x&lt;&lt;" "&lt;&lt;y&lt;&lt;endl;</span></span><br><span class="line">            x != y ? <span class="built_in">printf</span>(<span class="string">"FAIL\n"</span>):<span class="built_in">printf</span>(<span class="string">"SUCCESS\n"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态规划之背包问题"><a href="#动态规划之背包问题" class="headerlink" title="动态规划之背包问题"></a>动态规划之背包问题</h2><h3 id="01背包问题"><a href="#01背包问题" class="headerlink" title="01背包问题"></a>01背包问题</h3><h4 id="例题-nyoj-289"><a href="#例题-nyoj-289" class="headerlink" title="例题 nyoj 289"></a>例题 nyoj 289</h4><p><img src="/2018/08/05/algorithm/poj/nyoj289.png" alt="nyoj289"></p><h4 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h4><pre><code>标准01背包问题 </code></pre><h4 id="代码-1"><a href="#代码-1" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10050</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> dp[N];</span><br><span class="line">    <span class="keyword">int</span> c, n;</span><br><span class="line">    <span class="keyword">int</span> v[N],w[N];<span class="comment">//values.weight</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;c),n || c)&#123;</span><br><span class="line">        <span class="built_in">memset</span>(dp,<span class="number">0</span>,<span class="keyword">sizeof</span>(dp));</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ;i ++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;w[i],&amp;v[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//dp</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ;i &lt; n ;i ++)&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = c ;j &gt;= w[i] ;j -- )&#123;</span><br><span class="line">                dp[j] = max(dp[j - w[i]] + v[i],dp[j]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,dp[c]);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="完全背包"><a href="#完全背包" class="headerlink" title="完全背包"></a>完全背包</h3><h4 id="例题"><a href="#例题" class="headerlink" title="例题"></a>例题</h4><p><img src="/2018/08/05/algorithm/poj/nyoj311.png" alt="nyoj311"></p><h3 id="背包空间很大，但价值很小的背包问题"><a href="#背包空间很大，但价值很小的背包问题" class="headerlink" title="背包空间很大，但价值很小的背包问题"></a>背包空间很大，但价值很小的背包问题</h3><h4 id="例题nyoj-860"><a href="#例题nyoj-860" class="headerlink" title="例题nyoj 860"></a>例题nyoj 860</h4><h2 id="贪心"><a href="#贪心" class="headerlink" title="贪心"></a>贪心</h2><h3 id="poj-3617"><a href="#poj-3617" class="headerlink" title="poj 3617"></a>poj 3617</h3><h4 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h4><p><img src="/2018/08/05/algorithm/poj/3617.png" alt="poj3617"></p><h4 id="思路-1"><a href="#思路-1" class="headerlink" title="思路"></a>思路</h4><pre><code>贪心问题</code></pre><h4 id="代码-2"><a href="#代码-2" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 2050</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">char</span> p[N];</span><br><span class="line"><span class="function"><span class="built_in">string</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> b = n - <span class="number">1</span>; <span class="comment">// head,and tail;</span></span><br><span class="line">    <span class="built_in">string</span> x;</span><br><span class="line">    <span class="keyword">while</span> (a &lt;= b)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">bool</span> left = <span class="literal">true</span>; <span class="comment">// select left side or right side</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i + a &lt; b; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p[a + i] &lt; p[b - i])&#123;</span><br><span class="line">                left = <span class="literal">true</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> <span class="keyword">if</span>(p[a + i] &gt; p[b - i])&#123;</span><br><span class="line">                left = <span class="literal">false</span>;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(left)&#123;</span><br><span class="line">         </span><br><span class="line">            x += p[a++];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            x += p[b--];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>, &amp;n);</span><br><span class="line">    getchar();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;p[i]);</span><br><span class="line">        getchar();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">string</span> ans  = solve();</span><br><span class="line">    <span class="keyword">int</span> len = ans.length();</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; len;  i ++)&#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%c"</span>,ans[i]);</span><br><span class="line">        <span class="keyword">if</span>( (i + <span class="number">1</span>) % <span class="number">80</span> == <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">        &#125;     </span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h2><h3 id="poj-1852"><a href="#poj-1852" class="headerlink" title="poj 1852"></a>poj 1852</h3><p>#<a href="algorithm/poj/1852.png">poj1852</a></p><h4 id="思路-2"><a href="#思路-2" class="headerlink" title="思路"></a>思路</h4><pre><code>两只蚂蚁碰头掉头等价于两只蚂蚁按都按原方向继续走</code></pre><h4 id="代码-3"><a href="#代码-3" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> T;</span><br><span class="line">    <span class="keyword">int</span> n ,m;</span><br><span class="line">    <span class="keyword">int</span> tmp;</span><br><span class="line">    <span class="keyword">int</span> mins = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> maxs = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line">    <span class="keyword">while</span>(T --)&#123;</span><br><span class="line">        mins = <span class="number">0</span>; maxs = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;n,&amp;m);</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; m ;i ++ )&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tmp);    </span><br><span class="line">            mins = max(mins,min(tmp,n-tmp));</span><br><span class="line">           <span class="comment">// printf("--&gt; %d %d\n",tmp,n-tmp);</span></span><br><span class="line">            maxs = max(maxs,max(tmp,n-tmp));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d %d\n"</span>,mins,maxs);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>    ;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="poj-2386"><a href="#poj-2386" class="headerlink" title="poj 2386"></a>poj 2386</h3><p><img src="/2018/08/05/algorithm/poj/2386.png" alt="poj2386"></p><h4 id="思路-3"><a href="#思路-3" class="headerlink" title="思路"></a>思路</h4><pre><code>搜索问题</code></pre><h4 id="代码-4"><a href="#代码-4" class="headerlink" title="代码"></a>代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DFS</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 150</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> n, m;</span><br><span class="line"><span class="keyword">int</span> p[N][N];</span><br><span class="line"><span class="keyword">int</span> dx[<span class="number">8</span>] = &#123;<span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> dy[<span class="number">8</span>] = &#123;<span class="number">-1</span>, <span class="number">-1</span>, <span class="number">-1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">1</span>, <span class="number">1</span>&#125;;</span><br><span class="line"><span class="comment">//bool visit[N][N];</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">dfs</span><span class="params">(<span class="keyword">int</span> x, <span class="keyword">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (x &lt; <span class="number">0</span> || x &gt;= n || y &lt; <span class="number">0</span> || y &gt;= m)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (p[x][y] == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// printf("%d %d\n",x,y);</span></span><br><span class="line">    p[x][y] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">8</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (p[x + dx[i]][y + dy[i]] == <span class="number">1</span> )</span><br><span class="line">            dfs(x + dx[i], y + dy[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">char</span> tmp;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d %d\n"</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%c"</span>, &amp;tmp);</span><br><span class="line">            <span class="keyword">if</span> (tmp != <span class="string">'\n'</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="comment">//printf("%c",tmp);</span></span><br><span class="line">                <span class="keyword">if</span> (tmp == <span class="string">'W'</span>)</span><br><span class="line">                &#123;</span><br><span class="line">                    p[i][j] = <span class="number">1</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                &#123;</span><br><span class="line">                    p[i][j] = <span class="number">2</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (p[i][j] == <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                dfs(i, j);</span><br><span class="line">                cnt++;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">"%d\n"</span>, cnt);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="利用优先队列解题"><a href="#利用优先队列解题" class="headerlink" title="利用优先队列解题"></a>利用优先队列解题</h2><h3 id="题目-1"><a href="#题目-1" class="headerlink" title="题目"></a>题目</h3><p><img src="/2018/08/05/algorithm/poj/poj2431.png" alt="poj2431"></p><h3 id="思路，题意为用最少加油次数跑到终点。可以等价与在当前加油站可以加之前经过加油站打油。"><a href="#思路，题意为用最少加油次数跑到终点。可以等价与在当前加油站可以加之前经过加油站打油。" class="headerlink" title="思路，题意为用最少加油次数跑到终点。可以等价与在当前加油站可以加之前经过加油站打油。"></a>思路，题意为用最少加油次数跑到终点。可以等价与在当前加油站可以加之前经过加油站打油。</h3><p>即可以用有优先队列存储加油站中的油，并切每次取最大，可保证总次数最少。</p><h3 id="代码-5"><a href="#代码-5" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100050</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> dis,fuel;</span><br><span class="line">&#125;p[N];</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> node&amp; f,<span class="keyword">const</span> node&amp; s)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> f.dis &lt; s.dis;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt;station;</span><br><span class="line">    <span class="keyword">int</span> n ;</span><br><span class="line">    <span class="keyword">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n);</span><br><span class="line">    <span class="keyword">int</span> dis,fuel;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ; i &lt;= n ;i ++)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;p[i].dis,&amp;p[i].fuel);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">"%d%d"</span>,&amp;dis,&amp;fuel);</span><br><span class="line"><span class="keyword">int</span> pos = dis;</span><br><span class="line">p[<span class="number">0</span>].dis = p[<span class="number">0</span>].fuel = <span class="number">0</span>;</span><br><span class="line">p[n+<span class="number">1</span>].dis = dis; p[n+<span class="number">1</span>].fuel = <span class="number">0</span>;</span><br><span class="line">sort(p,p + n + <span class="number">2</span> ,cmp); </span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = n +<span class="number">1</span>  ; i &gt;= <span class="number">0</span> ;i --)&#123;</span><br><span class="line">        <span class="keyword">int</span> d = pos - p[i].dis;</span><br><span class="line">        <span class="keyword">while</span>(fuel - d &lt; <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(station.empty())&#123;</span><br><span class="line">                <span class="built_in">cout</span>&lt;&lt;<span class="string">"-1"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            fuel += station.top();</span><br><span class="line">            station.pop();</span><br><span class="line">            ans ++;</span><br><span class="line">        &#125;</span><br><span class="line">        station.push(p[i].fuel);</span><br><span class="line"> fuel -= d;</span><br><span class="line">pos = p[i].dis;</span><br><span class="line"> </span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;ans&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="2018-暑期培训"><a href="#2018-暑期培训" class="headerlink" title="2018 暑期培训"></a>2018 暑期培训</h1><h2 id="带权的时间安排问题"><a href="#带权的时间安排问题" class="headerlink" title="带权的时间安排问题"></a>带权的时间安排问题</h2><pre><code>后期遇到补齐</code></pre><h2 id="拓扑排序"><a href="#拓扑排序" class="headerlink" title="拓扑排序"></a>拓扑排序</h2><pre><code>引用维基百科的定义：在图论中，由一个有向无环图的顶点组成的序列，当且仅当满足下列条件时，称为该图的一个拓扑排序（英语：Topological sorting）。（1）每个顶点出现且只出现一次；（2）若A在序列中排在B的前面，则在图中不存在从B到A的路径。也可以定义为：    拓扑排序是对有向无环图的顶点的一种排序，它使得如果存在一条从顶点A到顶点B的路径，那么在排序中B出现在A的后面。可以理解为工程的完成先后或者一些课程的先修课程</code></pre><h3 id="拓扑排序算法过程"><a href="#拓扑排序算法过程" class="headerlink" title="拓扑排序算法过程"></a>拓扑排序算法过程</h3><pre><code>1.检查无环图中所有点的入度，将入度为0的顶点保存2.将第一步求出来的顶点的所有相邻顶点的入度减一，相当于将此点删除,3.重复检查无环图钟的入度4若得到的结果集的顶点数小于图的顶点数，则说明图中有环(有环必然存在有顶点的度始终不为0)</code></pre><h3 id="拓扑排序例题"><a href="#拓扑排序例题" class="headerlink" title="拓扑排序例题"></a>拓扑排序例题</h3><h4 id="poj1094"><a href="#poj1094" class="headerlink" title="poj1094"></a>poj1094</h4><p><img src="/2018/08/05/algorithm/poj1094.png" alt="poj1094"></p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="symbol">Sample</span> Input</span><br><span class="line"><span class="number">4</span> <span class="number">6</span></span><br><span class="line">A&lt;<span class="keyword">B</span></span><br><span class="line"><span class="keyword">A&lt;C</span></span><br><span class="line"><span class="keyword">B&lt;C</span></span><br><span class="line"><span class="keyword">C&lt;D</span></span><br><span class="line"><span class="keyword">B&lt;D</span></span><br><span class="line"><span class="keyword">A&lt;B</span></span><br><span class="line"><span class="keyword">3 </span><span class="number">2</span></span><br><span class="line">A&lt;<span class="keyword">B</span></span><br><span class="line"><span class="keyword">B&lt;A</span></span><br><span class="line"><span class="keyword">26 </span><span class="number">1</span></span><br><span class="line">A&lt;Z</span><br><span class="line"><span class="number">0</span> <span class="number">0</span></span><br><span class="line"><span class="symbol">Sample</span> Output</span><br><span class="line"></span><br><span class="line"><span class="symbol">Sorted</span> sequence determined after <span class="number">4</span> relations: ABCD.</span><br><span class="line"><span class="symbol">Inconsistency</span> found after <span class="number">2</span> relations.</span><br><span class="line"><span class="symbol">Sorted</span> sequence cannot <span class="keyword">be </span>determined.</span><br></pre></td></tr></table></figure><h4 id="poj1094-代码"><a href="#poj1094-代码" class="headerlink" title="poj1094 代码"></a>poj1094 代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 30</span></span><br><span class="line"><span class="keyword">int</span> <span class="built_in">map</span>[N][N];</span><br><span class="line"><span class="keyword">int</span> indexs[N];</span><br><span class="line"><span class="keyword">int</span> vex ,arc;</span><br><span class="line"><span class="keyword">int</span> queues[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(indexs,<span class="number">0</span>,<span class="keyword">sizeof</span>(indexs));</span><br><span class="line"><span class="built_in">memset</span>(<span class="built_in">map</span>,<span class="number">0</span>,<span class="keyword">sizeof</span>(<span class="built_in">map</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">getindexs</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; vex ;i ++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; vex ;j ++)&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>[j][i] == <span class="number">1</span>)&#123;</span><br><span class="line">indexs[i]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">toposort</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag = <span class="number">1</span>;</span><br><span class="line">getindexs();</span><br><span class="line"><span class="keyword">int</span> rear = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; vex ;i ++)&#123;</span><br><span class="line"><span class="keyword">int</span> mm = <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">int</span> loc = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; vex ;j ++)&#123;</span><br><span class="line"><span class="keyword">if</span>(indexs[j] == <span class="number">0</span>)&#123;</span><br><span class="line">mm++;</span><br><span class="line">loc = j;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(mm== <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span>  <span class="number">0</span>;<span class="comment">//有环 </span></span><br><span class="line"><span class="keyword">if</span>(mm &gt; <span class="number">1</span>)</span><br><span class="line">flag = <span class="number">-1</span>;<span class="comment">//无法判别 </span></span><br><span class="line"><span class="keyword">if</span>(loc != <span class="number">-1</span>)&#123;</span><br><span class="line">indexs[loc] = <span class="number">-1</span>;</span><br><span class="line">queues[rear++] =  loc;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ; j &lt; vex ;j ++ )&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">map</span>[loc][j]==<span class="number">1</span>)&#123;</span><br><span class="line">indexs[j]--;</span><br><span class="line">&#125;</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  flag;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">char</span> head,tail;</span><br><span class="line"><span class="keyword">int</span> flag ;</span><br><span class="line"><span class="keyword">bool</span> fs = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">char</span> swa ;</span><br><span class="line"><span class="keyword">bool</span> flags = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">//freopen("in.txt","r",stdin);</span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d %d"</span>,&amp;vex,&amp;arc),vex || arc)&#123;</span><br><span class="line">flags = <span class="literal">false</span>;</span><br><span class="line">getchar();</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; arc ; i++)&#123;</span><br><span class="line"><span class="built_in">memset</span>(indexs,<span class="number">0</span>,<span class="keyword">sizeof</span>(indexs));</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c%c%c%c"</span>,&amp;head,&amp;swa,&amp;tail,&amp;swa);</span><br><span class="line"><span class="built_in">map</span>[head-<span class="string">'A'</span>][tail-<span class="string">'A'</span>] = <span class="number">1</span>;</span><br><span class="line"> flag = toposort();</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">0</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Inconsistency found after %d relations.\n"</span>,i+<span class="number">1</span>);</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">for</span>(;i&lt;arc;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c%c%c%c"</span>,&amp;head,&amp;swa,&amp;tail,&amp;swa);</span><br><span class="line">flags = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(flag == <span class="number">1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Sorted sequence determined after %d relations: "</span>,i+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;vex;j++)</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">"%c"</span>,queues[j]+<span class="string">'A'</span>);</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">".\n"</span>);;</span><br><span class="line">i++;</span><br><span class="line"><span class="keyword">for</span>(;i&lt;arc;i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%c%c%c%c"</span>,&amp;head,&amp;swa,&amp;tail,&amp;swa);</span><br><span class="line">flags = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flags)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Sorted sequence cannot be determined.\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="最小生成树"><a href="#最小生成树" class="headerlink" title="最小生成树"></a>最小生成树</h2><h3 id="最小生成树概念"><a href="#最小生成树概念" class="headerlink" title="最小生成树概念"></a>最小生成树概念</h3><pre><code>一个有 n 个结点的连通图的生成树是原图的极小连通子图，且包含原图中的所有 n 个结点，并且有保持图连通的最少的边</code></pre><h3 id="例题-1"><a href="#例题-1" class="headerlink" title="例题"></a>例题</h3><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">题目描述</span><br><span class="line">随着如今社会的不断变化，交通问题也变得越来越重要，所以市长决定建设一些公路来方便各个城市之间的贸易和交易。</span><br><span class="line">虽然市长的想法很好，但是他也遇到了一般人也经常头疼的问题，那就是手头的经费有限……</span><br><span class="line">在规划过程中，设计师们已经预算出部分城市之间建设公路的经费需求。</span><br><span class="line">现在市长想知道，它能不能将他的m个城市在有限的经费内实现公路交通。</span><br><span class="line">如果可以的话，输出Yes，否则输出No（两个城市不一定要直接的公路相连，间接公路到达也可以。）</span><br><span class="line">输入描述:</span><br><span class="line"></span><br><span class="line">测试输入包含多条测试数据</span><br><span class="line">每个测试数据的第1行分别给出可用的经费c(&lt;1000000)，道路数目n(n&lt;10000)，以及城市数目m(&lt;100)。</span><br><span class="line">接下来的n行给出建立公路的成本信息，每行给出三个整数，分别是相连的两个城市v1、v2(0&lt;v1,v2&lt;=m)以及</span><br><span class="line">建设公路所需的成本h(h&lt;100)。</span><br><span class="line">输出描述:</span><br><span class="line"></span><br><span class="line">对每个测试用例，输出Yes或No。</span><br><span class="line">示例1</span><br><span class="line">输入</span><br><span class="line"></span><br><span class="line">20<span class="number"> 10 </span>5</span><br><span class="line">1<span class="number"> 2 </span>6</span><br><span class="line">1<span class="number"> 3 </span>3</span><br><span class="line">1<span class="number"> 4 </span>4</span><br><span class="line">1<span class="number"> 5 </span>5</span><br><span class="line">2<span class="number"> 3 </span>7</span><br><span class="line">2<span class="number"> 4 </span>7</span><br><span class="line">2<span class="number"> 5 </span>8</span><br><span class="line">3<span class="number"> 4 </span>6</span><br><span class="line">3<span class="number"> 5 </span>9</span><br><span class="line">4<span class="number"> 5 </span>2</span><br><span class="line">输出</span><br><span class="line"></span><br><span class="line">Yes</span><br><span class="line">示例2</span><br><span class="line">输入</span><br><span class="line"></span><br><span class="line">10<span class="number"> 2 </span>2</span><br><span class="line">1<span class="number"> 2 </span>5</span><br><span class="line">1<span class="number"> 2 </span>15</span><br><span class="line">输出</span><br><span class="line"></span><br><span class="line">Yes</span><br></pre></td></tr></table></figure><h3 id="prim-解法"><a href="#prim-解法" class="headerlink" title="prim 解法"></a>prim 解法</h3><h4 id="prim算法的思想"><a href="#prim算法的思想" class="headerlink" title="prim算法的思想"></a>prim算法的思想</h4><pre><code>1.从图中的一个起点a开始，把a加入U集合2.寻找从与a有关联的边中权重最小的那条边并且该边的终点b在顶点集合：（V-U）中，把b加入到集合U中，3.然后，我们寻找与a关联和b关联的边中，权重最小的那条边并且该边的终点在集合：（V-U）中，重复操作</code></pre><h4 id="prim-解法代码"><a href="#prim-解法代码" class="headerlink" title="prim 解法代码"></a>prim 解法代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这个人懒得写代码</span><br></pre></td></tr></table></figure><h4 id="Kruskal-解法"><a href="#Kruskal-解法" class="headerlink" title="Kruskal 解法"></a>Kruskal 解法</h4><h4 id="Kruskal算法思想"><a href="#Kruskal算法思想" class="headerlink" title="Kruskal算法思想"></a>Kruskal算法思想</h4><pre><code>1.先构造一个只含 n 个顶点、而边集为空的子图，把子图中各个顶点看成各棵树上的根结点，2.从网的边集 E 中选取一条权值最小的边，若该条边的两个顶点分属不同的树，则将其加入子图，反之，若该条边的两个顶点已落在同一棵树上，则不可取，3.应该取下一条权值最小的边再试之。依次类推，直到森林中只有一棵树，也即子图中含有 n-1 条边为止。</code></pre><h4 id="Kruskal-解法代码"><a href="#Kruskal-解法代码" class="headerlink" title="Kruskal 解法代码"></a>Kruskal 解法代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Kruskal</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10050</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">int</span> father[N];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> u,v,weight;</span><br><span class="line">&#125;p[N];</span><br><span class="line"><span class="keyword">int</span> c,vex,arc;</span><br><span class="line"><span class="keyword">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> head,<span class="keyword">int</span> tail,<span class="keyword">int</span> weight)</span></span>&#123;</span><br><span class="line">p[top].u = head;</span><br><span class="line">p[top].v = tail;</span><br><span class="line">p[top++].weight = weight;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">cmp</span><span class="params">(<span class="keyword">const</span> node &amp; x,<span class="keyword">const</span> node &amp; y)</span></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x.weight &lt; y.weight;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">finds</span><span class="params">(<span class="keyword">int</span> x)</span></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(father[x] == x)</span><br><span class="line"><span class="keyword">return</span> x;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> father[x] = finds(father[x]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">kruskal</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans =  <span class="number">0</span> ;</span><br><span class="line"><span class="keyword">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">sort(p,p + top ,cmp);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; top ;i ++ )&#123;</span><br><span class="line"><span class="keyword">int</span> x = finds(p[i].u);</span><br><span class="line"><span class="keyword">int</span> y = finds(p[i].v);</span><br><span class="line"><span class="keyword">if</span>(x != y)&#123;</span><br><span class="line">father[x] = y;</span><br><span class="line">ans += p[i].weight;</span><br><span class="line">cnt ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt == vex <span class="number">-1</span>)</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt &lt; vex <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ;i &lt; N ;i ++)&#123;</span><br><span class="line">father[i] = i;</span><br><span class="line">&#125;</span><br><span class="line">top = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="comment">//freopen("3.in","r",stdin);</span></span><br><span class="line"><span class="keyword">int</span> head,tail,weight;</span><br><span class="line"><span class="keyword">while</span>(~<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;c,&amp;arc,&amp;vex))&#123;</span><br><span class="line">init();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; arc ; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;head,&amp;tail,&amp;weight);</span><br><span class="line">addedge(head,tail,weight);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">int</span> flag = kruskal();</span><br><span class="line"><span class="keyword">if</span>(flag == <span class="number">-1</span> || c &lt; flag)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"No\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"Yes\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="BFS"><a href="#BFS" class="headerlink" title="BFS"></a>BFS</h2><pre><code>DescriptionYou are trapped in a 3D dungeon and need to find the quickest way out! The dungeon is composed of unit cubes which may or may not be filled with rock. It takes one minute to move one unit north, south, east, west, up or down. You cannot move diagonally and the maze is surrounded by solid rock on all sides.Is an escape possible? If yes, how long will it take?InputThe input consists of a number of dungeons. Each dungeon description starts with a line containing three integers L, R and C (all limited to 30 in size).L is the number of levels making up the dungeon.R and C are the number of rows and columns making up the plan of each level.Then there will follow L blocks of R lines each containing C characters. Each character describes one cell of the dungeon. A cell full of rock is indicated by a &apos;#&apos; and empty cells are represented by a &apos;.&apos;. Your starting position is indicated by &apos;S&apos; and the exit by the letter &apos;E&apos;. There&apos;s a single blank line after each level. Input is terminated by three zeroes for L, R and C.OutputEach maze generates one line of output. If it is possible to reach the exit, print a line of the form    Escaped in x minute(s). where x is replaced by the shortest time it takes to escape.If it is not possible to escape, print the line    Trapped! Sample Input3 4 5S.....###..##..###.#############.####...###########.#######E1 3 3S###E####0 0 0Sample OutputEscaped in 11 minute(s).Trapped!</code></pre><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;queue&gt;</span><br><span class="line">#include &lt;vector&gt;</span><br><span class="line">#include &lt;set&gt;</span><br><span class="line">#define N 35</span><br><span class="line">using namespace std;</span><br><span class="line">int map[N][N][N];</span><br><span class="line"></span><br><span class="line">struct point&#123;</span><br><span class="line">int x, y, z,level;</span><br><span class="line"><span class="attribute">point()&#123;</span></span><br><span class="line">&#125; </span><br><span class="line">point(int xx, int yy,  int  zz , int levellevl)&#123;</span><br><span class="line">x =xx; y =yy ; z = zz; level = levellevl;</span><br><span class="line">&#125;</span><br><span class="line">void operator = (point&amp; other)&#123;</span><br><span class="line">x = other.x;</span><br><span class="line">y = other.y;</span><br><span class="line">z = other.z;</span><br><span class="line">level = other.level;</span><br><span class="line">&#125;</span><br><span class="line">bool operator == (point&amp; other)&#123;</span><br><span class="line">return x == other.x &amp;&amp; y == other.y &amp;&amp; z == other.z;</span><br><span class="line">&#125;</span><br><span class="line">&#125;start,end;</span><br><span class="line">int l,r,c;</span><br><span class="line">int dx[] = &#123;1,0,0,-1,0,0&#125;;</span><br><span class="line">int dy[] = &#123;0,1,0,0,-1,0&#125;;</span><br><span class="line">int dz[] = &#123;0,0,1,0,0,-1&#125;; </span><br><span class="line"><span class="attribute">set&lt;int&gt;visit;</span></span><br><span class="line">int bfs(point s, point e)&#123;</span><br><span class="line"><span class="attribute">queue&lt;point&gt;q;</span></span><br><span class="line">q.push(s);</span><br><span class="line"><span class="attribute">while(!q.empty())&#123;</span></span><br><span class="line">point front  = q.front();</span><br><span class="line">q.pop(); </span><br><span class="line">if(front == e)&#123;</span><br><span class="line">return front.level;</span><br><span class="line">&#125;</span><br><span class="line">for(int i = 0 ; i &lt; 6 ;i ++ )&#123;</span><br><span class="line">if( (front.x + dx[i] &lt; l &amp;&amp; front.x + dx[i] &gt;= 0 ) &amp;&amp;</span><br><span class="line">(front.y + dy[i] &lt; r &amp;&amp; front.y + dy[i] &gt;= 0) &amp;&amp;</span><br><span class="line">(front.z + dz[i] &lt; c &amp;&amp; front.z + dz[i] &gt;= 0) &amp;&amp; </span><br><span class="line"> map[front.x + dx[i]][front.y + dy[i]][front.z + dz[i]] )&#123;</span><br><span class="line"> //printf("-&gt;&gt; %d",visit.find((front.x +dx[i])* 10000 + (front.y + dy[i])  * 100 + front.z + dz[i]) == visit.end()) ;</span><br><span class="line">if(visit.find(( (front.x +dx[i])* 10000 + (front.y + dy[i])  * 100 + front.z + dz[i])) == visit.end())&#123;</span><br><span class="line">q.push(point(front.x + dx[i],front.y + dy[i],front.z + dz[i],front.level +1));</span><br><span class="line">visit.insert( (front.x +dx[i]) * 10000 + (front.y + dy[i])  * 100 + front.z + dz[i] );</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return -1;</span><br><span class="line">&#125;</span><br><span class="line">int deal(char tmp)&#123;</span><br><span class="line">switch (tmp)&#123;</span><br><span class="line">case '#': return 0;</span><br><span class="line">case '.': </span><br><span class="line">case 'S':</span><br><span class="line">case 'E': return 1;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void print()&#123;</span><br><span class="line">for(int i = 0 ; i &lt; l ;i ++)&#123;</span><br><span class="line">for(int j = 0 ; j &lt; r ;j ++)&#123;</span><br><span class="line">for( int z = 0 ; z &lt; c ; z ++)&#123;</span><br><span class="line">printf("%d ",map[i][j][z]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">printf("\n");</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">void init()&#123;</span><br><span class="line"><span class="attribute">memset(map,0,sizeof(map));</span></span><br><span class="line">visit.clear();</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">char tmp;</span><br><span class="line">while(scanf("%d%d%d",&amp;l,&amp;r,&amp;c) , ( l  || r  || c  ))&#123;</span><br><span class="line"><span class="attribute">init();</span></span><br><span class="line">for(int i = 0 ; i &lt; l ;i ++)&#123;</span><br><span class="line">for(int j = 0 ; j &lt; r ;j ++)&#123;</span><br><span class="line">for( int z = 0 ; z &lt; c ; z ++)&#123;</span><br><span class="line">scanf("%c",&amp;tmp);</span><br><span class="line">if(tmp == ' ' || tmp == '\n')&#123;</span><br><span class="line"><span class="attribute">z--;</span></span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">map[i][j][z] = deal(tmp);</span><br><span class="line">if(tmp == 'S')&#123;</span><br><span class="line">start.x = i; start.y = j; start.z = z;</span><br><span class="line">&#125;</span><br><span class="line">if(tmp == 'E')&#123;</span><br><span class="line">end.x = i; end.y = j; end.z = z ;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//cout&lt;&lt;bfs(start,end)&lt;&lt;endl;</span><br><span class="line">int ans = bfs(start,end);</span><br><span class="line">if(ans == -1)&#123;</span><br><span class="line"><span class="attribute">printf("Trapped!\n");</span></span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">printf("Escaped in %d minute(s).\n",ans);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="差分约束"><a href="#差分约束" class="headerlink" title="差分约束"></a>差分约束</h2><h3 id="差分约束基本讲解"><a href="#差分约束基本讲解" class="headerlink" title="差分约束基本讲解"></a>差分约束基本讲解</h3><p><img src="/2018/08/05/algorithm/差分约束1.png" alt="查分约束"><br><img src="/2018/08/05/algorithm/差分约束2.png" alt="查分约束"><br><img src="/2018/08/05/algorithm/差分约束3.png" alt="查分约束"></p><h3 id="例题-2"><a href="#例题-2" class="headerlink" title="例题"></a>例题</h3><pre><code>poj1201DescriptionYou are given n closed, integer intervals [ai, bi] and n integers c1, ..., cn.Write a program that:reads the number of intervals, their end points and integers c1, ..., cn from the standard input,computes the minimal size of a set Z of integers which has at least ci common elements with interval [ai, bi], for each i=1,2,...,n,writes the answer to the standard output.InputThe first line of the input contains an integer n (1 &lt;= n &lt;= 50000) -- the number of intervals. The following n lines describe the intervals. The (i+1)-th line of the input contains three integers ai, bi and ci separated by single spaces and such that 0 &lt;= ai &lt;= bi &lt;= 50000 and 1 &lt;= ci &lt;= bi - ai+1.OutputThe output contains exactly one integer equal to the minimal size of set Z sharing at least ci elements with interval [ai, bi], for each i=1,2,...,n.Sample Input53 7 38 10 36 8 11 3 110 11 1Sample Output6</code></pre><h3 id="思路-4"><a href="#思路-4" class="headerlink" title="思路"></a>思路</h3><pre><code>令xi 为[0,xi]中的个数中整数点的个数则可以依据题目列出 s[bi] - s[ai-1] &gt;= ci再根据用查分系统可以想到用spfa 求解这一组不等式注意的是题目中应该还有 1=&gt;s[bi+1]-s[bi] &gt;=0 这个约束</code></pre><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 100005</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line"><span class="keyword">int</span> next,t ,w,s;</span><br><span class="line">&#125;e[<span class="number">3</span>*N];</span><br><span class="line"><span class="keyword">int</span> n;</span><br><span class="line"><span class="keyword">int</span> dis[N];</span><br><span class="line"><span class="keyword">int</span> head[N];</span><br><span class="line"><span class="keyword">int</span> vex ,arc;</span><br><span class="line"><span class="keyword">int</span> top = <span class="number">0</span>;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> s,<span class="keyword">int</span> t,<span class="keyword">int</span> w)</span></span>&#123; <span class="comment">// 伪链表 ， 头插法 </span></span><br><span class="line">e[top].s = s; </span><br><span class="line">e[top].t = t;</span><br><span class="line">e[top].w = w;</span><br><span class="line">e[top].next = head[s];</span><br><span class="line">head[s] = top++;</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">bool</span> visit[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">(<span class="keyword">int</span> source)</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="built_in">queue</span>&lt;<span class="keyword">int</span>&gt;s; </span><br><span class="line">dis[source] = <span class="number">0</span>;</span><br><span class="line">visit[source]= <span class="literal">true</span>;</span><br><span class="line">s.push(source); </span><br><span class="line"><span class="keyword">while</span>(!s.empty())&#123;</span><br><span class="line"><span class="keyword">int</span> front  = s.front();</span><br><span class="line">visit[front] = <span class="literal">false</span>;</span><br><span class="line">s.pop();</span><br><span class="line"><span class="keyword">int</span> p = head[front];</span><br><span class="line"><span class="keyword">while</span> (p != <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(dis[e[p].t] &gt; dis[e[p].s] + e[p].w)&#123;</span><br><span class="line">dis[e[p].t] =  dis[e[p].s] + e[p].w;</span><br><span class="line"><span class="keyword">if</span>(!visit[e[p].t])&#123;</span><br><span class="line">s.push(e[p].t);</span><br><span class="line">visit[e[p].t] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p = e[p].next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> maxs,mins ; </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">top = <span class="number">0</span>;</span><br><span class="line">fill(dis,dis+N,<span class="number">1</span> &lt;&lt; <span class="number">30</span>);</span><br><span class="line"><span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line"><span class="built_in">memset</span>(visit,<span class="number">0</span>,<span class="keyword">sizeof</span>(visit));</span><br><span class="line">maxs = <span class="number">-1</span>;</span><br><span class="line">mins = <span class="number">1</span>&lt;&lt;<span class="number">30</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a , b, c;</span><br><span class="line"><span class="comment">//freopen("input.txt","r",stdin);</span></span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;n)!=EOF)&#123;</span><br><span class="line"></span><br><span class="line">init();</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; n ;i ++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;c);</span><br><span class="line">addedge(b+<span class="number">1</span>,a,-c);</span><br><span class="line">maxs = max(b+<span class="number">1</span>,maxs);</span><br><span class="line">mins = min(a,mins);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = mins;i &lt; maxs ; i++)&#123;</span><br><span class="line">addedge(i+<span class="number">1</span>,i,<span class="number">0</span>);</span><br><span class="line">addedge(i,i+<span class="number">1</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">spfa(maxs);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d\n"</span> ,-dis[mins] );</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="最短路径"><a href="#最短路径" class="headerlink" title="最短路径"></a>最短路径</h2><p><em>这里只提四种常见的算法，分别是dijkstra，Floyd，bellman_ford,spfa</em></p><h3 id="dijkstra"><a href="#dijkstra" class="headerlink" title="dijkstra"></a>dijkstra</h3><h4 id="dijkstra-策略"><a href="#dijkstra-策略" class="headerlink" title="dijkstra 策略"></a>dijkstra 策略</h4><pre><code>dijkstra 采用了一种贪心策略定义了最短路径集合，当发现一个已经是最短路径的顶点是，则将这个顶点加入到最短路径的集合中。当算法做到最短路径集合中包含全部顶点是，则算法结束</code></pre><h4 id="dijkstra-例题"><a href="#dijkstra-例题" class="headerlink" title="dijkstra 例题"></a>dijkstra 例题</h4><pre><code>后续补齐</code></pre><h4 id="dijstra-代码"><a href="#dijstra-代码" class="headerlink" title="dijstra 代码"></a>dijstra 代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同样后续补齐</span><br></pre></td></tr></table></figure><h3 id="bellman-ford"><a href="#bellman-ford" class="headerlink" title="bellman_ford"></a>bellman_ford</h3><h4 id="bellman-ford-例题"><a href="#bellman-ford-例题" class="headerlink" title="bellman_ford 例题"></a>bellman_ford 例题</h4><pre><code>后续补齐</code></pre><h4 id="bellman-ford-代码"><a href="#bellman-ford-代码" class="headerlink" title="bellman_ford 代码"></a>bellman_ford 代码</h4><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同样后续补齐</span><br></pre></td></tr></table></figure><h3 id="spfa"><a href="#spfa" class="headerlink" title="spfa"></a>spfa</h3><h4 id="spfa-策略"><a href="#spfa-策略" class="headerlink" title="spfa 策略"></a>spfa 策略</h4><pre><code>bellman_ford 的队列优化版本相比较bellman_ford 需要对每一条边进行松弛而言，spfa只需要对已知的最短路进行松弛，因此效率提高。但是，当图特别稠密时，spfa也就退化和bellman_ford 一样</code></pre><h4 id="spfa-例题"><a href="#spfa-例题" class="headerlink" title="spfa 例题"></a>spfa 例题</h4><pre><code>虽然草儿是个路痴（就是在杭电待了一年多，居然还会在校园里迷路的人，汗~),但是草儿仍然很喜欢旅行，因为在旅途中还能丰富自己的阅历，还可以看美丽的风景……所以草儿决定在要在最短的时间去一个自己想去的地方！因为草儿的家在一个小镇上，没有火车经过，所以她只能去邻近的城市坐火车Input输入数据有多组，每组的第一行是三个整数T，S和D，表示有T条路，和草儿家相邻的城市的有S个，草儿想去的地方有D个；接着有T行，每行有三个整数a，b，time,表示a,b城市之间的车程是time小时；(1=&lt;(a,b)&lt;=1000;a,b 之间可能有多条路)接着的第T+1行有S个数，表示和草儿家相连的城市；接着的第T+2行有D个数，表示草儿想去地方。Output输出草儿能去某个喜欢的城市的最短时间。Sample Input6 2 31 3 51 4 72 8 123 8 44 9 129 10 21 28 9 10Sample Output9</code></pre><h4 id="spfa-代码"><a href="#spfa-代码" class="headerlink" title="spfa 代码"></a>spfa 代码</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10050</span></span><br><span class="line"><span class="keyword">int</span> T ,S,D;</span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">edge</span>&#123;</span></span><br><span class="line">    <span class="keyword">int</span> s,t,w,next;</span><br><span class="line">&#125;e[N];</span><br><span class="line"><span class="keyword">int</span> vex,arc;</span><br><span class="line"><span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;want;</span><br><span class="line"><span class="keyword">int</span> head[N];</span><br><span class="line"><span class="keyword">int</span> top;</span><br><span class="line"><span class="keyword">int</span> dis[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">init</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(head,<span class="number">-1</span>,<span class="keyword">sizeof</span>(head));</span><br><span class="line">    top = <span class="number">0</span>;</span><br><span class="line">    fill(dis,dis + N ,<span class="number">1</span>&lt;&lt; <span class="number">30</span>);</span><br><span class="line">    want.clear();</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">addedge</span><span class="params">(<span class="keyword">int</span> a,<span class="keyword">int</span> b,<span class="keyword">int</span> weight)</span></span>&#123;</span><br><span class="line">    </span><br><span class="line">    e[top].s = a;</span><br><span class="line">    e[top].t = b;</span><br><span class="line">    e[top].w = weight;</span><br><span class="line">    e[top].next = head[a];    </span><br><span class="line">    head[a] = top++; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">bellman_ford</span><span class="params">()</span></span>&#123;</span><br><span class="line">    dis[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ; i &lt; vex ;i ++)&#123;</span><br><span class="line">        <span class="keyword">if</span>(head[i] == <span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span> ;j &lt; arc ; j ++)&#123;</span><br><span class="line">            </span><br><span class="line">                <span class="keyword">if</span>(dis[e[j].t]&gt; dis [e[j].s] + e[j].w)&#123;</span><br><span class="line">                    dis[e[j].t] = dis [e[j].s] + e[j].w;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;    </span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">bool</span> visit[N];</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">spfa</span><span class="params">()</span></span>&#123;</span><br><span class="line">    priority_queue&lt;<span class="keyword">int</span>&gt;s;</span><br><span class="line">    dis[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    s.push(<span class="number">0</span>);</span><br><span class="line">    visit[<span class="number">0</span>] = <span class="literal">true</span>;</span><br><span class="line">    <span class="keyword">while</span>(!s.empty())&#123;</span><br><span class="line">        <span class="keyword">int</span> front = s.top();</span><br><span class="line">        s.pop();</span><br><span class="line">        visit[front] = <span class="literal">false</span>; </span><br><span class="line">        <span class="keyword">int</span> p = head[front];</span><br><span class="line">        <span class="keyword">while</span>(p != <span class="number">-1</span>)&#123;</span><br><span class="line">            <span class="keyword">if</span>(dis[e[p].t]&gt; dis[e[p].s] + e[p].w)&#123;</span><br><span class="line">                dis[e[p].t] = dis[e[p].s] + e[p].w;</span><br><span class="line">                <span class="keyword">if</span>(!visit[e[p].t])</span><br><span class="line">                &#123;</span><br><span class="line">                    s.push(e[p].t);</span><br><span class="line">                    visit[e[p].t] = <span class="literal">true</span>;    </span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;</span><br><span class="line">            p = e[p].next; </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">solve</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> min = <span class="number">1</span> &lt;&lt; <span class="number">30</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="built_in">vector</span>&lt;<span class="keyword">int</span>&gt;::iterator it = want.begin() ; it != want.end() ;it ++)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(dis[(*it)] &lt; min)</span><br><span class="line">            min = dis[(*it)];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a, b , time;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;T,&amp;S,&amp;D)!=EOF)&#123;</span><br><span class="line">        init();</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ;i &lt; T ;i ++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d%d%d"</span>,&amp;a,&amp;b,&amp;time);</span><br><span class="line">            addedge(a,b,time);</span><br><span class="line">            addedge(b,a,time);</span><br><span class="line">            vex = max(vex,max(a,b));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i  = <span class="number">0</span> ; i&lt; S ; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b);</span><br><span class="line">            addedge(b,<span class="number">0</span>,<span class="number">0</span>);</span><br><span class="line">            addedge(<span class="number">0</span>,b,<span class="number">0</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span> ;i &lt; D ; i++)&#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;b);</span><br><span class="line">            want.push_back(b);</span><br><span class="line">        &#125;    </span><br><span class="line">        arc = T + S;        </span><br><span class="line">        <span class="comment">//bellman_ford();</span></span><br><span class="line">        spfa();</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%d\n"</span>,solve());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="莫比乌斯反演"><a href="#莫比乌斯反演" class="headerlink" title="莫比乌斯反演"></a>莫比乌斯反演</h2><h3 id="莫比乌斯引入"><a href="#莫比乌斯引入" class="headerlink" title="莫比乌斯引入"></a>莫比乌斯引入</h3><pre><code>先看一个函数     $$\sum_{i=0}^{n}$  \prod_\epsilon$$</code></pre><hr><h2 id="高斯消元"><a href="#高斯消元" class="headerlink" title="高斯消元"></a>高斯消元</h2><h3 id="高斯消元方法和主元的处理"><a href="#高斯消元方法和主元的处理" class="headerlink" title="高斯消元方法和主元的处理"></a>高斯消元方法和主元的处理</h3><p><em>高斯消元法，是线性代数中的一个算法，可用来求解线性方程组，并可以求出矩阵的秩，以及求出可逆方阵的逆矩阵</em><br><em>高斯消元法的原理是</em>：若用初等行变换将增广矩阵 化为 ，则AX = B与CX = D是同解方程组<br>高斯消元的注意事项：</p><ol><li>主元的处理：<br><em>因为在计算机中有效数字有限，这会导致计算机计算的结果出现比较大的偏差，下面看一个例子</em></li></ol><pre><code>0.0001x1+x2=1x1+x2=2解为x1=10000/9999, x2=9998/9999但是高斯消元会出现 （1-10000)x2=2-10000因为有效数字有限，计算机的浮点减法处理时可能把1及2弄没了，于是 得到0.0001x1+x2=1-10000x2=-10000,解为x2=1,x1=0, 显然不对。为了避免这个问题，应交换方程的位置，使得主元在这一列中最大X1 +x2=20.0001x1+x2=1但是高斯消元会出现 （1-0.0001)x2=1-0.0002计算机的浮点减法处理时也可能把0.0001及0.0002弄没了，于是 得到x1+x2=2x2=1,解为x2=1,x1=1,为了避免精度问题，我们可以在写程序的时候可以将当前行与主元绝对值最大的行交换，既不影响结果，也避免了精度问题</code></pre><p><img src="/2018/08/05/algorithm/Guass.png" alt="高斯消元"></p><h3 id="高斯消元例题"><a href="#高斯消元例题" class="headerlink" title="高斯消元例题"></a>高斯消元例题</h3><pre><code>题目大意：有 N 盏灯，M 个开关，每个开关可以控制多盏灯，每盏灯可以被多盏开关控制。开始每盏灯都是开闭状态，给定每盏灯的最终状态，问有多少种方案可以到达。</code></pre><h3 id="思路提示"><a href="#思路提示" class="headerlink" title="思路提示"></a>思路提示</h3><pre><code>1、因为有n盏灯，m个开关，对于每一盏灯可以列一个等式。对每一个开关可以看做一个变量。在列出这些之后可以得到一个增广矩阵。得到增广矩阵之后我们就很自然的得到解的情况，即无解，和有解的情况，由线性代数的知识可以得到     自由变量 = 变量的个数 – 秩(有解情况下系数矩阵的秩 = 增广矩阵的秩)又因为灯只有两种情况 ， 所以方案数 =  2^自由变量的个数</code></pre><h3 id="代码-6"><a href="#代码-6" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 55</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> ll;</span><br><span class="line"><span class="keyword">bool</span> maxtrix[N][N], copymaxtrix[N][N];</span><br><span class="line">ll n , m ; <span class="comment">// 矩阵的行数，和列数 </span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">print</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"---------------------Debug----------------"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ;i &lt;=n ; i ++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ;j &lt;= m+<span class="number">1</span>;j ++)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%d "</span>,copymaxtrix[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"\n"</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">cout</span>&lt;&lt;<span class="string">"---------------------end Debug----------------"</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">Gauss</span><span class="params">()</span></span>&#123;</span><br><span class="line">ll r = <span class="number">0</span>; <span class="comment">// r 为矩阵的秩 </span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span>; i &lt;= m ;i ++)&#123; <span class="comment">// 从第一列开始，处理主元 </span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = r+<span class="number">1</span> ;j &lt;= n; j++ ) &#123;</span><br><span class="line"><span class="keyword">if</span>(copymaxtrix[j][i])&#123; <span class="comment">// 找到这一列中，不为 0 的数，将此行与当前行替换 </span></span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">int</span> k = <span class="number">1</span> ;k &lt;= m+<span class="number">1</span> ;k ++ )&#123;</span><br><span class="line">swap(copymaxtrix[r+<span class="number">1</span>][k],copymaxtrix[j][k]);</span><br><span class="line">&#125; </span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//print();</span></span><br><span class="line"><span class="keyword">if</span>(!copymaxtrix[r+<span class="number">1</span>][i])&#123;</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span>; j &lt;= n ;j ++ )&#123;</span><br><span class="line"><span class="keyword">if</span>(r+<span class="number">1</span> != j &amp;&amp; copymaxtrix[j][i])&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> k = i; k &lt;= m +<span class="number">1</span> ;k ++ )&#123;</span><br><span class="line">copymaxtrix[j][k] ^= copymaxtrix[r+<span class="number">1</span>][k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">r++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//print();</span></span><br><span class="line"><span class="comment">//cout&lt;&lt;"Debug -&gt; "&lt;&lt;r&lt;&lt;endl;</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = r + <span class="number">1</span> ;i &lt;= n ;i ++ )&#123;</span><br><span class="line"><span class="keyword">if</span>(copymaxtrix[i][m+<span class="number">1</span>])</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span>  m - r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">int</span> T;</span><br><span class="line"><span class="keyword">int</span> tmpsum, index;</span><br><span class="line"><span class="keyword">int</span> query;</span><br><span class="line"><span class="comment">//freopen("./input.txt","r",stdin);</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;T);</span><br><span class="line"><span class="keyword">for</span>( <span class="keyword">int</span> cas = <span class="number">1</span>; cas &lt;= T ;cas ++ )&#123;</span><br><span class="line"><span class="built_in">scanf</span>( <span class="string">"%d%d"</span> , &amp;n ,&amp;m);</span><br><span class="line"><span class="built_in">memset</span>( maxtrix,<span class="number">0</span>,<span class="keyword">sizeof</span>(maxtrix));</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i= <span class="number">1</span> ;i &lt;= m ; i++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tmpsum);</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= tmpsum ;j ++ )&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;index);</span><br><span class="line">maxtrix[index][i] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>( <span class="string">"Case %d:\n"</span>,cas);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;query);</span><br><span class="line"><span class="keyword">while</span>( query -- )&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">1</span> ;i &lt;= n ;i ++)&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">1</span> ; j &lt;= m; j++)&#123;</span><br><span class="line">copymaxtrix[i][j] = maxtrix[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">int</span> i= <span class="number">1</span> ;i &lt;= n ;i ++)&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">"%d"</span>,&amp;tmpsum);</span><br><span class="line">copymaxtrix[i][m+<span class="number">1</span>] = tmpsum;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//print();</span></span><br><span class="line">ll ans = Gauss();</span><br><span class="line"><span class="keyword">if</span>(ans == <span class="number">-1</span>)&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"0\n"</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"%lld\n"</span>,(ll)<span class="number">1</span>&lt;&lt;ans);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="中国剩余定理"><a href="#中国剩余定理" class="headerlink" title="中国剩余定理"></a>中国剩余定理</h2><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><pre><code>今有物不知其数，三三数之剩二，五五数之剩三，七七数之剩二。问物几何？</code></pre><h4 id="互质版"><a href="#互质版" class="headerlink" title="互质版"></a>互质版</h4><h4 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h4><pre><code>假设题中所有的除数都是互质的1、x = 2 mod 3 2、x = 3 mod 53、x = 2 mod 7首先先求出 3， 5 ， 7 的最小公倍数，得105，再将 105 除以 1式中的余数，则生35.此35可以整除除了1式之外的所有式子，且不能整除1式，将 35 mod 3 得到 一个余数 .    记    4、 35 = 2 mod 3  。对比1式，如果我们4、式同时乘 1式中的余数 / 4 式中的余数。同理对其他式子进行一样的操作（注：实际代码中并不是这样作的，而是通过逆元而得到，具体见下）    则最后得到的即为结果总结一下 所以，问题解法的本质是从5和7的公倍数中找一个除以3余2的数n1，从3和7的公倍数中找一个除以5余3的数n2，从3和5的公倍数中找一个除以7余2的数n3，再将三个数相加得到解。在求n1，n2，n3时又用了一个小技巧，以n1为例，并非从5和7的公倍数中直接找一个除以3余2的数，而是先找一个除以3余1的数，再乘以2。也就是先求出5和7的公倍数模3下的逆元，再用逆元去乘余数。</code></pre><h4 id="公式（互质版）"><a href="#公式（互质版）" class="headerlink" title="公式（互质版）"></a>公式（互质版）</h4><p><img src="/2018/08/05/algorithm/中国剩余定理.jpeg" alt="中国剩余定理"></p><h4 id="非互质版"><a href="#非互质版" class="headerlink" title="非互质版"></a>非互质版</h4><pre><code>当题中的除数不是互质的时候，上述互质的方法就不满足使用的条件了。因此，我们需要通过方程合并，将方程合并成为一个方程</code></pre><h4 id="分析-1"><a href="#分析-1" class="headerlink" title="分析"></a>分析</h4><p>图片来自网络<br><img src="/2018/08/05/algorithm/CRT.png" alt="CRT"></p><h3 id="例题-3"><a href="#例题-3" class="headerlink" title="例题"></a>例题</h3><pre><code>Choose k different positive integers a1, a2, …, ak.For some non-negative m, divide it by every ai (1 ≤ i ≤ k) to find the remainder ri. If a1, a2, …, ak are properly chosen, m can be determined,then the pairs (ai, ri) can be used to express m.“It is easy to calculate the pairs from m, ” said Elina. “But how can I find m from the pairs?”Since Elina is new to programming, this problem is too difficult for her. Can you help her?</code></pre><h3 id="代码-7"><a href="#代码-7" class="headerlink" title="代码"></a>代码</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> N 10050</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="keyword">long</span> <span class="keyword">long</span> LL;</span><br><span class="line">LL k;</span><br><span class="line">LL a[N], r[N];</span><br><span class="line"><span class="function">LL <span class="title">ex_gcd</span><span class="params">(LL x, LL y, LL &amp;u, LL &amp;v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (y == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        u = <span class="number">1</span>;</span><br><span class="line">        v = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">return</span> x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        LL d = ex_gcd(y, x % y, u, v);</span><br><span class="line">        LL tmp = u;</span><br><span class="line">        u = v;</span><br><span class="line">        v = tmp - x / y * v;</span><br><span class="line">        <span class="keyword">return</span> d;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">ins</span><span class="params">(LL x, LL y)</span></span></span><br><span class="line"><span class="function"></span>&#123; <span class="comment">//get x^-1 mod y</span></span><br><span class="line">    LL u, v;</span><br><span class="line">    LL d = ex_gcd(x, y, u, v);</span><br><span class="line">    <span class="keyword">if</span> (d != <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> (u % y + y) % y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="title">ex_CRT</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL a0 = a[<span class="number">0</span>], r0 = r[<span class="number">0</span>]; <span class="comment">// init;</span></span><br><span class="line">    LL k1, k2;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; k; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        LL a1 = a[i], r1 = r[i];</span><br><span class="line">        LL d = ex_gcd(r0, r1, k1, k2);</span><br><span class="line">        LL c = a1 - a0;</span><br><span class="line">        <span class="keyword">if</span> ((c % d))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            c = ((c % r1) + r1) % r1;</span><br><span class="line">            c /= d;</span><br><span class="line">            r0 /= d;</span><br><span class="line">            r1 /= d;</span><br><span class="line">            c *= ins(r0, r1);</span><br><span class="line">            <span class="comment">//  LL t = r0 * r1 * d;</span></span><br><span class="line">            c %= r1;</span><br><span class="line">            c = (c * r0 * d);</span><br><span class="line">            c += a0;</span><br><span class="line">            r0 = r0 * r1 * d;</span><br><span class="line">            a0 = (c % r0 + r0) % r0;</span><br><span class="line">        &#125;</span><br><span class="line">       <span class="comment">// printf("%lld %lld\n", a0, r0);</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> (a0 % r0 + r0) % r0;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (~<span class="built_in">scanf</span>(<span class="string">"%lld"</span>, &amp;k))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (LL i = <span class="number">0</span>; i &lt; k; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">"%lld%lld"</span>, &amp;r[i], &amp;a[i]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">"%lld\n"</span>, ex_CRT());</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;挑战程序设计竞赛练习&quot;&gt;&lt;a href=&quot;#挑战程序设计竞赛练习&quot; class=&quot;headerlink&quot; title=&quot;挑战程序设计竞赛练习&quot;&gt;&lt;/a&gt;挑战程序设计竞赛练习&lt;/h1&gt;&lt;h2 id=&quot;并查集&quot;&gt;&lt;a href=&quot;#并查集&quot; class=&quot;header
      
    
    </summary>
    
      <category term="algorithm" scheme="http://yoursite.com/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="http://yoursite.com/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>markdown</title>
    <link href="http://yoursite.com/2018/08/05/markdown/"/>
    <id>http://yoursite.com/2018/08/05/markdown/</id>
    <published>2018-08-05T19:38:22.000Z</published>
    <updated>2018-10-31T11:01:31.031Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p><strong>马克编辑器</strong> 是一个全功能的 <code>markdown</code> 编辑器，它包含了以下特性：</p><ol><li>创建，编辑和预览 <code>markdown</code> 文档。</li><li>将你的文档同步到 <strong>Dropbox</strong>。</li><li>将你的文档通过 Email 发送给其他人。</li></ol><p>这个编辑器使用 <code>markdown</code> 语法，让你能够创造格式漂亮的文档。这个语法非常简单，和你使用纯为本几乎没什么区别。</p><h2 id="Markdown-语法"><a href="#Markdown-语法" class="headerlink" title="Markdown 语法"></a>Markdown 语法</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><hr><p>在行首输入 1－6 个 <code>#</code> 符号。符号的个数决定了标题的层级：</p><h1 id="1级标题"><a href="#1级标题" class="headerlink" title="1级标题"></a>1级标题</h1><h2 id="2级标题"><a href="#2级标题" class="headerlink" title="2级标题"></a>2级标题</h2><h3 id="3级标题"><a href="#3级标题" class="headerlink" title="3级标题"></a>3级标题</h3><h4 id="4级标题"><a href="#4级标题" class="headerlink" title="4级标题"></a>4级标题</h4><h5 id="5级标题"><a href="#5级标题" class="headerlink" title="5级标题"></a>5级标题</h5><h6 id="6级标题"><a href="#6级标题" class="headerlink" title="6级标题"></a>6级标题</h6><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><hr><p>加粗：</p><p><strong>加粗文本</strong></p><p>斜体：</p><p><em>斜体文本</em></p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><hr><p><a href="http://example.com/" target="_blank" rel="noopener">链接文本</a></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><hr><p><img src="http://lkl.mx/img/EkZYGsPBg" alt="图片标题"></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><hr><p>有序列表:</p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><p>无序列表:</p><ul><li>列表项</li><li>列表项</li><li>列表项</li></ul><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><hr><blockquote><p>Stay hungry, stay foolish.</p></blockquote><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><hr><p>行内代码：<code>foo.go()</code> .</p><p>多行代码：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let app = <span class="string">"Markdown"</span></span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(<span class="string">"Good"</span>)</span></span></span><br></pre></td></tr></table></figure></p><h3 id="缩紧代码"><a href="#缩紧代码" class="headerlink" title="缩紧代码"></a>缩紧代码</h3><hr><p>四个空格或者一个 Tab 表示缩进代码：</p><p>这是一个普通的段落。</p><pre><code>这是一个代码块</code></pre><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><hr><p>简单的表格:</p><table><thead><tr><th>标题</th><th>标题</th><th>标题</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr></tbody></table><p>你还可以添加一些边框：</p><table><thead><tr><th>标题</th><th>标题</th><th>标题</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr></tbody></table><p>你可以控制单元格的对齐方式：</p><table><thead><tr><th style="text-align:left">标题</th><th style="text-align:center">标题</th><th style="text-align:right">标题</th></tr></thead><tbody><tr><td style="text-align:left">左</td><td style="text-align:center">中</td><td style="text-align:right">右</td></tr><tr><td style="text-align:left">左</td><td style="text-align:center">中</td><td style="text-align:right">右</td></tr></tbody></table><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><hr><p><del>Strikethrough</del></p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><hr><p>三种类型的分割线:</p><hr><hr><hr><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><hr><p>一 在行尾添加两个空格或者换行符代表换行：</p><p>这行的行尾油两个空格<br>这是一个新行。    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基本使用&quot;&gt;&lt;a href=&quot;#基本使用&quot; class=&quot;headerlink&quot; title=&quot;基本使用&quot;&gt;&lt;/a&gt;基本使用&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;马克编辑器&lt;/strong&gt; 是一个全功能的 &lt;code&gt;markdown&lt;/code&gt; 编辑器，它包含了以
      
    
    </summary>
    
      <category term="categories" scheme="http://yoursite.com/categories/categories/"/>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
  </entry>
  
</feed>
