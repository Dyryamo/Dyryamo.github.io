<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>学海无涯</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-08-05T04:48:01.192Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Mr zhong</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>photoshop</title>
    <link href="http://yoursite.com/2018/08/05/photoshop/"/>
    <id>http://yoursite.com/2018/08/05/photoshop/</id>
    <published>2018-08-05T04:46:12.000Z</published>
    <updated>2018-08-05T04:48:01.192Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="categories" scheme="http://yoursite.com/categories/categories/"/>
    
    
      <category term="-photoshop" scheme="http://yoursite.com/tags/photoshop/"/>
    
  </entry>
  
  <entry>
    <title>OpenGL</title>
    <link href="http://yoursite.com/2018/08/05/OpenGL/"/>
    <id>http://yoursite.com/2018/08/05/OpenGL/</id>
    <published>2018-08-05T04:45:44.000Z</published>
    <updated>2018-08-05T04:47:15.455Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="categories" scheme="http://yoursite.com/categories/categories/"/>
    
    
      <category term="OpenGL" scheme="http://yoursite.com/tags/OpenGL/"/>
    
  </entry>
  
  <entry>
    <title>python</title>
    <link href="http://yoursite.com/2018/08/05/python/"/>
    <id>http://yoursite.com/2018/08/05/python/</id>
    <published>2018-08-05T04:45:31.000Z</published>
    <updated>2018-08-05T04:47:36.643Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="categories" scheme="http://yoursite.com/categories/categories/"/>
    
    
      <category term="python" scheme="http://yoursite.com/tags/python/"/>
    
  </entry>
  
  <entry>
    <title>linux</title>
    <link href="http://yoursite.com/2018/08/05/linux/"/>
    <id>http://yoursite.com/2018/08/05/linux/</id>
    <published>2018-08-05T04:45:23.000Z</published>
    <updated>2018-08-05T04:46:48.514Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="categories" scheme="http://yoursite.com/categories/categories/"/>
    
    
      <category term="linux" scheme="http://yoursite.com/tags/linux/"/>
    
  </entry>
  
  <entry>
    <title>algorithm</title>
    <link href="http://yoursite.com/2018/08/05/algorithm/"/>
    <id>http://yoursite.com/2018/08/05/algorithm/</id>
    <published>2018-08-05T04:44:07.000Z</published>
    <updated>2018-08-05T07:10:35.371Z</updated>
    
    <content type="html"><![CDATA[<h1 id="2018-暑期培训"><a href="#2018-暑期培训" class="headerlink" title="2018 暑期培训"></a>2018 暑期培训</h1><hr><h2 id="差分约束"><a href="#差分约束" class="headerlink" title="差分约束"></a>差分约束</h2><hr><h2 id="最短路径"><a href="#最短路径" class="headerlink" title="最短路径"></a>最短路径</h2><p><em>这里只提四种常见的算法，分别是dijstra，Floyd，bellman_ford,spfa</em></p><h3 id="dijstra"><a href="#dijstra" class="headerlink" title="dijstra"></a>dijstra</h3><pre><code>dijstra 采用了一种贪心策略，定义了最短路径集合，当发现一个已经是最短路径的顶点是，则将这个顶点加入到最短路径的集合中。当算法做到最短路径集合中包含全部顶点是，则算法结束</code></pre><hr><h2 id="莫比乌斯反演"><a href="#莫比乌斯反演" class="headerlink" title="莫比乌斯反演"></a>莫比乌斯反演</h2><hr><h2 id="高斯消元"><a href="#高斯消元" class="headerlink" title="高斯消元"></a>高斯消元</h2><h3 id="高斯消元方法和主元的处理"><a href="#高斯消元方法和主元的处理" class="headerlink" title="高斯消元方法和主元的处理"></a>高斯消元方法和主元的处理</h3><p><em>高斯消元法，是线性代数中的一个算法，可用来求解线性方程组，并可以求出矩阵的秩，以及求出可逆方阵的逆矩阵</em><br><em>高斯消元法的原理是</em>：若用初等行变换将增广矩阵 化为 ，则AX = B与CX = D是同解方程组<br>高斯消元的注意事项：</p><ol><li>主元的处理：<br><em>因为在计算机中有效数字有限，这会导致计算机计算的结果出现比较大的偏差，下面看一个例子</em></li></ol><pre><code>0.0001x1+x2=1x1+x2=2解为x1=10000/9999, x2=9998/9999但是高斯消元会出现 （1-10000)x2=2-10000因为有效数字有限，计算机的浮点减法处理时可能把1及2弄没了，于是 得到0.0001x1+x2=1-10000x2=-10000,解为x2=1,x1=0, 显然不对。为了避免这个问题，应交换方程的位置，使得主元在这一列中最大X1 +x2=20.0001x1+x2=1但是高斯消元会出现 （1-0.0001)x2=1-0.0002计算机的浮点减法处理时也可能把0.0001及0.0002弄没了，于是 得到x1+x2=2x2=1,解为x2=1,x1=1,为了避免精度问题，我们可以在写程序的时候可以将当前行与主元绝对值最大的行交换，既不影响结果，也避免了精度问题</code></pre><p><img src="/2018/08/05/algorithm/Guass.png" alt="高斯消元"></p><h3 id="高斯消元例题"><a href="#高斯消元例题" class="headerlink" title="高斯消元例题"></a>高斯消元例题</h3><pre><code>题目大意：有 N 盏灯，M 个开关，每个开关可以控制多盏灯，每盏灯可以被多盏开关控制。开始每盏灯都是开闭状态，给定每盏灯的最终状态，问有多少种方案可以到达。</code></pre><h3 id="思路提示"><a href="#思路提示" class="headerlink" title="思路提示"></a>思路提示</h3><pre><code>1、因为有n盏灯，m个开关，对于每一盏灯可以列一个等式。对每一个开关可以看做一个变量。在列出这些之后可以得到一个增广矩阵。得到增广矩阵之后我们就很自然的得到解的情况，即无解，和有解的情况，由线性代数的知识可以得到     自由变量 = 变量的个数 – 秩(有解情况下系数矩阵的秩 = 增广矩阵的秩)又因为灯只有两种情况 ， 所以方案数 =  2^自由变量的个数</code></pre><h3 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;iostream&gt;</span><br><span class="line">#include &lt;cstdio&gt;</span><br><span class="line">#include &lt;algorithm&gt;</span><br><span class="line">#include &lt;cstring&gt;</span><br><span class="line">using namespace std;</span><br><span class="line">#define N 55</span><br><span class="line">typedef long long ll;</span><br><span class="line">bool maxtrix[N][N], copymaxtrix[N][N];</span><br><span class="line">ll n , m ; // 矩阵的行数，和列数 </span><br><span class="line">void print()&#123;</span><br><span class="line">cout&lt;&lt;&quot;---------------------Debug----------------&quot;&lt;&lt;endl;</span><br><span class="line">for(int i = 1 ;i &lt;=n ; i ++)&#123;</span><br><span class="line">for(int j = 1 ;j &lt;= m+1;j ++)&#123;</span><br><span class="line">printf(&quot;%d &quot;,copymaxtrix[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;&quot;---------------------end Debug----------------&quot;&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">ll Gauss()&#123;</span><br><span class="line">ll r = 0; // r 为矩阵的秩 </span><br><span class="line">for(int i = 1; i &lt;= m ;i ++)&#123; // 从第一列开始，处理主元 </span><br><span class="line"></span><br><span class="line">for(int j = r+1 ;j &lt;= n; j++ ) &#123;</span><br><span class="line">if(copymaxtrix[j][i])&#123; // 找到这一列中，不为 0 的数，将此行与当前行替换 </span><br><span class="line">for( int k = 1 ;k &lt;= m+1 ;k ++ )&#123;</span><br><span class="line">swap(copymaxtrix[r+1][k],copymaxtrix[j][k]);</span><br><span class="line">&#125; </span><br><span class="line">break;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">//print();</span><br><span class="line">if(!copymaxtrix[r+1][i])&#123;</span><br><span class="line">continue;</span><br><span class="line">&#125;</span><br><span class="line">for(int j = 1; j &lt;= n ;j ++ )&#123;</span><br><span class="line">if(r+1 != j &amp;&amp; copymaxtrix[j][i])&#123;</span><br><span class="line">for(int k = i; k &lt;= m +1 ;k ++ )&#123;</span><br><span class="line">copymaxtrix[j][k] ^= copymaxtrix[r+1][k];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">r++;</span><br><span class="line">&#125;</span><br><span class="line">//print();</span><br><span class="line">//cout&lt;&lt;&quot;Debug -&gt; &quot;&lt;&lt;r&lt;&lt;endl;</span><br><span class="line">for(int i = r + 1 ;i &lt;= n ;i ++ )&#123;</span><br><span class="line">if(copymaxtrix[i][m+1])</span><br><span class="line">return -1;</span><br><span class="line">&#125;</span><br><span class="line">return  m - r;</span><br><span class="line">&#125;</span><br><span class="line">int main()&#123;</span><br><span class="line">int T;</span><br><span class="line">int tmpsum, index;</span><br><span class="line">int query;</span><br><span class="line">//freopen(&quot;./input.txt&quot;,&quot;r&quot;,stdin);</span><br><span class="line">scanf(&quot;%d&quot;,&amp;T);</span><br><span class="line">for( int cas = 1; cas &lt;= T ;cas ++ )&#123;</span><br><span class="line">scanf( &quot;%d%d&quot; , &amp;n ,&amp;m);</span><br><span class="line">memset( maxtrix,0,sizeof(maxtrix));</span><br><span class="line">for(int i= 1 ;i &lt;= m ; i++)&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;tmpsum);</span><br><span class="line">for(int j = 1 ; j &lt;= tmpsum ;j ++ )&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;index);</span><br><span class="line">maxtrix[index][i] = true;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">printf( &quot;Case %d:\n&quot;,cas);</span><br><span class="line">scanf(&quot;%d&quot;,&amp;query);</span><br><span class="line">while( query -- )&#123;</span><br><span class="line">for(int i = 1 ;i &lt;= n ;i ++)&#123;</span><br><span class="line">for(int j = 1 ; j &lt;= m; j++)&#123;</span><br><span class="line">copymaxtrix[i][j] = maxtrix[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">for(int i= 1 ;i &lt;= n ;i ++)&#123;</span><br><span class="line">scanf(&quot;%d&quot;,&amp;tmpsum);</span><br><span class="line">copymaxtrix[i][m+1] = tmpsum;  </span><br><span class="line">&#125;</span><br><span class="line">//print();</span><br><span class="line">ll ans = Gauss();</span><br><span class="line">if(ans == -1)&#123;</span><br><span class="line">printf(&quot;0\n&quot;); </span><br><span class="line">&#125;</span><br><span class="line">else &#123;</span><br><span class="line">printf(&quot;%lld\n&quot;,(ll)1&lt;&lt;ans);</span><br><span class="line">&#125; </span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;2018-暑期培训&quot;&gt;&lt;a href=&quot;#2018-暑期培训&quot; class=&quot;headerlink&quot; title=&quot;2018 暑期培训&quot;&gt;&lt;/a&gt;2018 暑期培训&lt;/h1&gt;&lt;hr&gt;
&lt;h2 id=&quot;差分约束&quot;&gt;&lt;a href=&quot;#差分约束&quot; class=&quot;hea
      
    
    </summary>
    
      <category term="algorithm" scheme="http://yoursite.com/categories/algorithm/"/>
    
    
      <category term="algorithm" scheme="http://yoursite.com/tags/algorithm/"/>
    
  </entry>
  
  <entry>
    <title>markdown</title>
    <link href="http://yoursite.com/2018/08/05/markdown/"/>
    <id>http://yoursite.com/2018/08/05/markdown/</id>
    <published>2018-08-05T04:38:22.000Z</published>
    <updated>2018-08-05T04:42:57.129Z</updated>
    
    <content type="html"><![CDATA[<h2 id="基本使用"><a href="#基本使用" class="headerlink" title="基本使用"></a>基本使用</h2><p><strong>马克编辑器</strong> 是一个全功能的 <code>markdown</code> 编辑器，它包含了以下特性：</p><ol><li>创建，编辑和预览 <code>markdown</code> 文档。</li><li>将你的文档同步到 <strong>Dropbox</strong>。</li><li>将你的文档通过 Email 发送给其他人。</li></ol><p>这个编辑器使用 <code>markdown</code> 语法，让你能够创造格式漂亮的文档。这个语法非常简单，和你使用纯为本几乎没什么区别。</p><h2 id="Markdown-语法"><a href="#Markdown-语法" class="headerlink" title="Markdown 语法"></a>Markdown 语法</h2><h3 id="标题"><a href="#标题" class="headerlink" title="标题"></a>标题</h3><hr><p>在行首输入 1－6 个 <code>#</code> 符号。符号的个数决定了标题的层级：</p><h1 id="1级标题"><a href="#1级标题" class="headerlink" title="1级标题"></a>1级标题</h1><h2 id="2级标题"><a href="#2级标题" class="headerlink" title="2级标题"></a>2级标题</h2><h3 id="3级标题"><a href="#3级标题" class="headerlink" title="3级标题"></a>3级标题</h3><h4 id="4级标题"><a href="#4级标题" class="headerlink" title="4级标题"></a>4级标题</h4><h5 id="5级标题"><a href="#5级标题" class="headerlink" title="5级标题"></a>5级标题</h5><h6 id="6级标题"><a href="#6级标题" class="headerlink" title="6级标题"></a>6级标题</h6><h3 id="强调"><a href="#强调" class="headerlink" title="强调"></a>强调</h3><hr><p>加粗：</p><p><strong>加粗文本</strong></p><p>斜体：</p><p><em>斜体文本</em></p><h3 id="链接"><a href="#链接" class="headerlink" title="链接"></a>链接</h3><hr><p><a href="http://example.com/" target="_blank" rel="noopener">链接文本</a></p><h3 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h3><hr><p><img src="http://lkl.mx/img/EkZYGsPBg" alt="图片标题"></p><h3 id="列表"><a href="#列表" class="headerlink" title="列表"></a>列表</h3><hr><p>有序列表:</p><ol><li>第一项</li><li>第二项</li><li>第三项</li></ol><p>无序列表:</p><ul><li>列表项</li><li>列表项</li><li>列表项</li></ul><h3 id="引用"><a href="#引用" class="headerlink" title="引用"></a>引用</h3><hr><blockquote><p>Stay hungry, stay foolish.</p></blockquote><h3 id="Code"><a href="#Code" class="headerlink" title="Code"></a>Code</h3><hr><p>行内代码：<code>foo.go()</code> .</p><p>多行代码：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">let app = &quot;Markdown&quot;</span><br><span class="line">print(&quot;Good&quot;)</span><br></pre></td></tr></table></figure></p><h3 id="缩紧代码"><a href="#缩紧代码" class="headerlink" title="缩紧代码"></a>缩紧代码</h3><hr><p>四个空格或者一个 Tab 表示缩进代码：</p><p>这是一个普通的段落。</p><pre><code>这是一个代码块</code></pre><h3 id="表格"><a href="#表格" class="headerlink" title="表格"></a>表格</h3><hr><p>简单的表格:</p><table><thead><tr><th>标题</th><th>标题</th><th>标题</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr></tbody></table><p>你还可以添加一些边框：</p><table><thead><tr><th>标题</th><th>标题</th><th>标题</th></tr></thead><tbody><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr><tr><td>单元格</td><td>单元格</td><td>单元格</td></tr></tbody></table><p>你可以控制单元格的对齐方式：</p><table><thead><tr><th style="text-align:left">标题</th><th style="text-align:center">标题</th><th style="text-align:right">标题</th></tr></thead><tbody><tr><td style="text-align:left">左</td><td style="text-align:center">中</td><td style="text-align:right">右</td></tr><tr><td style="text-align:left">左</td><td style="text-align:center">中</td><td style="text-align:right">右</td></tr></tbody></table><h3 id="删除"><a href="#删除" class="headerlink" title="删除"></a>删除</h3><hr><p><del>Strikethrough</del></p><h3 id="分割线"><a href="#分割线" class="headerlink" title="分割线"></a>分割线</h3><hr><p>三种类型的分割线:</p><hr><hr><hr><h3 id="换行"><a href="#换行" class="headerlink" title="换行"></a>换行</h3><hr><p>一 在行尾添加两个空格或者换行符代表换行：</p><p>这行的行尾油两个空格<br>这是一个新行。    </p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;基本使用&quot;&gt;&lt;a href=&quot;#基本使用&quot; class=&quot;headerlink&quot; title=&quot;基本使用&quot;&gt;&lt;/a&gt;基本使用&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;马克编辑器&lt;/strong&gt; 是一个全功能的 &lt;code&gt;markdown&lt;/code&gt; 编辑器，它包含了以
      
    
    </summary>
    
      <category term="categories" scheme="http://yoursite.com/categories/categories/"/>
    
    
      <category term="markdown" scheme="http://yoursite.com/tags/markdown/"/>
    
  </entry>
  
  <entry>
    <title>me</title>
    <link href="http://yoursite.com/2018/08/05/me/"/>
    <id>http://yoursite.com/2018/08/05/me/</id>
    <published>2018-08-05T02:44:57.000Z</published>
    <updated>2018-08-05T03:15:03.426Z</updated>
    
    <summary type="html">
    
    </summary>
    
      <category term="about" scheme="http://yoursite.com/categories/about/"/>
    
    
      <category term="about" scheme="http://yoursite.com/tags/about/"/>
    
  </entry>
  
</feed>
